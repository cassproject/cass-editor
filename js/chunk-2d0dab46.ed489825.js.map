{"version":3,"sources":["webpack:///./src/mixins/cassUtil.js"],"names":["cassUtil","name","data","methods","getOrganizationByEcPk","ecPk","successCallback","failureCallback","ecPkPem","toPem","paramObj","size","EcOrganization","search","window","repo","_ref","_asyncToGenerator","_regenerator","m","_callee","ecoa","_iterator","_step","o","groupPpkSet","_iterator2","_step2","gPpk","_t","_t2","_t3","w","_context","p","n","_createForOfIteratorHelper","s","done","value","getOrgKeys","v","toPk","equals","a","e","f","toString","_x","apply","arguments","err","getOrganizationEcPk","orgObj","_callee2","_t4","_context2","getCurrentOrgKey","getPersonEcPk","personObj","personFingerprint","generateProbablePersonFingerprintFromShortId","shortId","owner","_iterator3","_step3","pkPem","EcPk","fromPem","fingerprint","addAllOwnersFromObjectToObject","fromObj","toObj","_iterator4","_step4","addOwner","setDefaultBrowserConfigId","configId","localStorage","setItem","removeDefaultBrowserConfig","removeItem","getDefaultBrowserConfigId","getItem","getBooleanValue","val","equalsIgnoreCase","addAllIdentityPksAsOwners","obj","EcIdentityManager","default","ids","length","i","ppk","isObjectOwnerless","doesAnyIdentityOwnObject","isAdmin","canEditAny","getMyPks","item","adminKeys","userIds","Array","isArray","_iterator5","_step5","userId","userKey","_iterator6","_step6","adminKey","personShortId","substring","lastIndexOf","isPersonIdAnObjectOwner","_iterator7","_step7","ownerPkPem","ownerFingerprint","isPersonIdAnObjectReader","reader","_iterator8","_step8","readerPkPem","readerFingerprint","areAnyIdentitiesThisPerson","getFingerprint","isPersonalIdentityAnObjectOwner","personalIdentPkPem","getPersonalIdentityPk","includes","buildEcAlignmentsFromRemoteLinkedData","ecrlda","ecaa","_iterator9","_step9","ecrld","eca","EcAlignment","copyFrom","push","computed","amLoggedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,QAAQ,GAAG;EACpBC,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAANA,IAAIA,CAAA;IAAA,OAAS,CACb,CAAC;EAAA,CAAC;EACFC,OAAO,EAAE;IACLC,qBAAqB,WAArBA,qBAAqBA,CAACC,IAAI,EAAEC,eAAe,EAAEC,eAAe,EAAE;MAC1D,IAAIC,OAAO,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC;MAC1B,IAAIC,QAAQ,GAAG,CAAC,CAAC;MACjBA,QAAQ,CAACC,IAAI,GAAG,KAAK;MACrBC,cAAc,CAACC,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE,EAAE;QAAA,IAAAC,IAAA,GAAAC,4JAAA,cAAAC,uJAAA,GAAAC,CAAA,CACjC,SAAAC,QAAeC,IAAI;UAAA,IAAAC,SAAA,EAAAC,KAAA,EAAAC,CAAA,EAAAC,WAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;UAAA,OAAAb,uJAAA,GAAAc,CAAA,WAAAC,QAAA;YAAA,kBAAAA,QAAA,CAAAC,CAAA,GAAAD,QAAA,CAAAE,CAAA;cAAA;gBAAAb,SAAA,GAAAc,qKAAA,CACDf,IAAI;gBAAAY,QAAA,CAAAC,CAAA;gBAAAZ,SAAA,CAAAe,CAAA;cAAA;gBAAA,KAAAd,KAAA,GAAAD,SAAA,CAAAa,CAAA,IAAAG,IAAA;kBAAAL,QAAA,CAAAE,CAAA;kBAAA;gBAAA;gBAATX,CAAC,GAAAD,KAAA,CAAAgB,KAAA;gBAAAN,QAAA,CAAAC,CAAA;gBAAAD,QAAA,CAAAE,CAAA;gBAAA,OAEsBX,CAAC,CAACgB,UAAU,CAAC,CAAC;cAAA;gBAAlCf,WAAW,GAAAQ,QAAA,CAAAQ,CAAA;gBAAAf,UAAA,GAAAU,qKAAA,CACEX,WAAW;gBAAAQ,QAAA,CAAAC,CAAA;gBAAAR,UAAA,CAAAW,CAAA;cAAA;gBAAA,KAAAV,MAAA,GAAAD,UAAA,CAAAS,CAAA,IAAAG,IAAA;kBAAAL,QAAA,CAAAE,CAAA;kBAAA;gBAAA;gBAAnBP,IAAI,GAAAD,MAAA,CAAAY,KAAA;gBAAA,MACLX,IAAI,IAAIA,IAAI,CAACc,IAAI,CAAC,CAAC,CAACjC,KAAK,CAAC,CAAC,CAACkC,MAAM,CAACnC,OAAO,CAAC;kBAAAyB,QAAA,CAAAE,CAAA;kBAAA;gBAAA;gBAC3C7B,eAAe,CAACkB,CAAC,CAAC;gBAAC,OAAAS,QAAA,CAAAW,CAAA;cAAA;gBAAAX,QAAA,CAAAE,CAAA;gBAAA;cAAA;gBAAAF,QAAA,CAAAE,CAAA;gBAAA;cAAA;gBAAAF,QAAA,CAAAC,CAAA;gBAAAL,EAAA,GAAAI,QAAA,CAAAQ,CAAA;gBAAAf,UAAA,CAAAmB,CAAA,CAAAhB,EAAA;cAAA;gBAAAI,QAAA,CAAAC,CAAA;gBAAAR,UAAA,CAAAoB,CAAA;gBAAA,OAAAb,QAAA,CAAAa,CAAA;cAAA;gBAAAb,QAAA,CAAAE,CAAA;gBAAA;cAAA;gBAAAF,QAAA,CAAAC,CAAA;gBAAAJ,GAAA,GAAAG,QAAA,CAAAQ,CAAA;gBAK3B;gBACA;gBACA;gBACAlC,eAAe,CAACuB,GAAA,CAAEiB,QAAQ,CAAC,CAAC,CAAC;cAAC;gBAAAd,QAAA,CAAAE,CAAA;gBAAA;cAAA;gBAAAF,QAAA,CAAAE,CAAA;gBAAA;cAAA;gBAAAF,QAAA,CAAAC,CAAA;gBAAAH,GAAA,GAAAE,QAAA,CAAAQ,CAAA;gBAAAnB,SAAA,CAAAuB,CAAA,CAAAd,GAAA;cAAA;gBAAAE,QAAA,CAAAC,CAAA;gBAAAZ,SAAA,CAAAwB,CAAA;gBAAA,OAAAb,QAAA,CAAAa,CAAA;cAAA;gBAGtCxC,eAAe,CAAC,IAAI,CAAC;cAAC;gBAAA,OAAA2B,QAAA,CAAAW,CAAA;YAAA;UAAA,GAAAxB,OAAA;QAAA,CACzB;QAAA,iBAAA4B,EAAA;UAAA,OAAAhC,IAAA,CAAAiC,KAAA,OAAAC,SAAA;QAAA;MAAA,KACD,UAASC,GAAG,EAAE;QACV5C,eAAe,CAAC4C,GAAG,CAAC;MACxB,CAAC,EACDzC,QAAQ,CAAC;IACjB,CAAC;IACK0C,mBAAmB,WAAnBA,mBAAmBA,CAACC,MAAM,EAAE;MAAA,OAAApC,4JAAA,cAAAC,uJAAA,GAAAC,CAAA,UAAAmC,SAAA;QAAA,IAAAC,GAAA;QAAA,OAAArC,uJAAA,GAAAc,CAAA,WAAAwB,SAAA;UAAA,kBAAAA,SAAA,CAAAtB,CAAA,GAAAsB,SAAA,CAAArB,CAAA;YAAA;cAAAqB,SAAA,CAAAtB,CAAA;cAAAsB,SAAA,CAAArB,CAAA;cAAA,OAEZkB,MAAM,CAACI,gBAAgB,CAAC,CAAC;YAAA;cAAA,OAAAD,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAf,CAAA,CAAEC,IAAI;YAAA;cAAAc,SAAA,CAAAtB,CAAA;cAAAqB,GAAA,GAAAC,SAAA,CAAAf,CAAA;cAAA,OAAAe,SAAA,CAAAZ,CAAA,IAQtC,IAAI;UAAA;QAAA,GAAAU,QAAA;MAAA;IAEnB,CAAC;IACDI,aAAa,WAAbA,aAAaA,CAACC,SAAS,EAAE;MACrB,IAAIC,iBAAiB,GAAG,IAAI,CAACC,4CAA4C,CAACF,SAAS,CAACG,OAAO,CAAC,CAAC,CAAC;MAC9F,IAAIH,SAAS,CAACI,KAAK,EAAE;QAAA,IAAAC,UAAA,GAAA5B,qKAAA,CACCuB,SAAS,CAACI,KAAK;UAAAE,MAAA;QAAA;UAAjC,KAAAD,UAAA,CAAA3B,CAAA,MAAA4B,MAAA,GAAAD,UAAA,CAAA7B,CAAA,IAAAG,IAAA,GAAmC;YAAA,IAA1B4B,KAAK,GAAAD,MAAA,CAAA1B,KAAA;YACV,IAAIlC,IAAI,GAAG8D,IAAI,CAACC,OAAO,CAACF,KAAK,CAAC;YAC9B,IAAIN,iBAAiB,CAACjB,MAAM,CAACtC,IAAI,CAACgE,WAAW,CAAC,CAAC,CAAC,EAAE,OAAOhE,IAAI;UACjE;QAAC,SAAA8C,GAAA;UAAAa,UAAA,CAAAnB,CAAA,CAAAM,GAAA;QAAA;UAAAa,UAAA,CAAAlB,CAAA;QAAA;MACL;MACA,OAAO,IAAI;IACf,CAAC;IACDwB,8BAA8B,WAA9BA,8BAA8BA,CAACC,OAAO,EAAEC,KAAK,EAAE;MAC3C,IAAID,OAAO,IAAIA,OAAO,CAACR,KAAK,EAAE;QAAA,IAAAU,UAAA,GAAArC,qKAAA,CACRmC,OAAO,CAACR,KAAK;UAAAW,MAAA;QAAA;UAA/B,KAAAD,UAAA,CAAApC,CAAA,MAAAqC,MAAA,GAAAD,UAAA,CAAAtC,CAAA,IAAAG,IAAA,GAAiC;YAAA,IAAxB4B,KAAK,GAAAQ,MAAA,CAAAnC,KAAA;YACV,IAAIlC,IAAI,GAAG8D,IAAI,CAACC,OAAO,CAACF,KAAK,CAAC;YAC9BM,KAAK,CAACG,QAAQ,CAACtE,IAAI,CAAC;UACxB;QAAC,SAAA8C,GAAA;UAAAsB,UAAA,CAAA5B,CAAA,CAAAM,GAAA;QAAA;UAAAsB,UAAA,CAAA3B,CAAA;QAAA;MACL;IACJ,CAAC;IACD8B,yBAAyB,WAAzBA,yBAAyBA,CAACC,QAAQ,EAAE;MAChCC,YAAY,CAACC,OAAO,CAAC,yCAAyC,EAAEF,QAAQ,CAAC;IAC7E,CAAC;IACDG,0BAA0B,WAA1BA,0BAA0BA,CAAA,EAAG;MACzBF,YAAY,CAACG,UAAU,CAAC,yCAAyC,CAAC;IACtE,CAAC;IACDC,yBAAyB,WAAzBA,yBAAyBA,CAAA,EAAG;MACxB,OAAOJ,YAAY,CAACK,OAAO,CAAC,yCAAyC,CAAC;IAC1E,CAAC;IACDC,eAAe,WAAfA,eAAeA,CAACC,GAAG,EAAE;MACjB,IAAI,OAAOA,GAAG,KAAK,SAAS,EAAE,OAAOA,GAAG,CAAC,KACpC,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;QAC9B,IAAIA,GAAG,CAACC,gBAAgB,CAAC,MAAM,CAAC,EAAE,OAAO,IAAI,CAAC,KACzC,OAAO,KAAK;MACrB,CAAC,MAAM,OAAO,KAAK;IACvB,CAAC;IACDC,yBAAyB,WAAzBA,yBAAyBA,CAACC,GAAG,EAAE;MAC3B;MACA,IAAIC,iBAAiB,IAAIA,iBAAiB,CAACC,OAAO,CAACC,GAAG,IAAIF,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,GAAG,CAAC,EAAE;QAChG,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;UAC3DL,GAAG,CAACb,QAAQ,CAACc,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC,CAACC,GAAG,CAACpD,IAAI,CAAC,CAAC,CAAC;QAC7D;MACJ;IACJ,CAAC;IACDqD,iBAAiB,WAAjBA,iBAAiBA,CAACP,GAAG,EAAE;MACnB,IAAI,CAACA,GAAG,CAACzB,KAAK,IAAIyB,GAAG,CAACzB,KAAK,CAAC6B,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,KACjD,OAAO,KAAK;IACrB,CAAC;IACDI,wBAAwB,WAAxBA,wBAAwBA,CAACR,GAAG,EAAE;MAC1B,IAAI,IAAI,CAACS,OAAO,CAAC,CAAC,EAAE,OAAO,IAAI;MAC/B,IAAIT,GAAG,CAACU,UAAU,IAAI,IAAI,EAAE,OAAO,IAAI;MACvC,OAAOV,GAAG,CAACU,UAAU,CAACT,iBAAiB,CAACC,OAAO,CAACS,QAAQ,CAAC,CAAC,CAAC;IAC/D,CAAC;IACDD,UAAU,EAAE,SAAZA,UAAUA,CAAWE,IAAI,EAAE;MACvB,IAAI,IAAI,CAACH,OAAO,CAAC,CAAC,EAAE,OAAO,IAAI;MAC/B,IAAIG,IAAI,CAACF,UAAU,IAAI,IAAI,EAAE,OAAO,IAAI;MACxC,OAAOE,IAAI,CAACF,UAAU,CAACT,iBAAiB,CAACC,OAAO,CAACS,QAAQ,CAAC,CAAC,CAAC;IAChE,CAAC;IACDF,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAa;MAChB,IAAII,SAAS,GAAGvF,MAAM,CAACC,IAAI,CAACsF,SAAS;MACrC,IAAIC,OAAO,GAAGb,iBAAiB,CAACC,OAAO,CAACC,GAAG;MAC3C,IAAI,CAACY,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,EAAE,OAAO,KAAK;MAC3C,IAAI,CAACE,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE,OAAO,KAAK;MAAC,IAAAG,UAAA,GAAArE,qKAAA,CACvBkE,OAAO;QAAAI,MAAA;MAAA;QAA1B,KAAAD,UAAA,CAAApE,CAAA,MAAAqE,MAAA,GAAAD,UAAA,CAAAtE,CAAA,IAAAG,IAAA,GAA4B;UAAA,IAAnBqE,MAAM,GAAAD,MAAA,CAAAnE,KAAA;UACX,IAAIqE,OAAO,GAAGD,MAAM,CAACb,GAAG,CAACpD,IAAI,CAAC,CAAC,CAACjC,KAAK,CAAC,CAAC;UAAC,IAAAoG,UAAA,GAAAzE,qKAAA,CACnBiE,SAAS;YAAAS,MAAA;UAAA;YAA9B,KAAAD,UAAA,CAAAxE,CAAA,MAAAyE,MAAA,GAAAD,UAAA,CAAA1E,CAAA,IAAAG,IAAA,GAAgC;cAAA,IAAvByE,QAAQ,GAAAD,MAAA,CAAAvE,KAAA;cACb,IAAIqE,OAAO,KAAKG,QAAQ,EAAE;gBACtB,OAAO,IAAI;cACf;YACJ;UAAC,SAAA5D,GAAA;YAAA0D,UAAA,CAAAhE,CAAA,CAAAM,GAAA;UAAA;YAAA0D,UAAA,CAAA/D,CAAA;UAAA;QACL;MAAC,SAAAK,GAAA;QAAAsD,UAAA,CAAA5D,CAAA,CAAAM,GAAA;MAAA;QAAAsD,UAAA,CAAA3D,CAAA;MAAA;MACD,OAAO,KAAK;IAChB,CAAC;IACDe,4CAA4C,WAA5CA,4CAA4CA,CAACmD,aAAa,EAAE;MACxD,OAAOA,aAAa,CAACC,SAAS,CAACD,aAAa,CAACE,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACtE,CAAC;IACDC,uBAAuB,WAAvBA,uBAAuBA,CAACH,aAAa,EAAExB,GAAG,EAAE;MACxC,IAAI,CAACA,GAAG,CAACzB,KAAK,IAAIyB,GAAG,CAACzB,KAAK,CAAC6B,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;MACtD,IAAIhC,iBAAiB,GAAG,IAAI,CAACC,4CAA4C,CAACmD,aAAa,CAAC;MAAC,IAAAI,UAAA,GAAAhF,qKAAA,CAClEoD,GAAG,CAACzB,KAAK;QAAAsD,MAAA;MAAA;QAAhC,KAAAD,UAAA,CAAA/E,CAAA,MAAAgF,MAAA,GAAAD,UAAA,CAAAjF,CAAA,IAAAG,IAAA,GAAkC;UAAA,IAAzBgF,UAAU,GAAAD,MAAA,CAAA9E,KAAA;UACf,IAAIgF,gBAAgB,GAAGpD,IAAI,CAACC,OAAO,CAACkD,UAAU,CAAC,CAACjD,WAAW,CAAC,CAAC;UAC7D,IAAIkD,gBAAgB,CAAC5E,MAAM,CAACiB,iBAAiB,CAAC,EAAE,OAAO,IAAI;QAC/D;MAAC,SAAAT,GAAA;QAAAiE,UAAA,CAAAvE,CAAA,CAAAM,GAAA;MAAA;QAAAiE,UAAA,CAAAtE,CAAA;MAAA;MACD,OAAO,KAAK;IAChB,CAAC;IACD0E,wBAAwB,WAAxBA,wBAAwBA,CAACR,aAAa,EAAExB,GAAG,EAAE;MACzC,IAAI,CAACA,GAAG,CAACiC,MAAM,IAAIjC,GAAG,CAACiC,MAAM,CAAC7B,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;MACxD,IAAIhC,iBAAiB,GAAG,IAAI,CAACC,4CAA4C,CAACmD,aAAa,CAAC;MAAC,IAAAU,UAAA,GAAAtF,qKAAA,CACjEoD,GAAG,CAACiC,MAAM;QAAAE,MAAA;MAAA;QAAlC,KAAAD,UAAA,CAAArF,CAAA,MAAAsF,MAAA,GAAAD,UAAA,CAAAvF,CAAA,IAAAG,IAAA,GAAoC;UAAA,IAA3BsF,WAAW,GAAAD,MAAA,CAAApF,KAAA;UAChB,IAAIsF,iBAAiB,GAAG1D,IAAI,CAACC,OAAO,CAACwD,WAAW,CAAC,CAACvD,WAAW,CAAC,CAAC;UAC/D,IAAIwD,iBAAiB,CAAClF,MAAM,CAACiB,iBAAiB,CAAC,EAAE,OAAO,IAAI;QAChE;QACA;MAAA,SAAAT,GAAA;QAAAuE,UAAA,CAAA7E,CAAA,CAAAM,GAAA;MAAA;QAAAuE,UAAA,CAAA5E,CAAA;MAAA;MACA,OAAO,KAAK;IAChB,CAAC;IACDgF,0BAA0B,WAA1BA,0BAA0BA,CAACnE,SAAS,EAAE;MAClC,IAAIC,iBAAiB,GAAGD,SAAS,CAACoE,cAAc,CAAC,CAAC;MAClD,IAAItC,iBAAiB,IAAIA,iBAAiB,CAACC,OAAO,CAACC,GAAG,IAAIF,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,GAAG,CAAC,EAAE;QAChG,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;UAC3D,IAAIJ,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC,CAACC,GAAG,CAACpD,IAAI,CAAC,CAAC,CAAC2B,WAAW,CAAC,CAAC,CAAC1B,MAAM,CAACiB,iBAAiB,CAAC,EAAE,OAAO,IAAI;QACxG;MACJ;MACA,OAAO,KAAK;IAChB,CAAC;IACDoE,+BAA+B,WAA/BA,+BAA+BA,CAACxC,GAAG,EAAE;MACjC,IAAI,IAAI,CAACS,OAAO,CAAC,CAAC,EAAE,OAAO,IAAI;MAC/B,IAAI,CAACT,GAAG,CAACzB,KAAK,IAAIyB,GAAG,CAACzB,KAAK,CAAC6B,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;MACtD,IAAIqC,kBAAkB,GAAG,IAAI,CAACC,qBAAqB,CAAC,CAAC,CAACzH,KAAK,CAAC,CAAC;MAC7D,OAAO+E,GAAG,CAACzB,KAAK,CAACoE,QAAQ,CAACF,kBAAkB,CAAC;IACjD,CAAC;IACDC,qBAAqB,WAArBA,qBAAqBA,CAAA,EAAG;MACpB;MACA,IAAIzC,iBAAiB,IAAIA,iBAAiB,CAACC,OAAO,CAACC,GAAG,IAAIF,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,GAAG,CAAC,EAAE;QAChG,OAAOH,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,CAACG,GAAG,CAACpD,IAAI,CAAC,CAAC;MACtD,CAAC,MAAM,OAAO,IAAI;IACtB,CAAC;IACD0F,qCAAqC,WAArCA,qCAAqCA,CAACC,MAAM,EAAE;MAC1C,IAAIC,IAAI,GAAG,EAAE;MAAC,IAAAC,UAAA,GAAAnG,qKAAA,CACIiG,MAAM;QAAAG,MAAA;MAAA;QAAxB,KAAAD,UAAA,CAAAlG,CAAA,MAAAmG,MAAA,GAAAD,UAAA,CAAApG,CAAA,IAAAG,IAAA,GAA0B;UAAA,IAAjBmG,KAAK,GAAAD,MAAA,CAAAjG,KAAA;UACV,IAAImG,GAAG,GAAG,IAAIC,WAAW,CAAC,CAAC;UAC3BD,GAAG,CAACE,QAAQ,CAACH,KAAK,CAAC;UACnBH,IAAI,CAACO,IAAI,CAACH,GAAG,CAAC;QAClB;MAAC,SAAAvF,GAAA;QAAAoF,UAAA,CAAA1F,CAAA,CAAAM,GAAA;MAAA;QAAAoF,UAAA,CAAAzF,CAAA;MAAA;MACD,OAAOwF,IAAI;IACf;EACJ,CAAC;EACDQ,QAAQ,EAAE;IACNC,UAAU,EAAE,SAAZA,UAAUA,CAAA,EAAa;MACnB,IAAItD,iBAAiB,IAAIA,iBAAiB,CAACC,OAAO,CAACC,GAAG,IAAIF,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,KAC3G,OAAO,KAAK;IACrB;EACJ;AACJ,CAAC,C","file":"js/chunk-2d0dab46.ed489825.js","sourcesContent":["export const cassUtil = {\n    name: 'cassUtil',\n    data: () => ({\n    }),\n    methods: {\n        getOrganizationByEcPk(ecPk, successCallback, failureCallback) {\n            let ecPkPem = ecPk.toPem();\n            let paramObj = {};\n            paramObj.size = 10000;\n            EcOrganization.search(window.repo, '',\n                async function(ecoa) {\n                    for (let o of ecoa) {\n                        try {\n                            let groupPpkSet = await o.getOrgKeys();\n                            for (let gPpk of groupPpkSet) {\n                                if (gPpk && gPpk.toPk().toPem().equals(ecPkPem)) {\n                                    successCallback(o);\n                                    return;\n                                }\n                            }\n                        } catch (e) {\n                            // TODO Problem with EcOrganization update and creating encrypted value when only a reader...\n                            // Anticipated workaround....login as group owner and save it.\n                            // console.error(\"TODO...fix this...needs FRITZ input!!!!: \" + e.toString());\n                            failureCallback(e.toString());\n                        }\n                    }\n                    successCallback(null);\n                },\n                function(err) {\n                    failureCallback(err);\n                },\n                paramObj);\n        },\n        async getOrganizationEcPk(orgObj) {\n            try {\n                return (await orgObj.getCurrentOrgKey()).toPk();\n                // let orgEvPpk = new EcEncryptedValue();\n                // orgEvPpk.copyFrom(orgObj[this.GROUP_PPK_KEY]);\n                // let orgPpk = EcPpk.fromPem(orgEvPpk.decryptIntoString());\n                // return orgPpk.toPk();\n            } catch (e) {\n                // TODO Problem with EcOrganization update and creating encrypted value when only a reader...\n                // Anticipated workaround....login as group owner and save it.\n                return null;\n            }\n        },\n        getPersonEcPk(personObj) {\n            let personFingerprint = this.generateProbablePersonFingerprintFromShortId(personObj.shortId());\n            if (personObj.owner) {\n                for (let pkPem of personObj.owner) {\n                    let ecPk = EcPk.fromPem(pkPem);\n                    if (personFingerprint.equals(ecPk.fingerprint())) return ecPk;\n                }\n            }\n            return null;\n        },\n        addAllOwnersFromObjectToObject(fromObj, toObj) {\n            if (fromObj && fromObj.owner) {\n                for (let pkPem of fromObj.owner) {\n                    let ecPk = EcPk.fromPem(pkPem);\n                    toObj.addOwner(ecPk);\n                }\n            }\n        },\n        setDefaultBrowserConfigId(configId) {\n            localStorage.setItem(\"cassAuthoringToolDefaultBrowserConfigId\", configId);\n        },\n        removeDefaultBrowserConfig() {\n            localStorage.removeItem(\"cassAuthoringToolDefaultBrowserConfigId\");\n        },\n        getDefaultBrowserConfigId() {\n            return localStorage.getItem(\"cassAuthoringToolDefaultBrowserConfigId\");\n        },\n        getBooleanValue(val) {\n            if (typeof val === 'boolean') return val;\n            else if (typeof val === 'string') {\n                if (val.equalsIgnoreCase('true')) return true;\n                else return false;\n            } else return false;\n        },\n        addAllIdentityPksAsOwners(obj) {\n            // let isEcrld = (obj instanceOf EcRemoteLinkedData);\n            if (EcIdentityManager && EcIdentityManager.default.ids && EcIdentityManager.default.ids.length > 0) {\n                for (let i = 0; i < EcIdentityManager.default.ids.length; i++) {\n                    obj.addOwner(EcIdentityManager.default.ids[i].ppk.toPk());\n                }\n            }\n        },\n        isObjectOwnerless(obj) {\n            if (!obj.owner || obj.owner.length === 0) return true;\n            else return false;\n        },\n        doesAnyIdentityOwnObject(obj) {\n            if (this.isAdmin()) return true;\n            if (obj.canEditAny == null) return true;\n            return obj.canEditAny(EcIdentityManager.default.getMyPks());\n        },\n        canEditAny: function(item) {\n            if (this.isAdmin()) return true;\n            if (item.canEditAny == null) return true;\n            return item.canEditAny(EcIdentityManager.default.getMyPks());\n        },\n        isAdmin: function() {\n            let adminKeys = window.repo.adminKeys;\n            let userIds = EcIdentityManager.default.ids;\n            if (!Array.isArray(adminKeys)) return false;\n            if (!Array.isArray(userIds)) return false;\n            for (let userId of userIds) {\n                let userKey = userId.ppk.toPk().toPem();\n                for (let adminKey of adminKeys) {\n                    if (userKey === adminKey) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        generateProbablePersonFingerprintFromShortId(personShortId) {\n            return personShortId.substring(personShortId.lastIndexOf(\"/\") + 1);\n        },\n        isPersonIdAnObjectOwner(personShortId, obj) {\n            if (!obj.owner || obj.owner.length === 0) return false;\n            let personFingerprint = this.generateProbablePersonFingerprintFromShortId(personShortId);\n            for (let ownerPkPem of obj.owner) {\n                let ownerFingerprint = EcPk.fromPem(ownerPkPem).fingerprint();\n                if (ownerFingerprint.equals(personFingerprint)) return true;\n            }\n            return false;\n        },\n        isPersonIdAnObjectReader(personShortId, obj) {\n            if (!obj.reader || obj.reader.length === 0) return false;\n            let personFingerprint = this.generateProbablePersonFingerprintFromShortId(personShortId);\n            for (let readerPkPem of obj.reader) {\n                let readerFingerprint = EcPk.fromPem(readerPkPem).fingerprint();\n                if (readerFingerprint.equals(personFingerprint)) return true;\n            }\n            // return obj.hasReader(EcPk.fromPem(pkPem));\n            return false;\n        },\n        areAnyIdentitiesThisPerson(personObj) {\n            let personFingerprint = personObj.getFingerprint();\n            if (EcIdentityManager && EcIdentityManager.default.ids && EcIdentityManager.default.ids.length > 0) {\n                for (let i = 0; i < EcIdentityManager.default.ids.length; i++) {\n                    if (EcIdentityManager.default.ids[i].ppk.toPk().fingerprint().equals(personFingerprint)) return true;\n                }\n            }\n            return false;\n        },\n        isPersonalIdentityAnObjectOwner(obj) {\n            if (this.isAdmin()) return true;\n            if (!obj.owner || obj.owner.length === 0) return false;\n            let personalIdentPkPem = this.getPersonalIdentityPk().toPem();\n            return obj.owner.includes(personalIdentPkPem);\n        },\n        getPersonalIdentityPk() {\n            // assuming that the first identity is the user's personal identity\n            if (EcIdentityManager && EcIdentityManager.default.ids && EcIdentityManager.default.ids.length > 0) {\n                return EcIdentityManager.default.ids[0].ppk.toPk();\n            } else return null;\n        },\n        buildEcAlignmentsFromRemoteLinkedData(ecrlda) {\n            let ecaa = [];\n            for (let ecrld of ecrlda) {\n                let eca = new EcAlignment();\n                eca.copyFrom(ecrld);\n                ecaa.push(eca);\n            }\n            return ecaa;\n        }\n    },\n    computed: {\n        amLoggedIn: function() {\n            if (EcIdentityManager && EcIdentityManager.default.ids && EcIdentityManager.default.ids.length > 0) return true;\n            else return false;\n        }\n    }\n};\n\n"],"sourceRoot":""}