{"version":3,"sources":["webpack:///./src/lode/components/Assertion.vue?4d34","webpack:///src/lode/components/Assertion.vue","webpack:///./src/lode/components/Assertion.vue?77a1","webpack:///./src/lode/components/Assertion.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","callback","initialize","once","expression","staticClass","_v","_s","agent","timeAgo","_e","subject","_l","evidenceThing","index","key","attrs","url","text","badgeUrl","staticRenderFns","props","uri","icon","data","assertion","subjectPk","agentPk","timestamp","expiry","competency","negative","agentPerson","subjectPerson","evidence","evidenceExplanation","computed","ok","statement","competencyText","evidenceText","fingerprintUrl","badged","watch","methods","EcAssertion","catch","appError","i","EcCompetency","gotoCompetency","getAgent","EcPerson","p","getSubject","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,qBAAqBC,QAAQ,uBAAuBC,MAAM,CAAEC,SAAUV,EAAIW,WAAWC,MAAM,GAAOC,WAAW,sCAAsCC,YAAY,aAAa,CAACV,EAAG,OAAO,CAAEJ,EAAM,GAAEI,EAAG,KAAK,CAACA,EAAG,SAAS,CAACJ,EAAIe,GAAGf,EAAIgB,GAAGhB,EAAIiB,UAAWjB,EAAa,UAAEI,EAAG,OAAO,CAACJ,EAAIe,GAAG,YAAYf,EAAIgB,GAAGhB,EAAIkB,SAAS,OAAOlB,EAAImB,KAAKf,EAAG,OAAO,CAACU,YAAY,sBAAsB,CAAEd,EAAY,SAAEI,EAAG,OAAO,CAACA,EAAG,SAAS,CAACJ,EAAIe,GAAG,IAAIf,EAAIgB,GAAGhB,EAAIoB,YAAYpB,EAAIe,GAAG,oBAAoBX,EAAG,OAAO,CAACA,EAAG,SAAS,CAACJ,EAAIe,GAAG,IAAIf,EAAIgB,GAAGhB,EAAIoB,YAAYpB,EAAIe,GAAG,kBAAmBf,EAAgB,aAAEI,EAAG,OAAO,CAACJ,EAAIe,GAAG,kBAAkBf,EAAIqB,GAAIrB,EAAgB,cAAE,SAASsB,EAAcC,GAAO,OAAOnB,EAAG,OAAO,CAACoB,IAAID,GAAO,CAAW,GAATA,EAAYnB,EAAG,OAAO,CAACJ,EAAIe,GAAG,gBAAgBf,EAAImB,KAAMG,EAAiB,IAAElB,EAAG,IAAI,CAACqB,MAAM,CAAC,KAAOH,EAAcI,IAAI,OAAS,WAAW,CAAC1B,EAAIe,GAAG,IAAIf,EAAIgB,GAAGM,EAAcK,SAASvB,EAAG,OAAO,CAACJ,EAAIe,GAAG,IAAIf,EAAIgB,GAAGM,EAAcK,eAAc,GAAG3B,EAAImB,KAAMnB,EAAU,OAAEI,EAAG,OAAO,CAACJ,EAAIe,GAAG,yBAAyBX,EAAG,IAAI,CAACqB,MAAM,CAAC,KAAOzB,EAAI4B,WAAW,CAAC5B,EAAIe,GAAG,aAAaf,EAAImB,KAAKnB,EAAIe,GAAG,UAAUf,EAAImB,UACvrCU,EAAkB,GC8BP,G,8BAAA,CACftB,iBACAuB,OACAC,WACAC,cAEAC,gBACA,OACAC,eACAC,eACAC,aACAnB,WACAoB,eACAC,YACAC,gBACAC,cACAC,iBACAC,mBACAC,cACAC,yBACAxB,eAGAyB,UACAC,cACA,4BAIA,kBAIA,wBAMAC,qBACA,sBACA,sBAGA,oBACA,sBAGA,yBACA,sBAGA,SAcA,OAbA,uBACAA,gDAGAA,wCAEA,kBACAA,iBAEAA,aAGAA,4CACA,GAEA7B,mBACA,4BACA,KAEA,wCAEA8B,0BACA,6BACA,KAEA,sBAEAC,wBACA,iCAEAC,0BACA,8BACA,KAEA,6BACA,8FAEA,8GAEAC,kBACA,6BAGA,iEAEAvB,oBACA,6BACA,gEACA,2FAGA,KAGAwB,OACAT,uBAAA,WACA,8BACA,qBACA,wBACA,8EACA,wBACA,gCAOAU,SACA1C,yBAAA,WACA,GACA2C,sCAwCA,GAvCA,cACA,gBACA,oBAEApB,gDACA,eACAqB,MAAAC,UACAtB,+BACA,wBACAsB,WAEA,cACA,iBAEAtB,8CACA,aACAqB,MAAAC,UAEAtB,6BACA,oBACA,eACAsB,UACA,uBACAtB,qCACA,gBACAsB,UAEA,wBACAtB,sCACA,aACAsB,UAEA,iBACAtB,gCACA,eACAsB,UAEA,cAEA,iBACA,wCACA,YACAtB,kCACA,mBACA,eAEA,mBACA,6BACAsB,WAPA,CAQAC,GAGAC,2CACA,iBACAF,YACAA,WAGAG,4BAiBAC,oBAAA,WACA,sBACA,WACAC,+EACA,iBACA,8BACA,aACAC,uDACAA,cACA,qBACAA,yBAEAA,qBAEA,qBAEA,sBAEA,YACA,8BACA,aACAA,uDACAA,cACA,qBACAA,yBAEAA,qBAEA,oBAGAC,sBAAA,WACA,sBACA,WACAF,iFACA,iBACA,gCACA,aACAC,uDACAA,cACA,qBACAA,yBAEAA,qBAEA,uBAEA,wBAEA,YACA,gCACA,aACAA,uDACAA,cACA,qBACAA,yBAEAA,qBAEA,yBClSkW,I,YCO9VE,EAAY,eACd,EACAjE,EACA8B,GACA,EACA,KACA,KACA,MAIa,aAAAmC,E","file":"js/chunk-2d21eb37.46e9f5bd.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{directives:[{name:\"observe-visibility\",rawName:\"v-observe-visibility\",value:({callback: _vm.initialize,once: true}),expression:\"{callback: initialize,once: true}\"}],staticClass:\"assertion\"},[_c('span',[(_vm.ok)?_c('li',[_c('strong',[_vm._v(_vm._s(_vm.agent))]),(_vm.timestamp)?_c('span',[_vm._v(\" claimed \"+_vm._s(_vm.timeAgo)+\":\")]):_vm._e(),_c('span',{staticClass:\"statement antitile\"},[(_vm.negative)?_c('span',[_c('strong',[_vm._v(\" \"+_vm._s(_vm.subject))]),_vm._v(\" can't do this\")]):_c('span',[_c('strong',[_vm._v(\" \"+_vm._s(_vm.subject))]),_vm._v(\" can do this\")]),(_vm.evidenceText)?_c('span',[_vm._v(\" because they \"),_vm._l((_vm.evidenceText),function(evidenceThing,index){return _c('span',{key:index},[(index != 0)?_c('span',[_vm._v(\" and they \")]):_vm._e(),(evidenceThing.url)?_c('a',{attrs:{\"href\":evidenceThing.url,\"target\":\"_blank\"}},[_vm._v(\" \"+_vm._s(evidenceThing.text))]):_c('span',[_vm._v(\" \"+_vm._s(evidenceThing.text))])])})],2):_vm._e(),(_vm.badged)?_c('span',[_vm._v(\" and I issued them a \"),_c('a',{attrs:{\"href\":_vm.badgeUrl}},[_vm._v(\"badge\")])]):_vm._e(),_vm._v(\". \")])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <span\n        class=\"assertion\"\n        v-observe-visibility=\"{callback: initialize,once: true}\">\n        <span>\n            <li v-if=\"ok\">\n                <strong>{{ agent }}</strong>\n                <span v-if=\"timestamp\"> claimed {{ timeAgo }}:</span>\n                <span class=\"statement antitile\">\n                    <span v-if=\"negative\"><strong> {{ subject }}</strong> can't do this</span>\n                    <span v-else><strong> {{ subject }}</strong> can do this</span>\n                    <span v-if=\"evidenceText\"> because they\n                        <span\n                            v-for=\"(evidenceThing, index) in evidenceText\"\n                            :key=\"index\">\n                            <span v-if=\"index != 0\"> and they </span>\n                            <a\n                                v-if=\"evidenceThing.url\"\n                                :href=\"evidenceThing.url\"\n                                target=\"_blank\"> {{ evidenceThing.text }}</a>\n                            <span v-else> {{ evidenceThing.text }}</span>\n                        </span>\n                    </span>\n                    <span v-if=\"badged\"> and I issued them a <a :href=\"badgeUrl\">badge</a></span>.\n                </span>\n            </li>\n        </span>\n    </span>\n</template>\n<script>\n\nexport default {\n    name: 'Assertion',\n    props: {\n        uri: String,\n        icon: Boolean\n    },\n    data: function() {\n        return {\n            assertion: null,\n            subjectPk: null,\n            agentPk: null,\n            agent: null,\n            timestamp: null,\n            expiry: null,\n            competency: null,\n            negative: null,\n            agentPerson: null,\n            subjectPerson: null,\n            evidence: null,\n            evidenceExplanation: null,\n            subject: null\n        };\n    },\n    computed: {\n        ok: function() {\n            if (this.subject == null) {\n                return false;\n            }\n\n            if (this.agent == null) {\n                return false;\n            }\n\n            if (this.competency == null) {\n                return false;\n            }\n\n            return true;\n        },\n        statement: function() {\n            if (this.subject == null) {\n                return \"Decrypting...\";\n            }\n\n            if (this.agent == null) {\n                return \"Decrypting...\";\n            }\n\n            if (this.competency == null) {\n                return \"Decrypting...\";\n            }\n\n            var statement = \"\";\n            if (this.timestamp != null) {\n                statement += this.$moment(this.timestamp).fromNow() + \", \";\n            }\n\n            statement += this.agent + \" claimed \" + this.subject;\n\n            if (this.negative === true) {\n                statement += \" could not \";\n            } else {\n                statement += \" could \";\n            }\n\n            statement += \"demonstrate \\\"\" + this.competencyText + \"\\\".\";\n            return statement;\n        },\n        timeAgo: function() {\n            if (this.timestamp == null) {\n                return null;\n            }\n            return this.$moment(this.timestamp).fromNow();\n        },\n        competencyText: function() {\n            if (this.competency == null) {\n                return null;\n            }\n            return this.competency.name;\n        },\n        evidenceText: function() {\n            return this.evidenceExplanation;\n        },\n        fingerprintUrl: function() {\n            if (this.agentPerson == null) {\n                return null;\n            }\n            if (this.agentPerson.email != null) {\n                return \"https://www.gravatar.com/avatar/\" + EcCrypto.md5(this.agentPerson.email.toLowerCase()) + \"?s=22\";\n            }\n            return \"http://tinygraphs.com/spaceinvaders/\" + this.agentPerson.getGuid() + \"?theme=base&numcolors=16&size=22&fmt=svg\";\n        },\n        badged: function() {\n            if (this.assertion == null) {\n                return false;\n            }\n            return this.assertion.hasReader(this.$store.getters['editor/badgePk']);\n        },\n        badgeUrl: function() {\n            if (this.assertion != null) {\n                if (this.assertion.hasReader(this.$store.getters['editor/badgePk'])) {\n                    return EcRemote.urlAppend(window.repo.selectedServer, \"badge/assertion/\") + this.assertion.getGuid();\n                }\n            }\n            return \"\";\n        }\n    },\n    watch: {\n        evidence: function(oldEvidence, newEvidence) {\n            this.evidenceExplanation = null;\n            if (this.evidence != null) {\n                if (this.evidence.length > 0) {\n                    this.$store.dispatch('editor/computeBecause', this.evidence).then((because) => {\n                        this.$nextTick(() => {\n                            this.evidenceExplanation = because;\n                        });\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        initialize: function(isVisible, entry) {\n            if (isVisible) {\n                EcAssertion.get(this.uri, (assertion) => {\n                    this.assertion = assertion;\n                    if (assertion.subject == null) {\n                        this.subject = \"nobody\";\n                    } else {\n                        assertion.getSubjectName(window.repo).then((name) => {\n                            this.subject = name;\n                        }).catch(appError);\n                        assertion.getSubjectAsync((pk) => {\n                            this.subjectPk = pk.toPem();\n                        }, appError);\n                    }\n                    if (assertion.agent == null) {\n                        this.agent = \"nobody\";\n                    } else {\n                        assertion.getAgentName(window.repo).then((name) => {\n                            this.agent = name;\n                        }).catch(appError);\n                    }\n                    assertion.getAgentAsync((pk) => {\n                        this.agentPk = pk.toPem();\n                        this.getAgent();\n                    }, appError);\n                    if (assertion.assertionDate != null) {\n                        assertion.getAssertionDateAsync((assertionDate) => {\n                            this.timestamp = assertionDate;\n                        }, appError);\n                    }\n                    if (assertion.expirationDate != null) {\n                        assertion.getExpirationDateAsync((expirationDate) => {\n                            this.expiry = expirationDate;\n                        }, appError);\n                    }\n                    if (assertion.negative != null) {\n                        assertion.getNegativeAsync((negative) => {\n                            this.negative = negative;\n                        }, appError);\n                    } else {\n                        this.negative = false;\n                    }\n                    if (assertion.evidence != null) {\n                        for (var i = 0; i < assertion.getEvidenceCount(); i++) {\n                            ((i) => {\n                                assertion.getEvidenceAsync(i, (evidence) => {\n                                    if (this.evidence == null) {\n                                        this.evidence = [];\n                                    }\n                                    this.evidence.push(evidence);\n                                    this.evidenceExplanation = null;\n                                }, appError);\n                            })(i);\n                        }\n                    }\n                    EcCompetency.get(assertion.competency, (competency) => {\n                        this.competency = competency;\n                    }, appError);\n                }, appError);\n            }\n        },\n        gotoCompetency: function() {\n            // TODO\n            // EcFramework.search(repo, \"competency:\\\"\" + this.assertion.competency + \"\\\"\", (frameworks) => {\n            //     if (frameworks.length > 0) {\n            //         app.selectedFramework = frameworks[0];\n            //         app.selectedCompetency = EcCompetency.getBlocking(me.assertion.competency);\n            //         app.subject = me.assertion.getSubject().toPem();\n            //         $(\"#rad2\").click();\n            //         setTimeout(\n            //             function () {\n            //                 $(\"[id=\\\"\" + app.selectedCompetency.id + \"\\\"]\").each(function () {\n            //                     $(this)[0].scrollIntoView();\n            //                 })\n            //             }, 1000);\n            //     }\n            // }, appError);\n        },\n        getAgent: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.agentPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.agentPk);\n                    var p = new Person();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.agentPerson = p;\n                } else {\n                    this.agentPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.agentPk);\n                var p = new Person();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.agentPerson = p;\n            });\n        },\n        getSubject: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.subjectPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.subjectPk);\n                    var p = new Person();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.subjectPerson = p;\n                } else {\n                    this.subjectPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.subjectPk);\n                var p = new Person();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.subjectPerson = p;\n            });\n        }\n    }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Assertion.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Assertion.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Assertion.vue?vue&type=template&id=9b6f9e24&\"\nimport script from \"./Assertion.vue?vue&type=script&lang=js&\"\nexport * from \"./Assertion.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}