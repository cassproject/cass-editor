{"version":3,"sources":["webpack:///./src/lode/components/TimelineElement.vue","webpack:///src/lode/components/TimelineElement.vue","webpack:///./src/lode/components/TimelineElement.vue?9ec9","webpack:///./src/lode/components/TimelineElement.vue?a50d"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","callback","initialize","expression","staticClass","ok","negative","badged","_v","_s","agent","subject","attrs","assertion","competency","on","gotoCompetency","competencyName","frameworkName","_e","evidenceText","_l","evidenceThing","index","key","url","text","badgeUrl","style","invisible","deleteMe","competencyDescription","timestamp","timeAgo","staticRenderFns","mixins","common","props","uri","String","data","subjectPk","agentPk","expiry","agentPerson","subjectPerson","evidence","evidenceExplanation","computed","$moment","fromNow","assertions","$store","getters","getName","framework","getDescription","fingerprintUrlAgent","email","EcCrypto","md5","toLowerCase","fingerprintUrlSubject","fingerprintAgent","getGuid","fingerprintSubject","mine","owner","length","hasOwner","EcIdentityManager","default","ids","ppk","toPk","hasReader","EcRemote","urlAppend","repo","selectedServer","destroyed","clearInterval","invl","watch","oldEvidence","newEvidence","_this","count","dispatch","then","because","$nextTick","methods","isVisible","entry","once","getAssertion","_getAssertion","_asyncToGenerator","_regeneratorRuntime","mark","_callee","i","_this2","wrap","_context","prev","next","EcAssertion","get","sent","getSubjectName","window","getSubjectAsync","pk","toPem","getSubject","appError","getAgentName","getAgentAsync","getAgent","assertionDate","getAssertionDateAsync","expirationDate","getExpirationDateAsync","getNegativeAsync","getEvidenceCount","getEvidenceAsync","push","EcFramework","EcCompetency","id","commit","stop","_x","_x2","apply","arguments","_this3","search","success","canViewCommentsCurrentFramework","canAddCommentsCurrentFramework","$router","params","frameworkId","catch","_this4","me","EcPerson","EcPk","fromPem","fingerprint","persons","p","assignId","addOwner","displayName","failure","_this5","_this6","confirm","EcRepository","resource","_delete","component"],"mappings":"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","file":"js/chunk-2d0daac9.ac883148.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"observe-visibility\",rawName:\"v-observe-visibility\",value:({callback: _vm.initialize}),expression:\"{callback: initialize}\"}],staticClass:\"timelineElement\"},[(_vm.ok)?_c('span',[(_vm.negative)?_c('div',{staticClass:\"assertionTimelineIcon negative\"},[_c('i',{staticClass:\"fa fa-times\"})]):(_vm.badged)?_c('div',{staticClass:\"assertionTimelineIcon badged\"},[_c('i',{staticClass:\"fa fa-shield-alt\"})]):_c('div',{staticClass:\"assertionTimelineIcon positive\"},[_c('i',{staticClass:\"fa fa-check\"})]),_c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"timelineElementTextContainer\"},[_c('div',[_c('strong',{staticClass:\"agentName\"},[_vm._v(_vm._s(_vm.agent))]),_vm._v(\" claimed \"),_c('strong',{staticClass:\"subjectName\"},[_vm._v(_vm._s(_vm.subject)+\" \")]),(_vm.negative)?_c('span',{staticClass:\"negativeClaim\"},[_vm._v(\"could not\")]):_c('span',{staticClass:\"positiveClaim\"},[_vm._v(\"could\")]),_vm._v(\" demonstrate \"),_c('a',{staticClass:\"competencyLink\",attrs:{\"href\":\"#\",\"title\":_vm.assertion.competency},on:{\"click\":_vm.gotoCompetency}},[_vm._v(\" \"+_vm._s(_vm.competencyName)+\" \"),(_vm.frameworkName)?_c('span',[_vm._v(\" in the subject area \"+_vm._s(_vm.frameworkName))]):_vm._e()]),(_vm.evidenceText)?_c('span',{staticClass:\"evidenceText\"},[_vm._v(\" because they \"),_vm._l((_vm.evidenceText),function(evidenceThing,index){return _c('span',{key:index},[(index != 0)?_c('span',[_vm._v(\" and they \")]):_vm._e(),(evidenceThing.url)?_c('a',{attrs:{\"href\":evidenceThing.url,\"target\":\"_blank\"}},[_vm._v(\" \"+_vm._s(evidenceThing.text))]):_c('span',[_vm._v(\" \"+_vm._s(evidenceThing.text))])])})],2):_vm._e(),(_vm.badged)?_c('span',{staticClass:\"badge\"},[_vm._v(\" and has issued a \"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":_vm.badgeUrl}},[_vm._v(\" badge\")])]):_vm._e(),_vm._v(\". \")]),_c('div',[_c('div',{staticClass:\"button is-text\",style:(_vm.invisible),attrs:{\"title\":\"Delete this claim.\"},on:{\"click\":_vm.deleteMe}},[_c('i',{staticClass:\"fas fa-times\"})])])]),_c('div',[_c('small',[_vm._v(_vm._s(_vm.competencyDescription))]),(_vm.timestamp)?_c('div',{staticClass:\"time\"},[_c('strong',[_vm._v(_vm._s(_vm.timeAgo))])]):_vm._e()])])]):_c('div',{staticClass:\"time\"},[_c('i',{staticClass:\"mdi mdi-spin mdi-loading\"})])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div\n        class=\"timelineElement\"\n        v-observe-visibility=\"{callback: initialize}\">\n        <span\n            v-if=\"ok\">\n            <div\n                class=\"assertionTimelineIcon negative\"\n                v-if=\"negative\">\n                <i class=\"fa fa-times\" />\n            </div>\n            <div\n                class=\"assertionTimelineIcon badged\"\n                v-else-if=\"badged\">\n                <i class=\"fa fa-shield-alt\" />\n            </div>\n            <div\n                class=\"assertionTimelineIcon positive\"\n                v-else>\n                <i class=\"fa fa-check\" />\n            </div>\n            <div class=\"content\">\n                <div class=\"timelineElementTextContainer\">\n                    <div>\n                        <!-- <img\n                            v-if=\"fingerprintUrlAgent\"\n                            :src=\"fingerprintUrlAgent\"\n                            :title=\"agent\">\n                        <svg\n                            v-else\n                            width=\"44\"\n                            height=\"44\"\n                            :data-jdenticon-value=\"fingerprintAgent\"\n                            :title=\"fingerprintAgent\" /> -->\n                        <strong class=\"agentName\">{{ agent }}</strong> claimed\n                        <!-- <img\n                            v-if=\"fingerprintUrlSubject\"\n                            :src=\"fingerprintUrlSubject\"\n                            :title=\"subject\">\n                        <svg\n                            v-else\n                            width=\"44\"\n                            height=\"44\"\n                            :data-jdenticon-value=\"fingerprintSubject\"\n                            :title=\"fingerprintSubject\" /> -->\n                        <strong class=\"subjectName\">{{ subject }} </strong>\n                        <span\n                            class=\"negativeClaim\"\n                            v-if=\"negative\">could not</span>\n                        <span\n                            class=\"positiveClaim\"\n                            v-else>could</span>\n                        demonstrate\n                        <a\n                            href=\"#\"\n                            class=\"competencyLink\"\n                            @click=\"gotoCompetency\"\n                            :title=\"assertion.competency\">\n                            {{ competencyName }}\n                            <span\n                                v-if=\"frameworkName\"> in the subject area {{ frameworkName }}</span>\n                        </a>\n                        <span\n                            class=\"evidenceText\"\n                            v-if=\"evidenceText\"> because they\n                            <span\n                                v-for=\"(evidenceThing, index) in evidenceText\"\n                                :key=\"index\">\n                                <span v-if=\"index != 0\"> and they </span>\n                                <a\n                                    v-if=\"evidenceThing.url\"\n                                    :href=\"evidenceThing.url\"\n                                    target=\"_blank\"> {{ evidenceThing.text }}</a>\n                                <span v-else> {{ evidenceThing.text }}</span>\n                            </span>\n                        </span>\n                        <span\n                            class=\"badge\"\n                            v-if=\"badged\"> and has issued a\n                            <a\n                                target=\"_blank\"\n                                :href=\"badgeUrl\"> badge</a>\n                        </span>.\n                    </div>\n                    <div>\n                        <div\n                            :style=\"invisible\"\n                            @click=\"deleteMe\"\n                            class=\"button is-text\"\n                            title=\"Delete this claim.\">\n                            <i class=\"fas fa-times\" />\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <small>{{ competencyDescription }}</small>\n                    <div\n                        class=\"time\"\n                        v-if=\"timestamp\"><strong>{{ timeAgo }}</strong></div>\n                </div>\n            </div>\n        </span>\n        <div\n            class=\"time\"\n            v-else>\n            <i class=\"mdi mdi-spin mdi-loading\" />\n        </div>\n    </div>\n</template>\n<script>\nimport common from '@/mixins/common.js';\nexport default {\n    name: 'TimelineElement',\n    mixins: [common],\n    props: {\n        uri: String\n    },\n    data: function() {\n        return {\n            assertion: null,\n            subject: null,\n            subjectPk: null,\n            agentPk: null,\n            agent: null,\n            timestamp: null,\n            expiry: null,\n            competency: null,\n            negative: null,\n            agentPerson: null,\n            subjectPerson: null,\n            evidence: null,\n            evidenceExplanation: null\n        };\n    },\n    computed: {\n        timeAgo: function() {\n            if (this.timestamp === null) {\n                return null;\n            }\n            return this.$moment(this.timestamp).fromNow();\n        },\n        assertions: function() {\n            return this.$store.getters['editor/assertions'];\n        },\n        ok: function() {\n            if (this.subject == null) {\n                return false;\n            }\n            if (this.agent == null) {\n                return false;\n            }\n            if (this.competency == null) {\n                return false;\n            }\n            return true;\n        },\n        competencyName: function() {\n            if (this.competency == null) {\n                return null;\n            }\n            return this.competency.getName();\n        },\n        frameworkName: function() {\n            if (this.framework == null) {\n                return null;\n            }\n            return this.framework.getName();\n        },\n        competencyDescription: function() {\n            if (this.competency == null) {\n                return null;\n            }\n            return this.competency.getDescription();\n        },\n        fingerprintUrlAgent: function() {\n            if (this.agentPerson == null) {\n                return null;\n            }\n            if (this.agentPerson.email != null) {\n                return \"https://www.gravatar.com/avatar/\" + EcCrypto.md5(this.agentPerson.email.toLowerCase()) + \"?s=44\";\n            }\n            return null;\n        },\n        fingerprintUrlSubject: function() {\n            if (this.subjectPerson == null) {\n                return null;\n            }\n            if (this.subjectPerson.email != null) {\n                return \"https://www.gravatar.com/avatar/\" + EcCrypto.md5(this.subjectPerson.email.toLowerCase()) + \"?s=44\";\n            }\n            return null;\n        },\n        fingerprintAgent: function() {\n            if (this.agentPerson == null) {\n                return null;\n            }\n            // TODO\n            // setTimeout(() => {\n            //     jdenticon()\n            // }, 100);\n            return this.agentPerson.getGuid();\n        },\n        fingerprintSubject: function() {\n            if (this.subjectPerson == null) {\n                return null;\n            }\n            // TODO\n            // setTimeout(() => {\n            //     jdenticon()\n            // }, 100);\n            return this.subjectPerson.getGuid();\n        },\n        mine: function() {\n            if (this.uri == null) {\n                return null;\n            }\n            var assertion = this.assertion;\n            if (assertion !== null) {\n                if (assertion.owner === null || assertion.owner.length === 0) {\n                    return true;\n                }\n                return assertion.hasOwner(EcIdentityManager.default.ids[0].ppk.toPk());\n            } else {\n                return null;\n            }\n        },\n        evidenceText: function() {\n            return this.evidenceExplanation;\n        },\n        badged: function() {\n            if (this.assertion == null) {\n                return false;\n            }\n            return this.assertion.hasReader(this.$store.getters['editor/badgePk']);\n        },\n        badgeUrl: function() {\n            if (this.assertion != null) {\n                if (this.assertion.hasReader(this.$store.getters['editor/badgePk'])) {\n                    return EcRemote.urlAppend(repo.selectedServer, \"badge/assertion/\") + this.assertion.getGuid();\n                }\n            }\n            return \"\";\n        },\n        invisible: function() {\n            if (this.mine) {\n                return {\n                    'visibility': 'visible'\n                };\n            } else {\n                return {\n                    'visibility': 'hidden'\n                };\n            }\n        }\n    },\n    destroyed: function() {\n        clearInterval(this.invl);\n    },\n    watch: {\n        evidence: function(oldEvidence, newEvidence) {\n            this.evidenceExplanation = null;\n            if (this.evidence != null) {\n                if (this.evidence.length > 0) {\n                    var count = this.evidence.length;\n                    this.$store.dispatch('editor/computeBecause', this.evidence).then((because) => {\n                        this.$nextTick(() => {\n                            if (count === this.evidence.length) {\n                                this.evidenceExplanation = because;\n                            }\n                        });\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        initialize: function(isVisible, entry) {\n            this.isVisible = isVisible;\n            if (isVisible) {\n                if (this.once) {\n                    return;\n                }\n                this.once = true;\n                this.getAssertion(isVisible, entry);\n            }\n        },\n        getAssertion: async function(isVisible, entry) {\n            if (isVisible) {\n                let assertion = await EcAssertion.get(this.uri);\n                this.assertion = assertion;\n                if (assertion.subject === null) {\n                    this.subject = \"nobody\";\n                } else {\n                    assertion.getSubjectName(window.repo).then((name) => {\n                        this.subject = name;\n                    });\n                    assertion.getSubjectAsync((pk) => {\n                        this.subjectPk = pk.toPem();\n                        this.getSubject();\n                    }, appError);\n                }\n                if (assertion.agent === null) {\n                    this.agent = \"nobody\";\n                } else {\n                    assertion.getAgentName(window.repo).then((name) => {\n                        this.agent = name;\n                    });\n                }\n                assertion.getAgentAsync((pk) => {\n                    this.agentPk = pk.toPem();\n                    this.getAgent();\n                }, appError);\n                if (assertion.assertionDate != null) {\n                    assertion.getAssertionDateAsync((assertionDate) => {\n                        this.timestamp = assertionDate;\n                    }, appError);\n                }\n                if (assertion.expirationDate != null) {\n                    assertion.getExpirationDateAsync((expirationDate) => {\n                        this.expiry = expirationDate;\n                    }, appError);\n                }\n                if (assertion.negative != null) {\n                    assertion.getNegativeAsync((negative) => {\n                        this.negative = negative;\n                    }, appError);\n                } else {\n                    this.negative = false;\n                }\n                if (assertion.evidence != null) {\n                    for (var i = 0; i < assertion.getEvidenceCount(); i++) {\n                        ((i) => {\n                            assertion.getEvidenceAsync(i, (evidence) => {\n                                if (this.evidence == null) {\n                                    this.evidence = [];\n                                }\n                                this.evidence.push(evidence);\n                                this.evidenceExplanation = null;\n                            }, appError);\n                        })(i);\n                    }\n                }\n                if (assertion.framework != null) {\n                    EcFramework.get(assertion.framework, (framework) => {\n                        this.framework = framework;\n                    }, appError);\n                }\n                EcCompetency.get(assertion.competency, (competency) => {\n                    this.competency = competency;\n                }, () => {\n                    for (var i = 0; i < this.assertions.length; i++) {\n                        while (this.assertions[i].id === assertion.id) {\n                            this.$store.commit('editor/removeAssertionAtIndex', i);\n                        }\n                    }\n                });\n            }\n        },\n        gotoCompetency: function() {\n            EcFramework.search(window.repo, \"competency:\\\"\" + this.assertion.competency + \"\\\"\").then((success) => {\n                if (success.length > 0) {\n                    this.$store.commit('editor/framework', success[0]);\n                    this.$store.commit('editor/clearFrameworkCommentData');\n                    this.$store.commit('app/setCanViewComments', this.canViewCommentsCurrentFramework());\n                    this.$store.commit('app/setCanAddComments', this.canAddCommentsCurrentFramework());\n                    this.$router.push({name: \"framework\", params: {frameworkId: success[0].id}});\n                }\n            }).catch(appError);\n        },\n        getAgent: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.agentPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.agentPk);\n                    var p = new EcPerson();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.agentPerson = p;\n                } else {\n                    this.agentPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.agentPk);\n                var p = new EcPerson();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.agentPerson = p;\n            });\n        },\n        getSubject: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.subjectPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.subjectPk);\n                    var p = new EcPerson();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.subjectPerson = p;\n                } else {\n                    this.subjectPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.subjectPk);\n                var p = new EcPerson();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.subjectPerson = p;\n            });\n        },\n        deleteMe: function() {\n            if (window.confirm('Are you sure you want to delete this assertion?')) {\n                EcRepository.get(this.uri, (resource) => {\n                    EcRepository._delete(resource, () => {\n                        this.$store.commit('editor/removeAssertion', resource);\n                    }, appError);\n                });\n            }\n        }\n    }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimelineElement.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimelineElement.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TimelineElement.vue?vue&type=template&id=0adfc940\"\nimport script from \"./TimelineElement.vue?vue&type=script&lang=js\"\nexport * from \"./TimelineElement.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}