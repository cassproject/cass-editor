{"version":3,"sources":["webpack:///./src/lode/components/TimelineElement.vue?a5d0","webpack:///src/lode/components/TimelineElement.vue","webpack:///./src/lode/components/TimelineElement.vue?c355","webpack:///./src/lode/components/TimelineElement.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","callback","initialize","expression","staticClass","_v","_s","agent","subject","attrs","assertion","competency","on","gotoCompetency","competencyName","frameworkName","_e","_l","evidenceThing","index","key","url","text","badgeUrl","style","deleteMe","competencyDescription","timeAgo","staticRenderFns","mixins","props","uri","data","subjectPk","agentPk","timestamp","expiry","negative","agentPerson","subjectPerson","evidence","evidenceExplanation","computed","assertions","ok","fingerprintUrlAgent","fingerprintUrlSubject","fingerprintAgent","fingerprintSubject","mine","evidenceText","badged","invisible","destroyed","clearInterval","watch","methods","getAssertion","isVisible","EcAssertion","appError","i","EcFramework","EcCompetency","params","frameworkId","catch","getAgent","EcPerson","p","getSubject","EcRepository","component"],"mappings":"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GAEA,MAEAC,4BACA,8BACA,KAMA,4BAEAC,8BACA,gCACA,KAMA,8BAEAC,gBACA,kBACA,YAEA,qBACA,gBACA,oCAGA,wDAEA,MAGAC,wBACA,iCAEAC,kBACA,6BAGA,iEAEA5B,oBACA,6BACA,gEACA,oFAGA,IAEA6B,qBACA,iBACA,CACA,sBAGA,CACA,uBAKAC,qBACAC,0BAEAC,OACAf,uBAAA,WAEA,GADA,8BACA,qBACA,wBACA,2BACA,8EACA,wBACA,wBACA,kCAQAgB,SACAtD,yBAEA,GADA,iBACA,GACA,aACA,OAEA,aACA,yBAGAuD,wBAAA,gKACAC,EADA,oLAEAC,uBAFA,OA2CA,GAzCAjD,EAFA,OAGA,cACA,iBACA,oBAEAA,gDACA,eAEAA,+BACA,sBACA,iBACAkD,WAEA,eACA,iBAEAlD,8CACA,aAGAA,6BACA,oBACA,eACAkD,UACA,uBACAlD,qCACA,gBACAkD,UAEA,wBACAlD,sCACA,aACAkD,UAEA,iBACAlD,gCACA,eACAkD,UAEA,cAEA,iBACA,oCACA,YACAlD,kCACA,mBACA,eAEA,mBACA,6BACAkD,WAPA,CAQAC,GAGA,mBACAC,yCACA,gBACAF,UAEAG,2CACA,kBACA,WACA,sCACA,gCACA,sDAlEA,wJAAAN,GAwEA5C,0BAAA,WACAiD,+FACA,aACA,yCACA,oDACA,8EACA,4EACA,gBAAAhE,iBAAAkE,QAAAC,2BAEAC,MAAAN,WAEAO,oBAAA,WACA,sBACA,WACAC,+EACA,iBACA,8BACA,eACAC,uDACAA,cACA,qBACAA,yBAEAA,qBAEA,qBAEA,sBAEA,YACA,8BACA,eACAA,uDACAA,cACA,qBACAA,yBAEAA,qBAEA,oBAGAC,sBAAA,WACA,sBACA,WACAF,iFACA,iBACA,gCACA,eACAC,uDACAA,cACA,qBACAA,yBAEAA,qBAEA,uBAEA,wBAEA,YACA,gCACA,eACAA,uDACAA,cACA,qBACAA,yBAEAA,qBAEA,sBAGA5C,oBAAA,WACA,mEACA8C,uCACAA,mCACA,8CACAX,gBCpbwW,I,YCOpWY,EAAY,eACd,EACAlF,EACAsC,GACA,EACA,KACA,KACA,MAIa,aAAA4C,E","file":"js/chunk-2d0daac9.23ea0497.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"observe-visibility\",rawName:\"v-observe-visibility\",value:({callback: _vm.initialize}),expression:\"{callback: initialize}\"}],staticClass:\"timelineElement\"},[(_vm.ok)?_c('span',[(_vm.negative)?_c('div',{staticClass:\"assertionTimelineIcon negative\"},[_c('i',{staticClass:\"fa fa-times\"})]):(_vm.badged)?_c('div',{staticClass:\"assertionTimelineIcon badged\"},[_c('i',{staticClass:\"fa fa-shield-alt\"})]):_c('div',{staticClass:\"assertionTimelineIcon positive\"},[_c('i',{staticClass:\"fa fa-check\"})]),_c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"timelineElementTextContainer\"},[_c('div',[_c('strong',{staticClass:\"agentName\"},[_vm._v(_vm._s(_vm.agent))]),_vm._v(\" claimed \"),_c('strong',{staticClass:\"subjectName\"},[_vm._v(_vm._s(_vm.subject)+\" \")]),(_vm.negative)?_c('span',{staticClass:\"negativeClaim\"},[_vm._v(\"could not\")]):_c('span',{staticClass:\"positiveClaim\"},[_vm._v(\"could\")]),_vm._v(\" demonstrate \"),_c('a',{staticClass:\"competencyLink\",attrs:{\"href\":\"#\",\"title\":_vm.assertion.competency},on:{\"click\":_vm.gotoCompetency}},[_vm._v(\" \"+_vm._s(_vm.competencyName)+\" \"),(_vm.frameworkName)?_c('span',[_vm._v(\" in the subject area \"+_vm._s(_vm.frameworkName))]):_vm._e()]),(_vm.evidenceText)?_c('span',{staticClass:\"evidenceText\"},[_vm._v(\" because they \"),_vm._l((_vm.evidenceText),function(evidenceThing,index){return _c('span',{key:index},[(index != 0)?_c('span',[_vm._v(\" and they \")]):_vm._e(),(evidenceThing.url)?_c('a',{attrs:{\"href\":evidenceThing.url,\"target\":\"_blank\"}},[_vm._v(\" \"+_vm._s(evidenceThing.text))]):_c('span',[_vm._v(\" \"+_vm._s(evidenceThing.text))])])})],2):_vm._e(),(_vm.badged)?_c('span',{staticClass:\"badge\"},[_vm._v(\" and has issued a \"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":_vm.badgeUrl}},[_vm._v(\" badge\")])]):_vm._e(),_vm._v(\". \")]),_c('div',[_c('div',{staticClass:\"button is-text\",style:(_vm.invisible),attrs:{\"title\":\"Delete this claim.\"},on:{\"click\":_vm.deleteMe}},[_c('i',{staticClass:\"fas fa-times\"})])])]),_c('div',[_c('small',[_vm._v(_vm._s(_vm.competencyDescription))]),(_vm.timestamp)?_c('div',{staticClass:\"time\"},[_c('strong',[_vm._v(_vm._s(_vm.timeAgo))])]):_vm._e()])])]):_c('div',{staticClass:\"time\"},[_c('i',{staticClass:\"mdi mdi-spin mdi-loading\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div\n        class=\"timelineElement\"\n        v-observe-visibility=\"{callback: initialize}\">\n        <span\n            v-if=\"ok\">\n            <div\n                class=\"assertionTimelineIcon negative\"\n                v-if=\"negative\">\n                <i class=\"fa fa-times\" />\n            </div>\n            <div\n                class=\"assertionTimelineIcon badged\"\n                v-else-if=\"badged\">\n                <i class=\"fa fa-shield-alt\" />\n            </div>\n            <div\n                class=\"assertionTimelineIcon positive\"\n                v-else>\n                <i class=\"fa fa-check\" />\n            </div>\n            <div class=\"content\">\n                <div class=\"timelineElementTextContainer\">\n                    <div>\n                        <!-- <img\n                            v-if=\"fingerprintUrlAgent\"\n                            :src=\"fingerprintUrlAgent\"\n                            :title=\"agent\">\n                        <svg\n                            v-else\n                            width=\"44\"\n                            height=\"44\"\n                            :data-jdenticon-value=\"fingerprintAgent\"\n                            :title=\"fingerprintAgent\" /> -->\n                        <strong class=\"agentName\">{{ agent }}</strong> claimed\n                        <!-- <img\n                            v-if=\"fingerprintUrlSubject\"\n                            :src=\"fingerprintUrlSubject\"\n                            :title=\"subject\">\n                        <svg\n                            v-else\n                            width=\"44\"\n                            height=\"44\"\n                            :data-jdenticon-value=\"fingerprintSubject\"\n                            :title=\"fingerprintSubject\" /> -->\n                        <strong class=\"subjectName\">{{ subject }} </strong>\n                        <span\n                            class=\"negativeClaim\"\n                            v-if=\"negative\">could not</span>\n                        <span\n                            class=\"positiveClaim\"\n                            v-else>could</span>\n                        demonstrate\n                        <a\n                            href=\"#\"\n                            class=\"competencyLink\"\n                            @click=\"gotoCompetency\"\n                            :title=\"assertion.competency\">\n                            {{ competencyName }}\n                            <span\n                                v-if=\"frameworkName\"> in the subject area {{ frameworkName }}</span>\n                        </a>\n                        <span\n                            class=\"evidenceText\"\n                            v-if=\"evidenceText\"> because they\n                            <span\n                                v-for=\"(evidenceThing, index) in evidenceText\"\n                                :key=\"index\">\n                                <span v-if=\"index != 0\"> and they </span>\n                                <a\n                                    v-if=\"evidenceThing.url\"\n                                    :href=\"evidenceThing.url\"\n                                    target=\"_blank\"> {{ evidenceThing.text }}</a>\n                                <span v-else> {{ evidenceThing.text }}</span>\n                            </span>\n                        </span>\n                        <span\n                            class=\"badge\"\n                            v-if=\"badged\"> and has issued a\n                            <a\n                                target=\"_blank\"\n                                :href=\"badgeUrl\"> badge</a>\n                        </span>.\n                    </div>\n                    <div>\n                        <div\n                            :style=\"invisible\"\n                            @click=\"deleteMe\"\n                            class=\"button is-text\"\n                            title=\"Delete this claim.\">\n                            <i class=\"fas fa-times\" />\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <small>{{ competencyDescription }}</small>\n                    <div\n                        class=\"time\"\n                        v-if=\"timestamp\"><strong>{{ timeAgo }}</strong></div>\n                </div>\n            </div>\n        </span>\n        <div\n            class=\"time\"\n            v-else>\n            <i class=\"mdi mdi-spin mdi-loading\" />\n        </div>\n    </div>\n</template>\n<script>\nimport common from '@/mixins/common.js';\nexport default {\n    name: 'TimelineElement',\n    mixins: [common],\n    props: {\n        uri: String\n    },\n    data: function() {\n        return {\n            assertion: null,\n            subject: null,\n            subjectPk: null,\n            agentPk: null,\n            agent: null,\n            timestamp: null,\n            expiry: null,\n            competency: null,\n            negative: null,\n            agentPerson: null,\n            subjectPerson: null,\n            evidence: null,\n            evidenceExplanation: null\n        };\n    },\n    computed: {\n        timeAgo: function() {\n            if (this.timestamp === null) {\n                return null;\n            }\n            return this.$moment(this.timestamp).fromNow();\n        },\n        assertions: function() {\n            return this.$store.getters['editor/assertions'];\n        },\n        ok: function() {\n            if (this.subject == null) {\n                return false;\n            }\n            if (this.agent == null) {\n                return false;\n            }\n            if (this.competency == null) {\n                return false;\n            }\n            return true;\n        },\n        competencyName: function() {\n            if (this.competency == null) {\n                return null;\n            }\n            return this.competency.getName();\n        },\n        frameworkName: function() {\n            if (this.framework == null) {\n                return null;\n            }\n            return this.framework.getName();\n        },\n        competencyDescription: function() {\n            if (this.competency == null) {\n                return null;\n            }\n            return this.competency.getDescription();\n        },\n        fingerprintUrlAgent: function() {\n            if (this.agentPerson == null) {\n                return null;\n            }\n            if (this.agentPerson.email != null) {\n                return \"https://www.gravatar.com/avatar/\" + EcCrypto.md5(this.agentPerson.email.toLowerCase()) + \"?s=44\";\n            }\n            return null;\n        },\n        fingerprintUrlSubject: function() {\n            if (this.subjectPerson == null) {\n                return null;\n            }\n            if (this.subjectPerson.email != null) {\n                return \"https://www.gravatar.com/avatar/\" + EcCrypto.md5(this.subjectPerson.email.toLowerCase()) + \"?s=44\";\n            }\n            return null;\n        },\n        fingerprintAgent: function() {\n            if (this.agentPerson == null) {\n                return null;\n            }\n            // TODO\n            // setTimeout(() => {\n            //     jdenticon()\n            // }, 100);\n            return this.agentPerson.getGuid();\n        },\n        fingerprintSubject: function() {\n            if (this.subjectPerson == null) {\n                return null;\n            }\n            // TODO\n            // setTimeout(() => {\n            //     jdenticon()\n            // }, 100);\n            return this.subjectPerson.getGuid();\n        },\n        mine: function() {\n            if (this.uri == null) {\n                return null;\n            }\n            var assertion = this.assertion;\n            if (assertion !== null) {\n                if (assertion.owner === null || assertion.owner.length === 0) {\n                    return true;\n                }\n                return assertion.hasOwner(EcIdentityManager.default.ids[0].ppk.toPk());\n            } else {\n                return null;\n            }\n        },\n        evidenceText: function() {\n            return this.evidenceExplanation;\n        },\n        badged: function() {\n            if (this.assertion == null) {\n                return false;\n            }\n            return this.assertion.hasReader(this.$store.getters['editor/badgePk']);\n        },\n        badgeUrl: function() {\n            if (this.assertion != null) {\n                if (this.assertion.hasReader(this.$store.getters['editor/badgePk'])) {\n                    return EcRemote.urlAppend(repo.selectedServer, \"badge/assertion/\") + this.assertion.getGuid();\n                }\n            }\n            return \"\";\n        },\n        invisible: function() {\n            if (this.mine) {\n                return {\n                    'visibility': 'visible'\n                };\n            } else {\n                return {\n                    'visibility': 'hidden'\n                };\n            }\n        }\n    },\n    destroyed: function() {\n        clearInterval(this.invl);\n    },\n    watch: {\n        evidence: function(oldEvidence, newEvidence) {\n            this.evidenceExplanation = null;\n            if (this.evidence != null) {\n                if (this.evidence.length > 0) {\n                    var count = this.evidence.length;\n                    this.$store.dispatch('editor/computeBecause', this.evidence).then((because) => {\n                        this.$nextTick(() => {\n                            if (count === this.evidence.length) {\n                                this.evidenceExplanation = because;\n                            }\n                        });\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        initialize: function(isVisible, entry) {\n            this.isVisible = isVisible;\n            if (isVisible) {\n                if (this.once) {\n                    return;\n                }\n                this.once = true;\n                this.getAssertion(isVisible, entry);\n            }\n        },\n        getAssertion: async function(isVisible, entry) {\n            if (isVisible) {\n                let assertion = await EcAssertion.get(this.uri);\n                this.assertion = assertion;\n                if (assertion.subject === null) {\n                    this.subject = \"nobody\";\n                } else {\n                    assertion.getSubjectName(window.repo).then((name) => {\n                        this.subject = name;\n                    });\n                    assertion.getSubjectAsync((pk) => {\n                        this.subjectPk = pk.toPem();\n                        this.getSubject();\n                    }, appError);\n                }\n                if (assertion.agent === null) {\n                    this.agent = \"nobody\";\n                } else {\n                    assertion.getAgentName(window.repo).then((name) => {\n                        this.agent = name;\n                    });\n                }\n                assertion.getAgentAsync((pk) => {\n                    this.agentPk = pk.toPem();\n                    this.getAgent();\n                }, appError);\n                if (assertion.assertionDate != null) {\n                    assertion.getAssertionDateAsync((assertionDate) => {\n                        this.timestamp = assertionDate;\n                    }, appError);\n                }\n                if (assertion.expirationDate != null) {\n                    assertion.getExpirationDateAsync((expirationDate) => {\n                        this.expiry = expirationDate;\n                    }, appError);\n                }\n                if (assertion.negative != null) {\n                    assertion.getNegativeAsync((negative) => {\n                        this.negative = negative;\n                    }, appError);\n                } else {\n                    this.negative = false;\n                }\n                if (assertion.evidence != null) {\n                    for (var i = 0; i < assertion.getEvidenceCount(); i++) {\n                        ((i) => {\n                            assertion.getEvidenceAsync(i, (evidence) => {\n                                if (this.evidence == null) {\n                                    this.evidence = [];\n                                }\n                                this.evidence.push(evidence);\n                                this.evidenceExplanation = null;\n                            }, appError);\n                        })(i);\n                    }\n                }\n                if (assertion.framework != null) {\n                    EcFramework.get(assertion.framework, (framework) => {\n                        this.framework = framework;\n                    }, appError);\n                }\n                EcCompetency.get(assertion.competency, (competency) => {\n                    this.competency = competency;\n                }, () => {\n                    for (var i = 0; i < this.assertions.length; i++) {\n                        while (this.assertions[i].id === assertion.id) {\n                            this.$store.commit('editor/removeAssertionAtIndex', i);\n                        }\n                    }\n                });\n            }\n        },\n        gotoCompetency: function() {\n            EcFramework.search(window.repo, \"competency:\\\"\" + this.assertion.competency + \"\\\"\").then((success) => {\n                if (success.length > 0) {\n                    this.$store.commit('editor/framework', success[0]);\n                    this.$store.commit('editor/clearFrameworkCommentData');\n                    this.$store.commit('app/setCanViewComments', this.canViewCommentsCurrentFramework());\n                    this.$store.commit('app/setCanAddComments', this.canAddCommentsCurrentFramework());\n                    this.$router.push({name: \"framework\", params: {frameworkId: success[0].id}});\n                }\n            }).catch(appError);\n        },\n        getAgent: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.agentPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.agentPk);\n                    var p = new EcPerson();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.agentPerson = p;\n                } else {\n                    this.agentPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.agentPk);\n                var p = new EcPerson();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.agentPerson = p;\n            });\n        },\n        getSubject: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.subjectPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.subjectPk);\n                    var p = new EcPerson();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.subjectPerson = p;\n                } else {\n                    this.subjectPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.subjectPk);\n                var p = new EcPerson();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.subjectPerson = p;\n            });\n        },\n        deleteMe: function() {\n            if (window.confirm('Are you sure you want to delete this assertion?')) {\n                EcRepository.get(this.uri, (resource) => {\n                    EcRepository._delete(resource, () => {\n                        this.$store.commit('editor/removeAssertion', resource);\n                    }, appError);\n                });\n            }\n        }\n    }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimelineElement.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimelineElement.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TimelineElement.vue?vue&type=template&id=0adfc940&\"\nimport script from \"./TimelineElement.vue?vue&type=script&lang=js&\"\nexport * from \"./TimelineElement.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}