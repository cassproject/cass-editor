{"version":3,"sources":["webpack:///./src/lode/components/Thing.vue","webpack:///src/lode/components/Thing.vue","webpack:///./src/lode/components/Thing.vue?adcb","webpack:///./src/lode/components/Thing.vue?988e"],"names":["render","_vm","this","_c","_self","staticClass","class","editingClass","managingAssertions","highlighted","filter","_t","shortType","clickToLoad","attrs","name","uri","competencyAsPropertyIsExternal","_v","_s","competencyAsPropertyType","competencyAsPropertyClass","thingAsPropertyModalObject","type","_e","on","$event","goToCompetencyWithinThisFramework","_m","objectType","clickShowDetails","uriAndNameOnly","expandedThing","hoverClass","view","canEdit","editNode","showAddComments","handleClickAddComment","_l","headings","heading","key","showAlwaysProperties","alwaysProperties","value","editingThing","profile","handleEditingEvent","$emit","select","showPossibleProperties","possibleProperties","allowPropertyEdits","showViewProperties","viewProperties","canEditAssertions","obj","id","staticRenderFns","mixins","common","props","expandInModal","Boolean","default","String","competencyAsPropertyObjectType","Object","children","Number","expandedObj","parentNotEditable","highlightList","Array","childrenExpanded","newFramework","index","cantMoveUp","cantMoveDown","cantMoveRight","cantMoveLeft","properties","editingNode","containerType","subview","components","Property","AssertionEditor","data","originalThing","showAlways","showPossible","skipConfigProperties","created","load","mounted","$store","state","editor","resolveNameFromUrl","computed","$parent","object","component","parentName","framework","getters","thingAsPropertyIcon","icon","concepts","app","canAddComments","undefined","length","minimizeButtonClass","allPropertiesButtonClass","globalButtonClass","external","level","i","competency","split","pop","context","ary","join","canEditAny","schema","lode","schemata","result","r","getPropertiesFromProfile","prop","setUnknownName","key2","endsWith","schemaFallback","f","shortId","EcArray","has","indexOf","iconClass","toLowerCase","changedObject","$route","methods","commit","$scrollTo","EcRemoteLinkedData","trimVersionFromUrl","e","showEnteredProperties","showGlobal","emitExpandEvent","me","EcRepository","get","t","EcObject","isObject","allTypes","getAllTypes","push","EcAsyncHelper","each","callback","loadSchema","expand","setTimeout","reactify","o","isArray","_step","_iterator","_createForOfIteratorHelper","s","n","done","item","err","objectModel","fullType","_expand","_asyncToGenerator","_regeneratorRuntime","mark","_callee","after","toExpand","expanded","wrap","_context","prev","next","JSON","parse","toJson","startsWith","replace","jsonld","sent","t0","appError","stop","_x","_x2","apply","arguments","augmentedType","EcRemote","getExpectingObject","_ref","_callee2","_context2","dispatch","_x3","add","property","_callee3","_context3","remove","splice","save","update","_save","_callee4","saver","compacted","rld","_context4","abrupt","compact","stripEmptyArrays","rawSchemata","copyFrom","signature","owner","private","EcEncryptedValue","encryptOnSaveMap","toEncryptedValue","repo","saveTo","appLog","types","concat","removeObject","resolveNameFromUrlNotInCass","url","Thing","getDisplayStringFrom","langs","keys","error","success","failure","server","service","headers","moveUp","moveDown","moveRight","moveLeft","displayHeading","checked","queryParams","ceasnDataFields","watch","_changedObject","_callee5","encryptedType","encryptedThing","returnObject","thing","_context5","window","fromEncryptedValue","t1","call"],"mappings":"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","file":"js/chunk-2d0a4fe9.832f0247.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"lode__thing\",class:[\n        _vm.editingClass,\n        {'managing-assertions': _vm.managingAssertions},\n        {'highlighted': _vm.highlighted},\n        {'show-all': _vm.filter === 'showAll'},\n        {'show-aligned': _vm.filter === 'showAligned'},\n        {'show-unaligned': _vm.filter === 'showUnaligned'}]},[_vm._t(\"thingIcon\"),_c('div',{class:_vm.shortType !== 'Framework' && _vm.shortType !== 'Concept' ? 'container' : 'container is-fluid is-paddingless is-marginless'},[(_vm.clickToLoad)?_c('span',{staticClass:\"click-to-load\",attrs:{\"title\":_vm.name ? _vm.name : _vm.uri}},[_c('span',{staticClass:\"tag is-size-7 is-light\",class:[{ 'is-link' : _vm.competencyAsPropertyIsExternal }, {'is-primary': !_vm.competencyAsPropertyIsExternal}]},[_vm._v(_vm._s(_vm.competencyAsPropertyType))]),_c('span',{staticClass:\"thing-as-property__text\",class:_vm.competencyAsPropertyClass},[_vm._v(\" \"+_vm._s(_vm.name ? _vm.name : _vm.uri)+\" \")]),(!_vm.competencyAsPropertyIsExternal && _vm.thingAsPropertyModalObject.type !== 'Level')?_c('div',{staticClass:\"button is-small is-outlined is-primary\",on:{\"click\":function($event){return _vm.goToCompetencyWithinThisFramework()}}},[_c('span',{staticClass:\"has-text-weight-bold\"},[_vm._v(\"scroll to\")]),_vm._m(0)]):_vm._e(),(_vm.thingAsPropertyModalObject.objectType === 'Competency' || _vm.thingAsPropertyModalObject.objectType === 'Concept' || _vm.thingAsPropertyModalObject.objectType === 'Level')?_c('button',{staticClass:\"button is-small is-outlined is-link\",on:{\"click\":_vm.clickShowDetails}},[_c('span',{staticClass:\"has-text-weight-bold\"},[_vm._v(\"details\")]),_vm._m(1)]):_vm._e()]):(_vm.uriAndNameOnly)?_c('span',{staticClass:\"thing-as-property__text\",class:_vm.competencyAsPropertyClass,attrs:{\"title\":_vm.name ? _vm.name : _vm.uri}},[_vm._v(\" \"+_vm._s(_vm.name ? _vm.name : _vm.uri)+\" \")]):(_vm.expandedThing)?_c('div',{class:['lode__' + _vm.shortType, _vm.hoverClass, {'highlighted': _vm.highlighted}]},[(_vm.shortType === 'ConceptScheme' || _vm.shortType === 'Framework' && _vm.view !== 'crosswalk')?_c('div',{staticClass:\"hierarchy-item__buttons\"},[(_vm.view !== 'crosswalk' && _vm.canEdit)?_c('div',{staticClass:\"edit-button button is-small is-text has-text-primary\",on:{\"click\":function($event){return _vm.editNode()}}},[_vm._m(2)]):_vm._e(),(_vm.showAddComments && _vm.view === 'framework')?_c('div',{staticClass:\"comment-button\"},[_c('div',{staticClass:\"button is-text has-text-primary is-small\",on:{\"click\":_vm.handleClickAddComment}},[_vm._m(3)])]):_vm._e()]):_vm._e(),(_vm.expandedThing['@id'])?_c('a',{staticClass:\"lode__type\"},[(_vm.shortType)?_c('span',{attrs:{\"title\":_vm.type}},[_vm._v(\" \"+_vm._s(_vm.shortType)+\" \")]):_vm._e()]):(_vm.shortType)?_c('span',{staticClass:\"lode__type\",attrs:{\"title\":_vm.type}},[_vm._v(_vm._s(_vm.shortType))]):_vm._e(),_vm._t(\"default\"),_c('div',{staticClass:\"headings-group\",class:{'highlighted': _vm.highlighted}},_vm._l((_vm.headings),function(heading){return _c('div',{key:heading,staticClass:\"lode__thing-heading\"},[(_vm.showAlwaysProperties && _vm.alwaysProperties[heading])?[_vm._l((_vm.alwaysProperties[heading]),function(value,key){return _c('Property',{key:key,attrs:{\"expandedThing\":_vm.expandedThing,\"expandedProperty\":key,\"schema\":value,\"editingThing\":_vm.editingThing,\"canEdit\":false,\"profile\":_vm.profile},on:{\"editing-property-event\":function($event){return _vm.handleEditingEvent($event)},\"set-checkbox\":function($event){return _vm.$emit('set-checkbox')},\"select\":_vm.select}})}),_vm._t(\"frameworkTags\")]:(_vm.showPossibleProperties && _vm.possibleProperties[heading])?_vm._l((_vm.possibleProperties[heading]),function(value,key){return _c('Property',{key:key,attrs:{\"expandedThing\":_vm.expandedThing,\"expandedProperty\":key,\"schema\":value,\"editingThing\":_vm.editingThing,\"canEdit\":_vm.allowPropertyEdits(key),\"profile\":_vm.profile},on:{\"editing-property-event\":function($event){return _vm.handleEditingEvent($event)},\"set-checkbox\":function($event){return _vm.$emit('set-checkbox')},\"select\":_vm.select}})}):(_vm.showViewProperties && _vm.viewProperties[heading])?_vm._l((_vm.viewProperties[heading]),function(value,key){return _c('Property',{key:key,attrs:{\"expandedThing\":_vm.expandedThing,\"expandedProperty\":key,\"schema\":value,\"editingThing\":_vm.editingThing,\"canEdit\":_vm.allowPropertyEdits(key),\"profile\":_vm.profile},on:{\"editing-property-event\":function($event){return _vm.handleEditingEvent($event)},\"set-checkbox\":function($event){return _vm.$emit('set-checkbox')},\"select\":_vm.select}})}):_vm._e()],2)}),0),(_vm.canEditAssertions && _vm.managingAssertions)?_c('AssertionEditor',{attrs:{\"uri\":_vm.uri || _vm.obj.id}}):_vm._e(),_vm._t(\"frameworkDetails\")],2):_vm._e()])],2)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon is-small\"},[_c('i',{staticClass:\"fa fa-external-link-alt\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon is-small\"},[_c('i',{staticClass:\"fa fa-info\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"icon is-small\"},[_c('i',{staticClass:\"fa fa-edit is-size-5\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"icon is-small\"},[_c('i',{staticClass:\"fa fa-comment-medical is-size-5\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div\n        class=\"lode__thing\"\n        :class=\"[\n            editingClass,\n            {'managing-assertions': managingAssertions},\n            {'highlighted': highlighted},\n            {'show-all': filter === 'showAll'},\n            {'show-aligned': filter === 'showAligned'},\n            {'show-unaligned': filter === 'showUnaligned'}]\">\n        <slot name=\"thingIcon\" />\n        <div :class=\"shortType !== 'Framework' && shortType !== 'Concept' ? 'container' : 'container is-fluid is-paddingless is-marginless'\">\n            <!--\n                click to load handles relationships, resources, and levels\n                TO DO should be translated to a MODAL -->\n            <span\n                v-if=\"clickToLoad\"\n                :title=\"name ? name : uri \"\n                class=\"click-to-load\">\n                <span\n                    class=\"tag is-size-7 is-light\"\n                    :class=\"[{ 'is-link' : competencyAsPropertyIsExternal }, {'is-primary': !competencyAsPropertyIsExternal}]\">{{ competencyAsPropertyType }}</span>\n                <span\n                    class=\"thing-as-property__text\"\n                    :class=\"competencyAsPropertyClass\">\n                    {{ name ? name : uri }}\n                </span>\n                <div\n                    @click=\"goToCompetencyWithinThisFramework()\"\n                    v-if=\"!competencyAsPropertyIsExternal && thingAsPropertyModalObject.type !== 'Level'\"\n                    class=\"button  is-small is-outlined is-primary\">\n                    <span class=\"has-text-weight-bold\">scroll to</span>\n                    <span\n                        class=\"icon is-small\">\n                        <i class=\"fa fa-external-link-alt\" />\n                    </span>\n                </div>\n                <button\n                    @click=\"clickShowDetails\"\n                    class=\"button  is-small is-outlined is-link\"\n                    v-if=\"thingAsPropertyModalObject.objectType === 'Competency' || thingAsPropertyModalObject.objectType === 'Concept' || thingAsPropertyModalObject.objectType === 'Level'\">\n                    <span class=\"has-text-weight-bold\">details</span>\n                    <span\n                        class=\"icon is-small\">\n                        <i class=\"fa fa-info\" />\n                    </span>\n                </button>\n            </span>\n            <span\n                class=\"thing-as-property__text\"\n                :class=\"competencyAsPropertyClass\"\n                v-else-if=\"uriAndNameOnly\"\n                :title=\"name ? name : uri\">\n                {{ name ? name : uri }}\n            </span>\n            <div\n                v-else-if=\"expandedThing\"\n                :class=\"['lode__' + shortType, hoverClass, {'highlighted': highlighted}]\">\n                <!-- buttons that show on hover -->\n                <!-- only show these on framework and concept scheme objects\n                    otherwise displayed in hierarchy node alongside drag icon -->\n                <div\n                    class=\"hierarchy-item__buttons\"\n                    v-if=\"shortType === 'ConceptScheme' || shortType === 'Framework' && view !== 'crosswalk'\">\n                    <div\n                        v-if=\"view !== 'crosswalk' && canEdit\"\n                        class=\"edit-button button is-small is-text has-text-primary\"\n                        @click=\"editNode()\">\n                        <div class=\"icon is-small\">\n                            <i class=\"fa fa-edit is-size-5\" />\n                        </div>\n                    </div>\n                    <div\n                        v-if=\"showAddComments && view === 'framework'\"\n                        class=\"comment-button\">\n                        <div\n                            class=\"button is-text has-text-primary is-small\"\n                            @click=\"handleClickAddComment\">\n                            <div class=\"icon is-small\">\n                                <i class=\"fa fa-comment-medical is-size-5\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <a\n                    v-if=\"expandedThing['@id']\"\n                    class=\"lode__type\">\n                    <span\n                        :title=\"type\"\n                        v-if=\"shortType\">\n                        {{ shortType }}\n                    </span>\n                </a>\n                <span\n                    v-else-if=\"shortType\"\n                    class=\"lode__type\"\n                    :title=\"type\">{{ shortType }}</span>\n                <slot />\n                <div\n                    class=\"headings-group\"\n                    :class=\"{'highlighted': highlighted}\">\n                    <div\n                        v-for=\"heading in headings\"\n                        :key=\"heading\"\n                        class=\"lode__thing-heading\">\n                        <!-- this is the primary / required properties -->\n                        <template\n                            v-if=\"showAlwaysProperties && alwaysProperties[heading]\">\n                            <Property\n                                v-for=\"(value,key) in alwaysProperties[heading]\"\n                                :key=\"key\"\n                                :expandedThing=\"expandedThing\"\n                                :expandedProperty=\"key\"\n                                :schema=\"value\"\n                                @editing-property-event=\"handleEditingEvent($event)\"\n                                :editingThing=\"editingThing\"\n                                :canEdit=\"false\"\n                                :profile=\"profile\"\n                                @set-checkbox=\"$emit('set-checkbox')\"\n                                @select=\"select\" />\n                            <slot name=\"frameworkTags\" />\n                        </template>\n                        <template\n                            v-else-if=\"showPossibleProperties && possibleProperties[heading]\">\n                            <!-- this is the secondary / contains properties -->\n                            <Property\n                                v-for=\"(value,key) in possibleProperties[heading]\"\n                                :key=\"key\"\n                                :expandedThing=\"expandedThing\"\n                                :expandedProperty=\"key\"\n                                :schema=\"value\"\n                                @editing-property-event=\"handleEditingEvent($event)\"\n                                :editingThing=\"editingThing\"\n                                :canEdit=\"allowPropertyEdits(key)\"\n                                :profile=\"profile\"\n                                @set-checkbox=\"$emit('set-checkbox')\"\n                                @select=\"select\" />\n                        </template>\n                        <template v-else-if=\"showViewProperties && viewProperties[heading]\">\n                            <!-- here we have the expandable / does not contain value for properties -->\n                            <Property\n                                v-for=\"(value,key) in viewProperties[heading]\"\n                                :key=\"key\"\n                                :expandedThing=\"expandedThing\"\n                                :expandedProperty=\"key\"\n                                :schema=\"value\"\n                                @editing-property-event=\"handleEditingEvent($event)\"\n                                :editingThing=\"editingThing\"\n                                :canEdit=\"allowPropertyEdits(key)\"\n                                :profile=\"profile\"\n                                @set-checkbox=\"$emit('set-checkbox')\"\n                                @select=\"select\" />\n                        </template>\n                    </div>\n                </div>\n                <AssertionEditor\n                    v-if=\"canEditAssertions && managingAssertions\"\n                    :uri=\"uri || obj.id\" />\n                <!-- informational sots here -->\n                <slot name=\"frameworkDetails\" />\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n\nimport common from '@/mixins/common.js';\nexport default {\n    // Thing represents a JSON-LD object. Does not have to be based on http://schema.org/Thing.\n    name: 'Thing',\n    mixins: [common],\n    props: {\n        expandInModal: {\n            type: Boolean,\n            default: false\n        },\n        competencyAsPropertyType: {\n            type: String,\n            default: ''\n        },\n        // Level vs Competency\n        competencyAsPropertyObjectType: {\n            type: String,\n            default: ''\n        },\n        // (Optional) Object that will be turned into the Thing during initialization.\n        obj: Object,\n        // (Optional) Expanded Object (if any) that will be turned into the ExpandedThing during initialization.\n        children: Number,\n        expandedObj: Object,\n        // (Optional) URI/URL to an object to go fetch, in lieu of the above two.\n        uri: String,\n        // If the uri is specified, whether we should delay loading. (prevents infinite loops)\n        clickToLoad: Boolean,\n        // True if the parent isn't editable, this shouldn't be either. Overrides canEdit.\n        parentNotEditable: Boolean,\n        // Application profile used to constrain and respecify properties that are to be made editable.\n        profile: Object,\n        highlightList: Array,\n        childrenExpanded: {\n            type: Boolean,\n            default: true\n        },\n        newFramework: Boolean,\n        index: Number,\n        cantMoveUp: Boolean,\n        cantMoveDown: Boolean,\n        cantMoveRight: Boolean,\n        cantMoveLeft: Boolean,\n        properties: String,\n        editingNode: Boolean,\n        containerType: String,\n        view: {\n            type: String,\n            default: 'framework'\n        },\n        subview: {\n            type: String,\n            default: ''\n        },\n        filter: {\n            type: String,\n            default: 'showAll'\n        },\n        canEditAssertions: Boolean\n    },\n    components: {\n        Property: () => import('./Property.vue'),\n        AssertionEditor: () => import('./AssertionEditor.vue')\n    },\n    data: function() {\n        return {\n            editingThing: false,\n            editingClass: '',\n            hoverClass: '',\n            // After initialization and expansion, this will hold the fully expanded thing we're displaying/CRUDing.\n            expandedThing: null,\n            originalThing: null,\n            // True if we are in the compacted (alwaysProperties) property display mode. In the middle of this and showPossible is all properties that we can view.\n            showAlways: true,\n            // True if we are in the fully expanded (possibleProperties) property display mode. Only relevant if we can edit the object.\n            showPossible: false,\n            uriAndNameOnly: false,\n            name: null,\n            skipConfigProperties: [\"alwaysProperties\", \"headings\", \"primaryProperties\", \"secondaryProperties\", \"tertiaryProperties\", \"relationshipsHeading\", \"relationshipsPriority\"]\n        };\n    },\n    created: function() {\n        if (this.clickToLoad === false) { this.load(); }\n    },\n    mounted: function() {\n        this.load();\n        if (this.uri && this.$store.state.editor) {\n            this.resolveNameFromUrl(this.uri);\n        }\n        if (this.properties === \"secondary\") {\n            this.showAlways = false;\n            this.showPossible = null;\n        } else if (this.properties === \"tertiary\") {\n            this.showAlways = false;\n            this.showPossible = true;\n        }\n    },\n    computed: {\n        thingAsPropertyModalObject: function() {\n            var name = this.$parent.$parent.obj.name;\n            if (!name) {\n                name = this.$parent.$parent.obj[\"skos:prefLabel\"];\n            }\n            let object = {\n                component: 'Single',\n                uri: this.uri,\n                type: this.competencyAsPropertyType,\n                objectType: this.competencyAsPropertyObjectType,\n                parentName: name,\n                canEdit: this.canEdit\n            };\n            return object;\n        },\n        framework: function() {\n            return this.$store.getters['editor/framework'];\n        },\n        thingAsPropertyIcon: function() {\n            let type;\n            if (this.competencyAsPropertyObjectType === \"Level\") {\n                type = 'level';\n            } else if (this.competencyAsPropertyType !== '') {\n                type = this.competencyAsPropertyType;\n            } else {\n                type = this.shortType;\n            }\n            let icon;\n            if (type === 'narrows') {\n                icon = 'fa fa-less-than';\n            } else if (type === 'is enabled by') {\n                icon = 'fa fa-toggle-on';\n            } else if (type === 'broadens') {\n                icon = 'fa fa-less-than';\n            } else if (type === 'is equivalent to') {\n                icon = 'fa fa-equals';\n            } else if (type === 'desires') {\n                icon = 'fa fa-crosshairs';\n            } else if (type === 'requires') {\n                icon = 'fa fa-asterisk';\n            } else if (type === 'Level' || type === 'level' || this.objectType === \"Level\" || this.objectType === 'level') {\n                icon = 'fa fa-layer-group';\n            } else if (type === 'is related to') {\n                icon = 'fa fa-sync';\n            } else if (type === 'similar to') {\n                icon = 'fa fa-tilde';\n            } else {\n                icon = \"fa fa-link\";\n            }\n            return icon;\n        },\n        showAddComments() {\n            if (this.$store.getters['editor/queryParams'].concepts === \"true\" || this.$store.getters['editor/conceptMode'] === true || this.$store.getters['editor/progressionMode'] === true) {\n                return false;\n            }\n            return this.$store.state.app.canAddComments;\n        },\n        competencyAsPropertyClass: function() {\n            if (this.competencyAsPropertyIsExternal) {\n                return 'competency-as-property';\n            } else {\n                return '';\n            }\n        },\n        showAlwaysProperties: function() {\n            if (this.showAlways === true &&\n                    this.expandedThing !== null && this.expandedThing !== undefined) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        showPossibleProperties: function() {\n            if (this.showPossible === true &&\n                    this.expandedThing != null &&\n                    this.expandedThing !== undefined) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        showViewProperties: function() {\n            if (this.showAlways === false && this.showPossible === null && this.expandedThing !== null &&\n                    this.expandedThing !== undefined) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        /*\n             * TO DO: Make headings only returns one that have properties filled in\n             * and are showing.\n             * Currently I can get a blank list section for keys heading section\n             */\n        headings: function() {\n            if (this.profile && this.profile[\"headings\"] && this.profile[\"headings\"].length !== 0) {\n                return this.profile[\"headings\"];\n            } else {\n                return [\"\"];\n            }\n        },\n        minimizeButtonClass: function() {\n            if (this.showAlways === true && this.showPossible === false) {\n                return 'is-text has-text-info ';\n            } else {\n                return 'is-text has-text-dark';\n            }\n        },\n        allPropertiesButtonClass: function() {\n            if (this.showAlways === false && this.showPossible === null) {\n                return 'is-info has-text-white ';\n            } else {\n                return 'is-text has-text-dark';\n            }\n        },\n        globalButtonClass: function() {\n            if (this.showAlways === false && this.showPossible === true) {\n                return 'is-info has-text-white ';\n            } else {\n                return 'is-text has-text-dark';\n            }\n        },\n        // Get the fully qualified type of the thing. eg: http://schema.org/Person\n        type: function() {\n            if (this.expandedThing == null) {\n                return null;\n            }\n            return this.expandedThing[\"@type\"][0];\n        },\n        /*\n            Check to see if the current thing as property is in the framework object\n            This included relations, levels, and maybe schemas later?\n        */\n        competencyAsPropertyIsExternal: function() {\n            let external = true;\n            if (this.framework) {\n                if (this.objectType === 'Level' && this.framework.level) {\n                    for (let i = 0; i < this.framework.level.length; i++) {\n                        if (this.framework.level[i] === this.uri) {\n                            external = false;\n                            return external;\n                        }\n                    }\n                } else if (this.framework.competency) {\n                    for (let i = 0; i < this.framework.competency.length; i++) {\n                        if (this.framework.competency[i] === this.uri) {\n                            external = false;\n                            return external;\n                        }\n                    }\n                }\n            }\n            return external;\n        },\n        // Get the short (one word) type of the thing. eg: Person\n        shortType: function() {\n            if (this.expandedThing == null) {\n                return null;\n            }\n            return this.expandedThing[\"@type\"][0].split(\"/\").pop();\n        },\n        // Get the canonical namespace/context prefix of the type. eg: http://schema.org/ -- WARNING: This is not the @context as specified by the Thing.\n        context: function() {\n            // TODO: Rename 'namespace' -- context is confusing.\n            var ary = this.type.split(\"/\");\n            ary.pop();\n            return ary.join(\"/\");\n        },\n        // True if the current client can edit this object.\n        canEdit: function() {\n            if (this.parentNotEditable === true) {\n                return false;\n            }\n            if (this.originalThing) {\n                return this.canEditAny(this.originalThing);\n            }\n            return true;\n        },\n        // Fetches a map of fully qualified property identifiers to the full @graph property specifications.\n        schema: function() {\n            var schema = this.$store.state.lode.schemata[this.type];\n            if (schema == null) {\n                schema = this.$store.state.lode.schemata[this.context];\n            }\n            var result = {};\n            if (schema !== null && schema !== undefined) {\n                for (var i = 0; i < schema.length; i++) {\n                    var r = schema[i];\n                    result[r[\"@id\"]] = r;\n                }\n            }\n            return result;\n        },\n        // Map of fully qualified property ids to schema items that should always be shown (if available) at the top for any object.\n        alwaysProperties: function() {\n            var result = {};\n            if (this.profile && this.profile[\"alwaysProperties\"]) {\n                return this.getPropertiesFromProfile(result, \"alwaysProperties\");\n            } else if (this.profile && this.profile[\"primaryProperties\"]) {\n                return this.getPropertiesFromProfile(result, \"primaryProperties\");\n            }\n            var props = [\n                \"http://schema.org/name\", \"http://schema.org/description\", \"http://purl.org/dc/terms/title\", \"http://purl.org/dc/terms/description\",\n                \"http://www.w3.org/2004/02/skos/core#prefLabel\", \"http://www.w3.org/2004/02/skos/core#definition\"\n            ];\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n\n                if (this.profile == null || (this.profile != null && this.profile[prop] !== undefined)) {\n                    if (this.schema[prop] != null) {\n                        if (this.expandedThing[prop] != null && this.expandedThing[prop].length === 0) {\n                            if (prop === \"http://schema.org/name\" || prop === \"http://purl.org/dc/terms/title\" || prop === \"http://www.w3.org/2004/02/skos/core#prefLabel\") {\n                                this.setUnknownName(prop);\n                            }\n                        }\n                        if (this.expandedThing[prop] != null && this.expandedThing[prop].length !== 0) {\n                            var heading = \"\";\n                            if (this.profile != null) {\n                                if (this.profile[prop][\"heading\"]) {\n                                    heading = this.profile[prop][\"heading\"];\n                                }\n                                if (result[heading] == null || result[heading] === undefined) {\n                                    result[heading] = {};\n                                }\n                                result[heading][prop] = this.profile[prop];\n                            } else {\n                                if (result[heading] == null || result[heading] === undefined) {\n                                    result[heading] = {};\n                                }\n                                result[heading][prop] = this.schema[prop];\n                            }\n                        }\n                    }\n                }\n            }\n            return result;\n        },\n        // Map of fully qualified property ids to schema items, limited to properties that have data in them, shown in the first level of breakout. Configurable via the profile property.\n        viewProperties: function() {\n            var result = {};\n            for (var key in this.alwaysProperties) {\n                result[key] = {};\n                for (var key2 in this.alwaysProperties[key]) {\n                    result[key][key2] = this.alwaysProperties[key][key2];\n                }\n            }\n            if (this.profile && this.profile[\"secondaryProperties\"]) {\n                return this.getPropertiesFromProfile(result, \"secondaryProperties\");\n            }\n            for (var key in this.expandedThing) {\n                if (key === \"constructor\") continue;\n                if (key === \"@id\") continue;\n                if (key === \"@type\") continue;\n                if (key === \"@context\") continue;\n                if (key.endsWith(\"owner\")) continue;\n                if (key.endsWith(\"reader\")) continue;\n                if (key.endsWith(\"signature\")) continue;\n                // If it doesn't exist in the profile, don't show it.\n                if (this.profile != null && this.profile[key] === undefined) {\n                    continue;\n                }\n                // If it doesn't exist in the data, don't show it.\n                if (this.expandedThing[key] == null || this.expandedThing[key].length === 0) {\n                    continue;\n                }\n                // If it does exist in the profile, use the schema from the profile.\n                if (this.profile != null) {\n                    var heading = \"\";\n                    if (this.profile[key][\"heading\"]) {\n                        heading = this.profile[key][\"heading\"];\n                    }\n                    if (result[heading] == null || result[heading] === undefined) {\n                        result[heading] = {};\n                    }\n                    result[heading][key] = this.profile[key];\n                    continue;\n                }\n                // If there is no profile, use the schema from the schema.\n                if (this.schema[key] != null && this.schema[key] !== undefined) {\n                    if (result[\"\"] == null || result[\"\"] === undefined) {\n                        result[\"\"] = {};\n                    }\n                    result[\"\"][key] = this.schema[key];\n                    continue;\n                }\n                // If it doesn't exist in the schema, use the 'schemaFallback'.\n                if (result[\"\"] == null || result[\"\"] === undefined) {\n                    result[\"\"] = {};\n                }\n                result[\"\"][key] = this.$store.state.lode.schemaFallback[key];\n            }\n            if (this.profile) {\n                for (var key in this.profile) {\n                    var heading = \"\";\n                    if (this.profile[key][\"heading\"]) {\n                        heading = this.profile[key][\"heading\"];\n                    }\n                    if (result[heading] == null && result[heading] === undefined) {\n                        result[heading] = {};\n                    }\n                    if (this.profile[key][\"valuesIndexed\"]) {\n                        var f = this.profile[key][\"valuesIndexed\"];\n                        f = f();\n                        if (f && f[this.obj.shortId()]) {\n                            result[heading][key] = this.profile[key];\n                        }\n                    } else if (this.expandedThing[key] != null && this.expandedThing[key].length !== 0) {\n                        result[heading][key] = this.profile[key];\n                    }\n                }\n            }\n            return result;\n        },\n        // Map of fully qualified property ids to schema items, unlimited, shown in the second level of breakout. Configurable via the profile property.\n        possibleProperties: function() {\n            var result = {};\n            for (var key in this.viewProperties) {\n                result[key] = {};\n                for (var key2 in this.viewProperties[key]) {\n                    result[key][key2] = this.viewProperties[key][key2];\n                }\n            }\n            if (this.profile && this.profile[\"tertiaryProperties\"]) {\n                return this.getPropertiesFromProfile(result, \"tertiaryProperties\");\n            }\n            if (this.profile != null) {\n                for (var key in this.profile) {\n                    if (!EcArray.has(this.skipConfigProperties, key)) {\n                        if (this.profile[\"headings\"] && this.profile[\"headings\"].length !== 0) {\n                            var heading = this.profile[key][\"heading\"];\n                            if (result[heading] == null || result[heading] === undefined) {\n                                result[heading] = {};\n                            }\n                            result[heading][key] = this.profile[key];\n                        } else {\n                            if (result[\"\"] == null || result[\"\"] === undefined) {\n                                result[\"\"] = {};\n                            }\n                            result[\"\"][key] = this.profile[key];\n                        }\n                    }\n                }\n            } else {\n                for (var key in this.schema) {\n                    if (key === \"constructor\") continue;\n                    if (key === \"@id\") continue;\n                    if (key === \"@type\") continue;\n                    if (key === \"@context\") continue;\n                    if (key.endsWith(\"owner\")) continue;\n                    if (key.endsWith(\"reader\")) continue;\n                    if (key.endsWith(\"signature\")) continue;\n                    if (this.profile != null && this.profile[key] === undefined) {\n                        continue;\n                    }\n                    if (this.schema[key][\"@type\"] === undefined && this.schema[key][\"http://schema.org/domainIncludes\"] === undefined) {\n                        continue;\n                    }\n                    if (this.schema[key][\"@type\"] != null && this.schema[key][\"@type\"][0].indexOf(\"Property\") === -1) {\n                        continue;\n                    }\n                    // If there is no profile, use the schema from the schema.\n                    if (this.schema[key] != null && this.schema[key] !== undefined) {\n                        if (result[\"\"] == null || result[\"\"] === undefined) {\n                            result[\"\"] = {};\n                        }\n                        result[\"\"][key] = this.schema[key];\n                        continue;\n                    }\n                    // If it doesn't exist in the schema, use the 'schemaFallback'.\n                    if (result[\"\"] == null || result[\"\"] === undefined) {\n                        result[\"\"] = {};\n                    }\n                    result[\"\"][key] = this.$store.state.lode.schemaFallback[key];\n                }\n            }\n            return result;\n        },\n        // Attempt to get icons for types. Failed pretty miserably.\n        iconClass: function() {\n            return \"fas fa-\" + this.shortType.toLowerCase();\n        },\n        highlighted: function() {\n            if (this.highlightList) {\n                for (var i = 0; i < this.highlightList.length; i++) {\n                    if (this.obj.shortId() === this.highlightList[i] || this.obj.id === this.highlightList[i]) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        changedObject: function() {\n            if (this.$store.state.editor) {\n                return this.$store.state.editor.changedObject;\n            }\n            return null;\n        },\n        managingAssertions: function() {\n            return this.$store.getters['editor/manageAssertions'] && this.shortType === 'Competency' && this.$route.name === 'framework';\n        }\n    },\n    methods: {\n        clickShowDetails() {\n            this.$store.commit('app/showModal', this.thingAsPropertyModalObject);\n        },\n        goToCompetencyWithinThisFramework: function() {\n            // Scroll to competency\n            this.$scrollTo(\"#scroll-\" + this.uri.split('/').pop());\n        },\n        handleClickAddComment: function() {\n            this.$store.commit('editor/setAddCommentAboutId', EcRemoteLinkedData.trimVersionFromUrl(this.expandedThing[\"@id\"]));\n            this.$store.commit('editor/setAddCommentType', 'new');\n            this.$store.commit('app/showModal', {component: 'AddComment'});\n        },\n        editNode: function() {\n            this.$emit('edit-node-event', true);\n        },\n        handleEditingEvent: function(e) {\n            if (e) {\n                /*\n                     * hide all edit options\n                     * could probably make uneditable entirely\n                     * but this helps remove the options\n                     * should only be able to edit one thing at a time\n                     * without an intended use case for editing multiple things\n                     * at a time\n                     */\n                this.editingClass = 'editing-competency';\n                this.editingThing = true;\n                this.$emit('editing-thing', true);\n            } else {\n                this.editingClass = '';\n                this.editingThing = false;\n                this.$emit('editing-thing', false);\n            }\n        },\n        /*\n             * Show just the properties that\n             * have values for this competency\n             */\n        showEnteredProperties: function() {\n            this.showAlways = false;\n            this.showPossible = null;\n        },\n        /*\n             * Show all available properties\n             * even empty\n             */\n        showGlobal: function() {\n            this.showAlways = false;\n            this.showPossible = true;\n        },\n        emitExpandEvent: function(e) {\n            this.$emit('expand-event');\n        },\n        load: function() {\n            var me = this;\n            if (this.uri != null) {\n                // If we have a uri, go get the data from the uri and continue loading.\n                EcRepository.get(\n                    this.uri,\n                    function(t) {\n                        me.originalThing = t;\n                        if (!EcObject.isObject(t)) {\n                            me.resolveNameFromUrl(me.uri);\n                            me.uriAndNameOnly = true;\n                        } else {\n                            var allTypes = me.getAllTypes(t);\n                            if (t.context != null && t.context !== undefined) {\n                                allTypes.push(t.context);\n                            }\n                            new EcAsyncHelper().each(allTypes, function(type, callback) {\n                                me.loadSchema(callback, type);\n                            }, function() {\n                                me.expand(t, function() {\n                                });\n                            });\n                        }\n                    },\n                    function() {\n                        me.resolveNameFromUrl(me.uri);\n                        me.uriAndNameOnly = true;\n                    }\n                );\n            } else {\n                if (this.expandedObj != null && this.expandedObj !== undefined) {\n                    // If we don't have an expandedObj provided, expand whatever is in obj and continue loading.\n                    this.loadSchema(function() {\n                        me.expandedThing = me.expandedObj;\n                    }, this.expandedObj[\"@type\"][0]);\n                } else if (this.obj) {\n                    me.originalThing = this.obj;\n                    var allTypes = me.getAllTypes(this.obj);\n                    if (this.obj.context != null && this.obj.context !== undefined) {\n                        allTypes.push(this.obj.context);\n                    }\n                    new EcAsyncHelper().each(allTypes, function(type, callback) {\n                        // delay enough for the schema to load from App so not every Thing component has to do this\n                        setTimeout(() => {\n                            me.loadSchema(callback, type);\n                        }, 100);\n                    }, function() {\n                        me.expand(me.obj, function() {\n                        });\n                    });\n                }\n            }\n        },\n        // Fleshes out the Thing object with empty containers for any possible field that can be edited, according to the schema. Permits reactivity of currently unused fields.\n        reactify: function(o) {\n            for (let key in o) {\n                if (EcArray.isArray(o[key])) {\n                    for (let item of o[key]) {\n                        if (EcObject.isObject(item)) {\n                            if (item[\"@type\"] != null) {\n                                this.reactify(item);\n                            }\n                        }\n                    }\n                }\n            }\n            var objectModel = null;\n            var fullType = o[\"@type\"];\n            if (EcArray.isArray(fullType) && fullType.length > 0) fullType = fullType[0];\n            var objectModel = this.$store.state.lode.objectModel[fullType];\n            if (objectModel != null) {\n                for (let key in objectModel) {\n                    if (o[key] == null) {\n                        o[key] = [];\n                    }\n                }\n            }\n            if (this.profile) {\n                for (let key in this.profile) {\n                    if (o[key] == null && !this.profile[key][\"valuesIndexed\"] && !EcArray.has(this.skipConfigProperties, key)) {\n                        o[key] = [];\n                    }\n                }\n            }\n            return o;\n        },\n        // Performs a JSON-LD Processor 'expand' operation that disambiguates and attaches a namespace for each property. Places result in expandedThing. Does not use the schema, uses the @context of the thing.\n        expand: async function(o, after) {\n            var me = this;\n            var toExpand = JSON.parse(o.toJson());\n            if (toExpand[\"@context\"] != null && toExpand[\"@context\"].startsWith(\"http://\")) {\n                toExpand[\"@context\"] = toExpand[\"@context\"].replace(\"http://\", \"https://\");\n            }\n            if (toExpand[\"@context\"] != null && toExpand[\"@context\"].indexOf(\"skos\") !== -1) {\n                toExpand[\"@context\"] = \"https://schema.cassproject.org/0.4/skos/\";\n            }\n            try {\n                let expanded = await jsonld.expand(toExpand);\n                me.expandedThing = me.reactify(expanded[0]);\n            } catch (err) {\n                appError(err);\n            }\n        },\n        // Loads the schema (not the context!) for this object, if available and if it is where it should be (at the url of the fully qualified @type).\n        loadSchema: function(after, type) {\n            var me = this;\n            if (type == null) type = this.type;\n            if (type.startsWith(\"http://schema.org/\")) {\n                if (after != null) after();\n                return;\n            } else if (type.indexOf(\"ConceptScheme\") !== -1) {\n                type = \"https://schema.cassproject.org/0.4/skos/ConceptScheme\";\n            } else if (type.indexOf(\"Concept\") !== -1) {\n                type = \"https://schema.cassproject.org/0.4/skos/Concept\";\n            } else if (type.indexOf(\"skos\") !== -1) {\n                type = \"https://schema.cassproject.org/0.4/skos\";\n            }\n            if (this.$store.state.lode.schemata[type] === undefined && type.indexOf(\"EncryptedValue\") === -1) {\n                var augmentedType = type;\n                augmentedType += (type.indexOf(\"schema.org\") !== -1 ? \".jsonld\" : \"\");\n                EcRemote.getExpectingObject(\"\", augmentedType, async function(context) {\n                    me.$store.commit('lode/rawSchemata', {id: type, obj: context});\n                    try {\n                        let expanded = await jsonld.expand(context);\n                        me.$store.dispatch('lode/schemata', {id: type, obj: expanded});\n                        if (after != null) after();\n                    } catch (err) {\n                        after();\n                    }\n                }, after);\n            } else {\n                if (after != null) after();\n            }\n        },\n        // Add a piece of new data to a property. Invoked by child components, in order to add data (for reactivity reasons).\n        add: function(property, value) {\n            var me = this;\n            new EcAsyncHelper().each(me.getAllTypes(value), function(type, callback) {\n                me.loadSchema(callback, type);\n            }, async function() {\n                if (me.expandedThing[property] === undefined || me.expandedThing[property] == null) {\n                    me.expandedThing[property] = [];\n                }\n                if (!EcArray.isArray(me.expandedThing[property])) {\n                    me.expandedThing[property] = [me.expandedThing[property]];\n                }\n                if (value[\"@value\"] == null) {\n                    try {\n                        let expanded = await jsonld.expand(JSON.parse(value.toJson()));\n                        me.expandedThing[property].push(me.reactify(expanded[0]));\n                    } catch (err) {\n                        appError(err);\n                    }\n                } else {\n                    me.expandedThing[property].push(value);\n                }\n            });\n        },\n        // Removes a piece of data from a property. Invoked by child components, in order to remove data (for reactivity reasons).\n        remove: function(property, index) {\n            if (!EcArray.isArray(this.expandedThing[property])) {\n                this.expandedThing[property] = [this.expandedThing[property]];\n            }\n            this.expandedThing[property].splice(index, 1);\n            this.save();\n        },\n        // Changes a piece of data. Invoked by child components, in order to change a piece of data to something else (for reactivity reasons).\n        update: function(property, index, value) {\n            if (index == null) {\n                this.expandedThing[property] = value;\n            } else {\n                this.expandedThing[property][index] = value;\n            }\n        },\n        // Saves this thing to the location specified by its @id.\n        save: async function() {\n            // TODO: If repo isn't defined, save to its @id location.\n            var saver = this;\n            var me = this;\n            while (saver.expandedThing[\"@id\"] == null || saver.expandedThing[\"@id\"] === undefined) {\n                saver = saver.$parent.$parent;\n                if (saver.expandedThing == null) {\n                    return \"Could not save.\";\n                }\n            }\n            // When we save, we need to remove all the extreneous arrays that we added to support reactivity.\n            try {\n                let compacted = await jsonld.compact(this.stripEmptyArrays(this.expandedThing), this.$store.state.lode.rawSchemata[this.context]);\n                if (compacted) {\n                    var rld = new EcRemoteLinkedData();\n                    rld.copyFrom(compacted);\n                    rld.context = me.context;\n                    if (rld.signature && !EcArray.isArray(rld.signature)) {\n                        rld.signature = [rld.signature];\n                    }\n                    delete rld[\"@context\"];\n                    if (rld.owner && !EcArray.isArray(rld.owner)) {\n                        rld.owner = [rld.owner];\n                    }\n                    if (me.$store.state.editor && me.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[rld.id] !== true) {\n                        rld = await EcEncryptedValue.toEncryptedValue(rld);\n                    }\n                    repo.saveTo(rld, appLog, appError);\n                }\n            } catch (err) {\n                appError(err);\n            }\n        },\n        // Supports save() by removing reactify arrays.\n        stripEmptyArrays(o) {\n            // TODO: Investigate use of Vue.$set instead of reactification method.\n            if (EcArray.isArray(o)) {\n                if (o.length === 0) {\n                    return null;\n                }\n                for (var i = 0; i < o.length; i++) {\n                    o[i] = this.stripEmptyArrays(o[i]);\n                    if (o[i] == null) {\n                        o.splice(i--, 1);\n                    }\n                }\n            } else if (EcObject.isObject(o)) {\n                for (var key in o) {\n                    var value = this.stripEmptyArrays(o[key]);\n                    if (value == null) {\n                        delete o[key];\n                    }\n                }\n            }\n            return o;\n        },\n        // Gets all the fully qualfied type names (qualified by the @context) of all the objects in this Thing.\n        getAllTypes: function(o, context) {\n            // TODO: Use canonical type identifiers from expandedThing, so that we don't rely on @context.\n            var types = [];\n            if (o != null && o.context != null) {\n                context = o.context;\n            }\n            if (EcArray.isArray(o)) {\n                for (var i = 0; i < o.length; i++) {\n                    types = types.concat(this.getAllTypes(o[i], context));\n                }\n            } else if (EcObject.isObject(o)) {\n                if (o.type != null) {\n                    if (o.context == null) o.context = context;\n                    types.push(o.context + (o.context.endsWith(\"/\") ? \"\" : \"/\") + o.type);\n                }\n                if (o[\"@type\"] != null) {\n                    if (o[\"@context\"] == null) o[\"@context\"] = context;\n                    // Avoid problem with CASE imports that have nested objected. Probably a better way to do this.\n                    if (o[\"@type\"].indexOf(\"schema:\") === -1) {\n                        types.push(o[\"@context\"] + (o[\"@context\"].endsWith(\"/\") ? \"\" : \"/\") + o[\"@type\"]);\n                    }\n                }\n                for (var key in o) {\n                    types = types.concat(this.getAllTypes(o[key], context));\n                }\n            }\n            return types;\n        },\n        removeObject: function() {\n            this.$emit('remove-object', this.originalThing);\n        },\n        resolveNameFromUrlNotInCass: function(url) {\n            let me = this;\n            // If not in repo, do an XML HTTP Request\n            me.get(url, null, null, function(data) {\n                var name = null;\n                if (data && data[0] !== \"<\") {\n                    if (data['ceterms:name']) {\n                        name = data['ceterms:name'];\n                    } else if (data['ceasn:competencyText']) {\n                        name = data['ceasn:competencyText'];\n                    } else if (data['name']) {\n                        name = data['name'];\n                    } else if (data['schema:name']) {\n                        name = data['schema:name'];\n                    } else if (data['title']) {\n                        name = data['title'];\n                    } else if (data['skos:prefLabel']) {\n                        name = data['skos:prefLabel'];\n                    } else if (data['title']) {\n                        name = data['title'];\n                    } else if (data['@graph'] && data['@graph'][0]) {\n                        if (data['@graph'][0]['ceterms:name']) {\n                            name = data['@graph'][0]['ceterms:name'];\n                        } else if (data['@graph'][0]['name']) {\n                            name = data['@graph'][0]['name'];\n                        } else if (data['@graph'][0]['schema:name']) {\n                            name = data['@graph'][0]['schema:name'];\n                        } else if (data['@graph'][0]['title']) {\n                            name = data['@graph'][0]['title'];\n                        } else if (data['@graph'][0]['skos:prefLabel']) {\n                            name = data['@graph'][0]['skos:prefLabel'];\n                        }\n                    }\n                    // If it's a langstring\n                    name = schema.Thing.getDisplayStringFrom(name);\n                    // If still object, display value\n                    if (EcObject.isObject(name)) {\n                        var langs = Object.keys(name);\n                        name = name[langs[0]];\n                    }\n                }\n                me.name = name;\n            }, function(error) {\n                appLog(error);\n            });\n        },\n        resolveNameFromUrl: function(url) {\n            var me = this;\n            // Try repo first to use cache if possible\n            EcRepository.get(url, function(success) {\n                if (!success) {\n                    return me.resolveNameFromUrlNotInCass(url);\n                }\n                var name = success.name;\n                if (!name) {\n                    name = success[\"skos:prefLabel\"];\n                }\n                name = schema.Thing.getDisplayStringFrom(name);\n                // If still object, display value\n                if (EcObject.isObject(name)) {\n                    var langs = Object.keys(name);\n                    name = name[langs[0]];\n                }\n                me.name = name;\n            }, function(failure) {\n                me.resolveNameFromUrlNotInCass(url);\n            });\n        },\n        get: function(server, service, headers, success, failure) {\n            this.$store.dispatch('editor/getThing', {\n                server: server,\n                service: service,\n                headers: headers,\n                success: success,\n                failure: failure\n            });\n        },\n        allowPropertyEdits: function(key) {\n            if (key === \"@id\" || key === \"ctid\" || key === \"registryURL\") {\n                return false;\n            }\n            if (this.profile && this.profile[key] && this.profile[key][\"readOnly\"] === true) {\n                return false;\n            }\n            return this.canEdit;\n        },\n        moveUp: function() {\n            this.$emit('move-up', this.originalThing.shortId(), this.index);\n        },\n        moveDown: function() {\n            this.$emit('move-down', this.originalThing.shortId(), this.index);\n        },\n        moveRight: function() {\n            this.$emit('move-right', this.originalThing.shortId(), this.index);\n        },\n        moveLeft: function() {\n            this.$emit('move-left', this.originalThing.shortId(), this.index);\n        },\n        displayHeading: function(heading) {\n            if (this.showAlways === true && this.showPossible === false) {\n                if (this.alwaysProperties[heading] && EcObject.keys(this.alwaysProperties[heading]).length > 0) {\n                    return heading;\n                }\n            } else if (this.showAlways === false && this.showPossible == null) {\n                if (this.viewProperties[heading] && EcObject.keys(this.viewProperties[heading]).length > 0) {\n                    return heading;\n                }\n            } else if (this.showPossible === true && EcObject.keys(this.possibleProperties[heading]).length > 0) {\n                return heading;\n            }\n            return null;\n        },\n        select: function(key, checked) {\n            this.$emit('select', key, checked);\n        },\n        getPropertiesFromProfile: function(result, type) {\n            if (this.profile[type] == null) return null;\n            for (var i = 0; i < this.profile[type].length; i++) {\n                var prop = this.profile[type][i];\n                var heading = \"\";\n                if (this.profile[prop] && this.profile[prop][\"heading\"]) {\n                    heading = this.profile[prop][\"heading\"];\n                }\n                if (result[heading] == null && result[heading] === undefined) {\n                    result[heading] = {};\n                }\n                if ((this.$store.getters['editor/conceptMode'] || this.$store.getters['editor/progressionMode']) && (prop === \"http://www.w3.org/2004/02/skos/core#broader\" || prop === \"http://www.w3.org/2004/02/skos/core#narrower\")) {\n                    continue;\n                }\n                if (this.profile[prop] && this.profile[prop][\"valuesIndexed\"]) {\n                    if (this.$store.state.editor.queryParams.ceasnDataFields === \"true\" && (prop === \"hasChild\" || prop === \"isChildOf\")) {\n                        continue;\n                    } else if (this.$store.state.editor.queryParams.ceasnDataFields !== \"true\" && (prop === \"narrows\" || prop === \"broadens\")) {\n                        continue;\n                    }\n                    var f = this.profile[prop][\"valuesIndexed\"];\n                    f = f();\n                    if (f && f[this.obj.shortId()]) {\n                        result[heading][prop] = this.profile[prop];\n                    }\n                } else if (this.expandedThing[prop] != null && this.expandedThing[prop].length !== 0) {\n                    result[heading][prop] = this.profile[prop];\n                }\n            }\n            return result;\n        },\n        setUnknownName: function(prop) {\n            this.expandedThing[prop] = [{\"@value\": \"Unknown name\"}];\n        }\n    },\n    watch: {\n        canEdit: function() {\n            this.showAlways = true;\n            this.showPossible = false;\n        },\n        changedObject: async function() {\n            if (this.changedObject && this.view === \"importLight\") {\n                this.load();\n                this.$store.commit('editor/changedObject', null);\n            } else if (this.changedObject && (this.changedObject === this.uri || (this.originalThing && this.changedObject === this.originalThing.shortId()))) {\n                if (this.uri) {\n                    this.resolveNameFromUrl(this.uri);\n                }\n                var type = \"Ec\" + (this.obj ? this.obj.type : this.shortType);\n                if (type === \"EcEncryptedValue\") {\n                    let encryptedType = \"Ec\" + this.obj.encryptedType;\n                    let encryptedThing = await EcRepository.get(this.changedObject);\n                    let returnObject = new window[encryptedType]();\n                    returnObject.copyFrom(await EcEncryptedValue.fromEncryptedValue(encryptedThing));\n                    this.obj = returnObject;\n                    this.load();\n                } else if (type && window[type] && window[type].get) {\n                    let thing = await window[type].get(this.changedObject);\n                    this.obj = thing;\n                    this.load();\n                } else if (type && window[type]) {\n                    appLog(\"Can't get type: \" + type);\n                }\n                this.$store.commit('editor/changedObject', null);\n            }\n        },\n        properties: function() {\n            if (this.properties === \"primary\") {\n                this.showAlways = true;\n                this.showPossible = false;\n            } else if (this.properties === \"secondary\") {\n                this.showAlways = false;\n                this.showPossible = null;\n            } else if (this.properties === \"tertiary\") {\n                this.showAlways = false;\n                this.showPossible = true;\n            }\n        },\n        uri: function() {\n            this.load();\n        },\n        obj: function() {\n            if (this.obj && this.originalThing && this.obj.shortId() !== this.originalThing.shortId()) {\n                this.load();\n            }\n        }\n    }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Thing.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Thing.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Thing.vue?vue&type=template&id=37f184c6\"\nimport script from \"./Thing.vue?vue&type=script&lang=js\"\nexport * from \"./Thing.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}