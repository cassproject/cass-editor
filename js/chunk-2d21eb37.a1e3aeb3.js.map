{"version":3,"sources":["webpack:///./src/lode/components/Assertion.vue","webpack:///src/lode/components/Assertion.vue","webpack:///./src/lode/components/Assertion.vue?77a1","webpack:///./src/lode/components/Assertion.vue?4497"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","callback","initialize","once","expression","staticClass","ok","_v","_s","agent","timestamp","timeAgo","_e","negative","subject","evidenceText","_l","evidenceThing","index","key","url","attrs","text","badged","badgeUrl","staticRenderFns","props","uri","String","icon","Boolean","data","assertion","subjectPk","agentPk","expiry","competency","agentPerson","subjectPerson","evidence","evidenceExplanation","computed","statement","$moment","fromNow","competencyText","fingerprintUrl","email","EcCrypto","md5","toLowerCase","getGuid","hasReader","$store","getters","EcRemote","urlAppend","window","repo","selectedServer","watch","oldEvidence","newEvidence","_this","length","dispatch","then","because","$nextTick","methods","isVisible","entry","_this2","EcAssertion","get","getSubjectName","catch","appError","getSubjectAsync","pk","toPem","getAgentName","getAgentAsync","getAgent","assertionDate","getAssertionDateAsync","expirationDate","getExpirationDateAsync","getNegativeAsync","i","getEvidenceCount","getEvidenceAsync","push","EcCompetency","gotoCompetency","_this3","me","EcPerson","search","EcPk","fromPem","fingerprint","persons","p","Person","assignId","addOwner","displayName","failure","getSubject","_this4","component"],"mappings":"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","file":"js/chunk-2d21eb37.a1e3aeb3.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('span',{directives:[{name:\"observe-visibility\",rawName:\"v-observe-visibility\",value:({callback: _vm.initialize,once: true}),expression:\"{callback: initialize,once: true}\"}],staticClass:\"assertion\"},[_c('span',[(_vm.ok)?_c('li',[_c('strong',[_vm._v(_vm._s(_vm.agent))]),(_vm.timestamp)?_c('span',[_vm._v(\" claimed \"+_vm._s(_vm.timeAgo)+\":\")]):_vm._e(),_c('span',{staticClass:\"statement antitile\"},[(_vm.negative)?_c('span',[_c('strong',[_vm._v(\" \"+_vm._s(_vm.subject))]),_vm._v(\" can't do this\")]):_c('span',[_c('strong',[_vm._v(\" \"+_vm._s(_vm.subject))]),_vm._v(\" can do this\")]),(_vm.evidenceText)?_c('span',[_vm._v(\" because they \"),_vm._l((_vm.evidenceText),function(evidenceThing,index){return _c('span',{key:index},[(index != 0)?_c('span',[_vm._v(\" and they \")]):_vm._e(),(evidenceThing.url)?_c('a',{attrs:{\"href\":evidenceThing.url,\"target\":\"_blank\"}},[_vm._v(\" \"+_vm._s(evidenceThing.text))]):_c('span',[_vm._v(\" \"+_vm._s(evidenceThing.text))])])})],2):_vm._e(),(_vm.badged)?_c('span',[_vm._v(\" and I issued them a \"),_c('a',{attrs:{\"href\":_vm.badgeUrl}},[_vm._v(\"badge\")])]):_vm._e(),_vm._v(\". \")])]):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <span\n        class=\"assertion\"\n        v-observe-visibility=\"{callback: initialize,once: true}\">\n        <span>\n            <li v-if=\"ok\">\n                <strong>{{ agent }}</strong>\n                <span v-if=\"timestamp\"> claimed {{ timeAgo }}:</span>\n                <span class=\"statement antitile\">\n                    <span v-if=\"negative\"><strong> {{ subject }}</strong> can't do this</span>\n                    <span v-else><strong> {{ subject }}</strong> can do this</span>\n                    <span v-if=\"evidenceText\"> because they\n                        <span\n                            v-for=\"(evidenceThing, index) in evidenceText\"\n                            :key=\"index\">\n                            <span v-if=\"index != 0\"> and they </span>\n                            <a\n                                v-if=\"evidenceThing.url\"\n                                :href=\"evidenceThing.url\"\n                                target=\"_blank\"> {{ evidenceThing.text }}</a>\n                            <span v-else> {{ evidenceThing.text }}</span>\n                        </span>\n                    </span>\n                    <span v-if=\"badged\"> and I issued them a <a :href=\"badgeUrl\">badge</a></span>.\n                </span>\n            </li>\n        </span>\n    </span>\n</template>\n<script>\n\nexport default {\n    name: 'Assertion',\n    props: {\n        uri: String,\n        icon: Boolean\n    },\n    data: function() {\n        return {\n            assertion: null,\n            subjectPk: null,\n            agentPk: null,\n            agent: null,\n            timestamp: null,\n            expiry: null,\n            competency: null,\n            negative: null,\n            agentPerson: null,\n            subjectPerson: null,\n            evidence: null,\n            evidenceExplanation: null,\n            subject: null\n        };\n    },\n    computed: {\n        ok: function() {\n            if (this.subject == null) {\n                return false;\n            }\n\n            if (this.agent == null) {\n                return false;\n            }\n\n            if (this.competency == null) {\n                return false;\n            }\n\n            return true;\n        },\n        statement: function() {\n            if (this.subject == null) {\n                return \"Decrypting...\";\n            }\n\n            if (this.agent == null) {\n                return \"Decrypting...\";\n            }\n\n            if (this.competency == null) {\n                return \"Decrypting...\";\n            }\n\n            var statement = \"\";\n            if (this.timestamp != null) {\n                statement += this.$moment(this.timestamp).fromNow() + \", \";\n            }\n\n            statement += this.agent + \" claimed \" + this.subject;\n\n            if (this.negative === true) {\n                statement += \" could not \";\n            } else {\n                statement += \" could \";\n            }\n\n            statement += \"demonstrate \\\"\" + this.competencyText + \"\\\".\";\n            return statement;\n        },\n        timeAgo: function() {\n            if (this.timestamp == null) {\n                return null;\n            }\n            return this.$moment(this.timestamp).fromNow();\n        },\n        competencyText: function() {\n            if (this.competency == null) {\n                return null;\n            }\n            return this.competency.name;\n        },\n        evidenceText: function() {\n            return this.evidenceExplanation;\n        },\n        fingerprintUrl: function() {\n            if (this.agentPerson == null) {\n                return null;\n            }\n            if (this.agentPerson.email != null) {\n                return \"https://www.gravatar.com/avatar/\" + EcCrypto.md5(this.agentPerson.email.toLowerCase()) + \"?s=22\";\n            }\n            return \"http://tinygraphs.com/spaceinvaders/\" + this.agentPerson.getGuid() + \"?theme=base&numcolors=16&size=22&fmt=svg\";\n        },\n        badged: function() {\n            if (this.assertion == null) {\n                return false;\n            }\n            return this.assertion.hasReader(this.$store.getters['editor/badgePk']);\n        },\n        badgeUrl: function() {\n            if (this.assertion != null) {\n                if (this.assertion.hasReader(this.$store.getters['editor/badgePk'])) {\n                    return EcRemote.urlAppend(window.repo.selectedServer, \"badge/assertion/\") + this.assertion.getGuid();\n                }\n            }\n            return \"\";\n        }\n    },\n    watch: {\n        evidence: function(oldEvidence, newEvidence) {\n            this.evidenceExplanation = null;\n            if (this.evidence != null) {\n                if (this.evidence.length > 0) {\n                    this.$store.dispatch('editor/computeBecause', this.evidence).then((because) => {\n                        this.$nextTick(() => {\n                            this.evidenceExplanation = because;\n                        });\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        initialize: function(isVisible, entry) {\n            if (isVisible) {\n                EcAssertion.get(this.uri, (assertion) => {\n                    this.assertion = assertion;\n                    if (assertion.subject == null) {\n                        this.subject = \"nobody\";\n                    } else {\n                        assertion.getSubjectName(window.repo).then((name) => {\n                            this.subject = name;\n                        }).catch(appError);\n                        assertion.getSubjectAsync((pk) => {\n                            this.subjectPk = pk.toPem();\n                        }, appError);\n                    }\n                    if (assertion.agent == null) {\n                        this.agent = \"nobody\";\n                    } else {\n                        assertion.getAgentName(window.repo).then((name) => {\n                            this.agent = name;\n                        }).catch(appError);\n                    }\n                    assertion.getAgentAsync((pk) => {\n                        this.agentPk = pk.toPem();\n                        this.getAgent();\n                    }, appError);\n                    if (assertion.assertionDate != null) {\n                        assertion.getAssertionDateAsync((assertionDate) => {\n                            this.timestamp = assertionDate;\n                        }, appError);\n                    }\n                    if (assertion.expirationDate != null) {\n                        assertion.getExpirationDateAsync((expirationDate) => {\n                            this.expiry = expirationDate;\n                        }, appError);\n                    }\n                    if (assertion.negative != null) {\n                        assertion.getNegativeAsync((negative) => {\n                            this.negative = negative;\n                        }, appError);\n                    } else {\n                        this.negative = false;\n                    }\n                    if (assertion.evidence != null) {\n                        for (var i = 0; i < assertion.getEvidenceCount(); i++) {\n                            ((i) => {\n                                assertion.getEvidenceAsync(i, (evidence) => {\n                                    if (this.evidence == null) {\n                                        this.evidence = [];\n                                    }\n                                    this.evidence.push(evidence);\n                                    this.evidenceExplanation = null;\n                                }, appError);\n                            })(i);\n                        }\n                    }\n                    EcCompetency.get(assertion.competency, (competency) => {\n                        this.competency = competency;\n                    }, appError);\n                }, appError);\n            }\n        },\n        gotoCompetency: function() {\n            // TODO\n            // EcFramework.search(repo, \"competency:\\\"\" + this.assertion.competency + \"\\\"\", (frameworks) => {\n            //     if (frameworks.length > 0) {\n            //         app.selectedFramework = frameworks[0];\n            //         app.selectedCompetency = EcCompetency.getBlocking(me.assertion.competency);\n            //         app.subject = me.assertion.getSubject().toPem();\n            //         $(\"#rad2\").click();\n            //         setTimeout(\n            //             function () {\n            //                 $(\"[id=\\\"\" + app.selectedCompetency.id + \"\\\"]\").each(function () {\n            //                     $(this)[0].scrollIntoView();\n            //                 })\n            //             }, 1000);\n            //     }\n            // }, appError);\n        },\n        getAgent: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.agentPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.agentPk);\n                    var p = new Person();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.agentPerson = p;\n                } else {\n                    this.agentPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.agentPk);\n                var p = new Person();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.agentPerson = p;\n            });\n        },\n        getSubject: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.subjectPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.subjectPk);\n                    var p = new Person();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.subjectPerson = p;\n                } else {\n                    this.subjectPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.subjectPk);\n                var p = new Person();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.subjectPerson = p;\n            });\n        }\n    }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Assertion.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Assertion.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Assertion.vue?vue&type=template&id=9b6f9e24&\"\nimport script from \"./Assertion.vue?vue&type=script&lang=js&\"\nexport * from \"./Assertion.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}