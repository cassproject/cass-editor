{"version":3,"sources":["webpack:///./src/mixins/competencyEdits.js"],"names":["mixins","common","methods","removeObject","thing","appLog","id","me","thisFramework","$store","getters","initialCompetencies","competency","slice","initialRelations","relation","initialLevels","level","Date","toISOString","removeCompetency","shortId","_asyncToGenerator","_regenerator","m","_callee","framework","w","_context","n","commit","operation","fieldChanged","initialValue","state","editor","private","EcEncryptedValue","encryptOnSaveMap","f","toEncryptedValue","v","window","repo","saveTo","appError","a","deleteObject","deleteRegistered","success","spitEvent","i","length","conditionalDelete","importType","$router","push","name","_callee2","frameworkToSave","_context2","removeLevel","obj","changedValue"],"mappings":"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","file":"js/chunk-74a95bb3.dda42da2.js","sourcesContent":["import common from '@/mixins/common.js';\nexport default {\n    mixins: [common],\n    methods: {\n        removeObject: function(thing) {\n            // Remove from container but don't delete\n            appLog(\"removing \" + thing.id);\n            var me = this;\n            var thisFramework = this.$store.getters['editor/framework'];\n            var initialCompetencies = thisFramework.competency ? thisFramework.competency.slice() : null;\n            var initialRelations = thisFramework.relation ? thisFramework.relation.slice() : null;\n            var initialLevels = thisFramework.level ? thisFramework.level.slice() : null;\n            thisFramework[\"schema:dateModified\"] = new Date().toISOString();\n            thisFramework.removeCompetency(thing.shortId(), async function() {\n                var framework = me.framework;\n                me.$store.commit('editor/addEditsToUndo', [{operation: \"update\", id: framework.shortId(), fieldChanged: [\"competency\", \"relation\", \"level\"], initialValue: [initialCompetencies, initialRelations, initialLevels]}]);\n                if (me.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[f.id] !== true) {\n                    framework = await EcEncryptedValue.toEncryptedValue(framework);\n                }\n                window.repo.saveTo(framework, function() {\n                    me.$store.commit('editor/framework', thisFramework);\n                }, appError);\n            }, appLog);\n        },\n        deleteObject: function(thing) {\n            appLog(\"deleting \" + thing.id);\n            var me = this;\n            var framework = this.$store.getters['editor/framework'];\n            if (thing.shortId() === framework.shortId()) {\n                // delete framework\n                window.repo.deleteRegistered(framework, function(success) {\n                    me.spitEvent(\"frameworkDeleted\", framework.shortId(), \"editFrameworkSection\");\n                    // Delete the framework, delete all non-used stuff.\n                    if (framework.competency != null) {\n                        for (var i = 0; i < framework.competency.length; i++) {\n                            me.conditionalDelete(framework.competency[i]);\n                        }\n                    }\n                    if (framework.relation != null) {\n                        for (var i = 0; i < framework.relation.length; i++) {\n                            me.conditionalDelete(framework.relation[i]);\n                        }\n                    }\n                    if (framework.level != null) {\n                        for (var i = 0; i < framework.level.length; i++) {\n                            me.conditionalDelete(framework.level[i]);\n                        }\n                    }\n                    me.$store.commit('editor/framework', null);\n                    if (me.importType) {\n                        // Calling function from import page\n                        me.$store.commit('app/importFramework', null);\n                    } else {\n                        me.$router.push({name: \"frameworks\"});\n                    }\n                }, appLog);\n            } else {\n                // Delete competency and relations\n                var initialCompetencies = framework.competency ? framework.competency.slice() : null;\n                var initialRelations = framework.relation ? framework.relation.slice() : null;\n                var initialLevels = framework.level ? framework.level.slice() : null;\n                this.$store.commit('editor/selectedCompetency', thing);\n                framework[\"schema:dateModified\"] = new Date().toISOString();\n                framework.removeCompetency(thing.shortId(), async function() {\n                    framework.removeLevel(thing.shortId());\n                    me.$store.commit('editor/addEditsToUndo', [\n                        {operation: \"delete\", obj: thing},\n                        {operation: \"update\", id: framework.shortId(), fieldChanged: [\"competency\", \"relation\", \"level\"], initialValue: [initialCompetencies, initialRelations, initialLevels], changedValue: [framework.competency, framework.relation, framework.level]}\n                    ]);\n                    me.conditionalDelete(thing.shortId());\n                    me.spitEvent(\"competencyDeleted\", thing.shortId(), \"editFrameworkSection\");\n                    me.$store.commit('editor/selectedCompetency', null);\n                    var frameworkToSave = framework;\n                    if (me.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[framework.id] !== true) {\n                        frameworkToSave = await EcEncryptedValue.toEncryptedValue(framework);\n                    }\n                    window.repo.saveTo(frameworkToSave, function() {\n                        me.$store.commit('editor/framework', framework);\n                    }, appError);\n                }, appLog);\n            }\n        }\n    }\n};"],"sourceRoot":""}