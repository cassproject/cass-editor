{"version":3,"sources":["webpack:///./src/lode/components/List.vue?ef29","webpack:///src/lode/components/List.vue","webpack:///./src/lode/components/List.vue?b43d","webpack:///./src/lode/components/List.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","parent","_m","_e","firstSearchProcessing","results","length","_v","_l","item","key","id","crosswalkAlignmentSource","rightAsideObjectId","shortId","on","$event","click","type","attrs","selectingCompetency","parentDirectory","view","profile","disallowEdits","nativeOn","$emit","scopedSlots","_u","fn","_t","proxy","isClicked","subObjectClick","ref","refInFor","loadMore","slot","staticRenderFns","name","props","default","repo","searchOptions","paramObj","selected","displayFirst","filterToEditable","idsNotPermittedInSearch","components","Thing","Breadcrumbs","mixins","created","data","start","subResults","subStart","searchFrameworks","searchCompetencies","searchDirectories","searchingForCompetencies","searchingForDirectories","applySearchToOwner","resultIds","nonDirectoryResults","watch","text","searchTerm","applySearchTo","refreshSearch","timeOffset","numIdentities","computed","methods","component","uri","objectType","parentName","canEdit","buildSearch","search","termAdded","EcPerson","appLog","EcOrganization","i","me","toPem","callback","appError","searchForDirectories","result","EcArray","obj","EcEncryptedValue","copyFrom","directories","$state","searchRepo","localParamObj","objType","searchForSubObjects","subLocalParamObj","subResult","mounted"],"mappings":"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ACF,EAAG,IAAI,CAACE,YAAY,8BAA8BoB,MAAM,CAAC,cAAc,c,iLCoKpmB,GACfoB,YACAC,OACAvC,QACAiB,YACAuB,YAEAvB,YACAwB,YACAnB,eACAN,eACA0B,qBACAC,gBACApB,sBACAJ,4BACAyB,eACAC,mBACAxB,MACAJ,YACAuB,YAEAM,kBACA7B,aACAuB,YAEAO,yBACA9B,WACAuB,eAGAQ,YAAAC,mBAAAC,oBACAC,uBACAC,mBAAA,WACA,qDAEAC,gBACA,OACAjD,WACAkD,QACAC,cACAC,WACAC,oBACAC,sBACAC,qBACAC,4BACAC,2BACAC,sBAEAC,aACAC,yBAGAC,OACA7D,mBACA,8BAEA8D,qBAEAvB,oBACA,mBAEAD,yBACA,mBAEAyB,uBACA,mBAEAC,yBAGA,GAFA,2BAEA,wBACA,yBACA,2BACA,+BACA,oDACA,yBACA,2BACA,0BACA,4CACA,8FACA,yBACA,8IACA,2BACA,wCACA,yBACA,2BACA,4BACA,8FACA,0BAGA,8BAIA,yBACA,2BACA,wBACA,0BAEA,0BAGA,mBAEAnD,gBACA,mBAEAoD,yBACA,qBACA,kBACA,6CAGAC,sBACA,mBAEAC,yBACA,oBAGAC,UACA7D,oCACA,yDAEAwD,uBACA,8CAEAE,0BACA,iDAEAD,yBACA,+CACA,kBACA,oDACA,wBACA,GAEAxD,8BACA,mDACA,sDAEA,MAEA0D,sBACA,6BAEAC,yBAAA,MACA,6EAEApE,iCACA,6DAGAsE,SACAzC,2BAEA,qCACA,cACA,qBACA,CACA,OACA0C,mBACAC,SACA1D,YACA2D,kBACAC,gBACAC,YAEA,wCAGAC,0BAAA,WACA,KAEA,KACA,4CAEA,CACAC,wEACA,4CACA,6DACA/D,+DACAA,6DACA,IACA+D,WAEAA,2BACAC,MACA,oEACAhE,sEACAA,oEACA,IACA+D,WAEAA,kCACAC,MACA,kDACA,OACAtC,SACA,IACAuC,8DACA,gBACAF,WAEAG,UACA,2BACAH,kDACA,eACAA,WAGAI,kEAAA,mJACAD,UACAE,EAAA,EAFA,YAEAA,YAFA,6BAGAL,EAHA,SAGAM,4BAHA,m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","file":"js/chunk-2d0d5fe2.b35f6e2e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cass--list--container\",class:_vm.parent},[(_vm.firstSearchProcessing)?_c('div',{staticClass:\"section has-text-centered\"},[_vm._m(0)]):_vm._e(),[_c('div',{staticClass:\"container is-desktop\"},[_c('ul',{staticClass:\"cass--list\"},[(!_vm.firstSearchProcessing && (!_vm.results || _vm.results.length === 0))?_c('li',{staticClass:\"cass--list--item no-results\"},[_vm._v(\"No results found\")]):_vm._e(),_vm._l((_vm.results),function(item){return _c('li',{key:item.id,staticClass:\"cass--list--item\",class:[\n                        {'source-framework': _vm.crosswalkAlignmentSource && item.id === _vm.crosswalkAlignmentSource.id},\n                        _vm.rightAsideObjectId && _vm.rightAsideObjectId === item.shortId() ? 'cass--list--item--selected' : ''],on:{\"click\":function($event){return _vm.click(item)}}},[_c('div',{staticClass:\"cass--list-item--icon\"},[_c('div',{staticClass:\"cass--list-item--icon-wrap has-background-dark\"},[_c('span',{staticClass:\"icon\"},[(item.type === 'Directory')?_c('i',{staticClass:\"fa fa-folder\",attrs:{\"title\":\"Directory\"}}):(item.type === 'Framework')?_c('i',{staticClass:\"fa fa-file-alt\",attrs:{\"title\":\"Framework\"}}):(item.type === 'Competency')?_c('i',{staticClass:\"fa fa-list-alt\",attrs:{\"title\":\"Competency\"}}):(item.type === 'ConceptScheme')?_c('i',{staticClass:\"fa fa-book\",attrs:{\"title\":\"Concept Scheme\"}}):_vm._e()])])]),_c('div',{staticClass:\"cass--list-item--content\"},[(_vm.selectingCompetency || item.parentDirectory)?_c('Breadcrumbs',{attrs:{\"competency\":item}}):_vm._e(),_c('Thing',{staticClass:\"cass--list--thing\",attrs:{\"parent\":_vm.parent,\"obj\":item,\"view\":_vm.view,\"profile\":_vm.profile,\"parentNotEditable\":_vm.disallowEdits},nativeOn:{\"dblclick\":function($event){return _vm.$emit('dblclick', item)}},scopedSlots:_vm._u([{key:\"frameworkTags\",fn:function(){return [_vm._t(\"frameworkTags\",null,{\"item\":item})]},proxy:true}],null,true)})],1),_c('div',{staticClass:\"cass--list-item--hover\"},[(_vm.selectingCompetency && _vm.isClicked(item.shortId()) && _vm.view === 'search')?_c('span',{staticClass:\"search-selection__icon\"},[_vm._m(1,true)]):(_vm.view === 'search'&& _vm.view !== 'crosswalk')?_c('span',{staticClass:\"search-selection__add-icon\"},[_vm._m(2,true)]):_vm._e(),(_vm.view !== 'search')?_c('div',{staticClass:\"icon has-text-primary arrow-icon\"},[_c('i',{staticClass:\"fa fa-arrow-right\"})]):_vm._e()])])}),_vm._l((_vm.subResults),function(item){return _c('li',{key:item.id,staticClass:\"cass--list--item\",class:_vm.rightAsideObjectId && _vm.rightAsideObjectId === item.shortId() ? 'cass-list-item--selected' : '',on:{\"click\":function($event){return _vm.subObjectClick(item)}}},[_c('div',{staticClass:\"cass--list-item--icon\"},[_c('div',{staticClass:\"cass--list-item--icon-wrap has-background-dark\"},[_c('span',{staticClass:\"icon\"},[(item.type === 'Directory')?_c('i',{staticClass:\"fa fa-folder\",attrs:{\"title\":\"Directory\"}}):(item.type === 'Framework')?_c('i',{staticClass:\"fa fa-file-alt\",attrs:{\"title\":\"Framework\"}}):(item.type === 'Competency')?_c('i',{staticClass:\"fa fa-list-alt\",attrs:{\"title\":\"Competency\"}}):(item.type === 'Concept')?_c('i',{staticClass:\"fa fa-book\",attrs:{\"title\":\"Concept Scheme\"}}):_vm._e()])])]),_c('div',{staticClass:\"cass--list-item--content\"},[_c('Breadcrumbs',{ref:item.id,refInFor:true,attrs:{\"competency\":item}}),_c('Thing',{staticClass:\"list-thing\",attrs:{\"obj\":item,\"view\":_vm.view,\"profile\":_vm.profile,\"parentNotEditable\":_vm.disallowEdits},nativeOn:{\"dblclick\":function($event){return _vm.$emit('dblclick', item)}}})],1),_c('div',{staticClass:\"cass--list-item--hover\"},[(_vm.view !== 'search')?_c('div',{staticClass:\"icon has-text-primary arrow-icon\"},[_c('i',{staticClass:\"fa fa-arrow-right\"})]):_vm._e()])])})],2),(_vm.results.length > 0)?_c('infinite-loading',{attrs:{\"spinner\":\"circles\",\"distance\":10},on:{\"infinite\":_vm.loadMore}},[_c('div',{attrs:{\"slot\":\"no-more\"},slot:\"no-more\"},[_vm._v(\" All results loaded \")]),_c('div',{attrs:{\"slot\":\"no-results\"},slot:\"no-results\"},[_vm._v(\" All results loaded \")])]):_vm._e()],1)]],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"icon is-large\"},[_c('i',{staticClass:\"fa fa-spinner fa-2x fa-pulse\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"icon is-primary is-small\"},[_c('i',{staticClass:\"fa fa-check has-text-primary\",attrs:{\"aria-hidden\":\"true\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"icon is-primary is-small\"},[_c('i',{staticClass:\"fa fa-plus has-text-primary\",attrs:{\"aria-hidden\":\"true\"}})])}]\n\nexport { render, staticRenderFns }","<template>\n    <div\n        class=\"cass--list--container\"\n        :class=\"parent\">\n        <div\n            class=\"section has-text-centered\"\n            v-if=\"firstSearchProcessing\">\n            <span class=\"icon is-large\">\n                <i class=\"fa fa-spinner fa-2x fa-pulse\" />\n            </span>\n        </div>\n        <template>\n            <div class=\"container is-desktop\">\n                <ul class=\"cass--list\">\n                    <li\n                        v-if=\"!firstSearchProcessing && (!results || results.length === 0)\"\n                        class=\"cass--list--item no-results\">No results found</li>\n                    <li\n                        class=\"cass--list--item\"\n                        v-for=\"(item) in results\"\n                        :key=\"item.id\"\n                        :class=\"[\n                            {'source-framework': crosswalkAlignmentSource && item.id === crosswalkAlignmentSource.id},\n                            rightAsideObjectId && rightAsideObjectId === item.shortId() ? 'cass--list--item--selected' : '']\"\n                        @click=\"click(item)\">\n                        <div class=\"cass--list-item--icon\">\n                            <div class=\"cass--list-item--icon-wrap has-background-dark\">\n                                <span class=\"icon\">\n                                    <i\n                                        title=\"Directory\"\n                                        v-if=\"item.type === 'Directory'\"\n                                        class=\"fa fa-folder\" />\n                                    <i\n                                        title=\"Framework\"\n                                        v-else-if=\"item.type === 'Framework'\"\n                                        class=\"fa fa-file-alt\" />\n                                    <i\n                                        title=\"Competency\"\n                                        v-else-if=\"item.type === 'Competency'\"\n                                        class=\"fa fa-list-alt\" />\n                                    <i\n                                        title=\"Concept Scheme\"\n                                        v-else-if=\"item.type === 'ConceptScheme'\"\n                                        class=\"fa fa-book\" />\n                                </span>\n                            </div>\n                        </div>\n                        <div\n                            class=\"cass--list-item--content\">\n                            <Breadcrumbs\n                                v-if=\"selectingCompetency || item.parentDirectory\"\n                                :competency=\"item\" />\n                            <Thing\n                                :parent=\"parent\"\n                                :obj=\"item\"\n                                @dblclick.native=\"$emit('dblclick', item)\"\n                                :view=\"view\"\n                                :profile=\"profile\"\n                                class=\"cass--list--thing\"\n                                :parentNotEditable=\"disallowEdits\">\n                                <template #frameworkTags>\n                                    <slot\n                                        name=\"frameworkTags\"\n                                        :item=\"item\" />\n                                </template>\n                            </Thing>\n                        </div>\n                        <div class=\"cass--list-item--hover\">\n                            <span\n                                class=\"search-selection__icon\"\n                                v-if=\"selectingCompetency && isClicked(item.shortId()) && view === 'search'\">\n                                <div class=\"icon is-primary is-small\">\n                                    <i\n                                        class=\"fa fa-check has-text-primary\"\n                                        aria-hidden=\"true\" />\n                                </div>\n                            </span>\n                            <span\n                                class=\"search-selection__add-icon\"\n                                v-else-if=\"view === 'search'&& view !== 'crosswalk'\">\n                                <div class=\"icon is-primary is-small\">\n                                    <i\n                                        class=\"fa fa-plus has-text-primary\"\n                                        aria-hidden=\"true\" />\n                                </div>\n                            </span>\n                            <div\n                                v-if=\"view !== 'search'\"\n                                class=\"icon has-text-primary arrow-icon\">\n                                <i class=\"fa fa-arrow-right\" />\n                            </div>\n                        </div>\n                    </li>\n                    <!-- After the framework/concept scheme search results, show competencies/concepts -->\n                    <li\n                        class=\"cass--list--item\"\n                        :class=\"rightAsideObjectId && rightAsideObjectId === item.shortId() ? 'cass-list-item--selected' : ''\"\n                        v-for=\"(item) in subResults\"\n                        :key=\"item.id\"\n                        @click=\"subObjectClick(item)\">\n                        <div class=\"cass--list-item--icon\">\n                            <div class=\"cass--list-item--icon-wrap has-background-dark\">\n                                <span class=\"icon\">\n                                    <i\n                                        title=\"Directory\"\n                                        v-if=\"item.type === 'Directory'\"\n                                        class=\"fa fa-folder\" />\n                                    <i\n                                        title=\"Framework\"\n                                        v-else-if=\"item.type === 'Framework'\"\n                                        class=\"fa fa-file-alt\" />\n                                    <i\n                                        title=\"Competency\"\n                                        v-else-if=\"item.type === 'Competency'\"\n                                        class=\"fa fa-list-alt\" />\n                                    <i\n                                        title=\"Concept Scheme\"\n                                        v-else-if=\"item.type === 'Concept'\"\n                                        class=\"fa fa-book\" />\n                                </span>\n                            </div>\n                        </div>\n                        <div\n                            class=\"cass--list-item--content\">\n                            <Breadcrumbs\n                                :competency=\"item\"\n                                :ref=\"item.id\" />\n                            <Thing\n                                :obj=\"item\"\n                                @dblclick.native=\"$emit('dblclick', item)\"\n                                :view=\"view\"\n                                :profile=\"profile\"\n                                class=\"list-thing\"\n                                :parentNotEditable=\"disallowEdits\" />\n                        </div>\n                        <div class=\"cass--list-item--hover\">\n                            <div\n                                v-if=\"view !== 'search'\"\n                                class=\"icon has-text-primary arrow-icon\">\n                                <i class=\"fa fa-arrow-right\" />\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n                <infinite-loading\n                    @infinite=\"loadMore\"\n                    spinner=\"circles\"\n                    v-if=\"results.length > 0\"\n                    :distance=\"10\">\n                    <div slot=\"no-more\">\n                        All results loaded\n                    </div>\n                    <div slot=\"no-results\">\n                        All results loaded\n                    </div>\n                </infinite-loading>\n            </div>\n        </template>\n    </div>\n</template>\n\n<script>\nimport Thing from './Thing.vue';\nimport common from '@/mixins/common.js';\nimport Breadcrumbs from './Breadcrumbs.vue';\nimport {cassUtil} from '@/mixins/cassUtil.js';\nimport debounce from 'lodash/debounce';\nexport default {\n    name: 'List',\n    props: {\n        parent: {\n            type: String,\n            default: ''\n        },\n        type: String,\n        repo: Object,\n        profile: Object,\n        click: Function,\n        searchOptions: String,\n        paramObj: Object,\n        disallowEdits: Boolean,\n        selectingCompetency: Boolean,\n        selected: Array,\n        displayFirst: Array,\n        view: {\n            type: String,\n            default: ''\n        },\n        filterToEditable: {\n            type: Boolean,\n            default: false\n        },\n        idsNotPermittedInSearch: {\n            type: Array,\n            default: null\n        }\n    },\n    components: {Thing, Breadcrumbs},\n    mixins: [ common, cassUtil ],\n    created: function() {\n        this.$nextTick(() => this.searchRepo());\n    },\n    data: function() {\n        return {\n            results: [],\n            start: 0,\n            subResults: [],\n            subStart: 0,\n            searchFrameworks: true,\n            searchCompetencies: true,\n            searchDirectories: false,\n            searchingForCompetencies: false,\n            searchingForDirectories: false,\n            applySearchToOwner: false,\n            // To avoid duplicates\n            resultIds: [],\n            nonDirectoryResults: false\n        };\n    },\n    watch: {\n        results: function() {\n            this.$emit('search-updated');\n        },\n        text: function(newValue, oldValue) {\n        },\n        paramObj: function() {\n            this.searchRepo();\n        },\n        searchOptions: function() {\n            this.searchRepo();\n        },\n        searchTerm: function(val) {\n            this.searchRepo();\n        },\n        applySearchTo: function() {\n            this.applySearchToOwner = false;\n            // Set which objects to search\n            if (this.view === 'crosswalk') {\n                this.searchFrameworks = true;\n                this.searchCompetencies = false;\n                this.searchDirectories = false;\n            } else if (this.applySearchTo && this.applySearchTo.length > 0) {\n                this.searchFrameworks = false;\n                this.searchCompetencies = false;\n                this.searchDirectories = false;\n                for (let i = 0; i < this.applySearchTo.length; i++) {\n                    if (this.applySearchTo[i].id === \"frameworkName\" || this.applySearchTo[i].id === \"frameworkDescription\") {\n                        this.searchFrameworks = true;\n                    } else if (this.applySearchTo[i].id === \"competencyName\" || this.applySearchTo[i].id === \"competencyDescription\" || this.applySearchTo[i].id === \"competencyLabel\") {\n                        this.searchCompetencies = true;\n                    } else if (this.applySearchTo[i].id === \"ownerName\") {\n                        this.searchFrameworks = true;\n                        this.searchCompetencies = true;\n                        this.applySearchToOwner = true;\n                    } else if (this.applySearchTo[i].id === \"directoryName\" || this.applySearchTo[i].id === \"directoryDescription\") {\n                        this.searchDirectories = true;\n                    } else {\n                        // Any other property comes from framework config\n                        this.searchFrameworks = true;\n                    }\n                }\n            } else {\n                this.searchFrameworks = true;\n                this.searchCompetencies = true;\n                if (this.type === \"Framework\") {\n                    this.searchDirectories = true;\n                } else {\n                    this.searchDirectories = false;\n                }\n            }\n            this.searchRepo();\n        },\n        type: function() {\n            this.searchRepo();\n        },\n        refreshSearch: function() {\n            if (this.refreshSearch) {\n                this.searchRepo();\n                this.$store.commit('app/refreshSearch', false);\n            }\n        },\n        timeOffset: function() {\n            this.searchRepo();\n        },\n        numIdentities: function() {\n            this.searchRepo();\n        }\n    },\n    computed: {\n        crosswalkAlignmentSource: function() {\n            return this.$store.getters['crosswalk/frameworkSource'];\n        },\n        searchTerm: function(val) {\n            return this.$store.getters['app/searchTerm'];\n        },\n        refreshSearch: function(val) {\n            return this.$store.getters['app/refreshSearch'];\n        },\n        applySearchTo: function() {\n            let options = this.$store.getters['app/applySearchTo'];\n            if (!options) return null;\n            let filterValues = options.filter(item => item.checked === true);\n            if (filterValues.length <= 0) return null;\n            return filterValues;\n        },\n        rightAsideObjectId: function() {\n            if (this.$store.getters['app/rightAsideObject']) {\n                return this.$store.getters['app/rightAsideObject'].shortId();\n            }\n            return null;\n        },\n        timeOffset: function() {\n            return this.repo.timeOffset;\n        },\n        numIdentities: function() {\n            return EcIdentityManager.default.ids?.length;\n        },\n        firstSearchProcessing: function() {\n            return this.$store.getters['editor/firstSearchProcessing'];\n        }\n    },\n    methods: {\n        subObjectClick: function(item) {\n            // Access framework from breadcrumbs instead of re-searching\n            var frameworks = this.$refs[item.id][0].frameworks;\n            if (frameworks.length > 0) {\n                this.click(frameworks[0]);\n            } else {\n                var modalObject = {\n                    component: 'Single',\n                    uri: item.id,\n                    type: item.type,\n                    objectType: item.type,\n                    parentName: null,\n                    canEdit: false\n                };\n                this.$store.commit('app/showModal', modalObject);\n            }\n        },\n        buildSearch: function(type, callback) {\n            var search = \"\";\n            // Used to only add OR to query if there's already a term\n            var termAdded = false;\n            if (!this.applySearchTo || this.searchTerm === \"\") {\n                search = \"((@type:\" + type + \" OR (EncryptedValue AND \\\\*encryptedType:\" + type + \"))\" + (this.searchTerm != null && this.searchTerm !== \"\" ? \" AND \" + this.searchTerm : \"\") + \")\" + (this.searchOptions == null || this.searchOptions === \"\" ? \"\" : this.searchOptions);\n            } else {\n                search = \"((@type:\" + type + \" OR (EncryptedValue AND \\\\*encryptedType:\" + type + \"))\" + \" AND (\";\n                for (let i = 0; i < this.applySearchTo.length; i++) {\n                    if ((type === \"Framework\" && this.applySearchTo[i].id === \"frameworkName\") ||\n                    (type === \"Competency\" && this.applySearchTo[i].id === \"competencyName\") ||\n                    (type === \"Directory\" && this.applySearchTo[i].id === \"directoryName\")) {\n                        if (termAdded) {\n                            search += \" OR \";\n                        }\n                        search += (\"name:\" + this.searchTerm);\n                        termAdded = true;\n                    } else if ((type === \"Framework\" && this.applySearchTo[i].id === \"frameworkDescription\") ||\n                    (type === \"Competency\" && this.applySearchTo[i].id === \"competencyDescription\") ||\n                    (type === \"Directory\" && this.applySearchTo[i].id === \"directoryDescription\")) {\n                        if (termAdded) {\n                            search += \" OR \";\n                        }\n                        search += (\"description:\" + this.searchTerm);\n                        termAdded = true;\n                    } else if (this.applySearchTo[i].id === \"ownerName\") {\n                        let paramObj = {};\n                        paramObj.size = 10;\n                        let me = this;\n                        EcPerson.search(window.repo, 'name:' + this.searchTerm, function(success) {\n                            if (termAdded && success.length > 0) {\n                                search += \" OR \";\n                            }\n                            appLog(success);\n                            for (var i = 0; i < success.length; i++) {\n                                search += \"\\\\*owner:\\\"\" + me.getPersonEcPk(success[i]).toPem() + \"\\\"\";\n                                if (i < success.length - 1) {\n                                    search += \" OR \";\n                                }\n                            }\n                            EcOrganization.search(window.repo, 'name:' + me.searchTerm, async function(success) {\n                                appLog(success);\n                                for (var i = 0; i < success.length; i++) {\n                                    search += \"\\\\*owner:\\\"\" + (await me.getOrganizationEcPk(success[i])).toPem() + \"\\\"\";\n                                    termAdded = true;\n                                    if (i < success.length - 1) {\n                                        search += \" OR \";\n                                    }\n                                }\n                                search += \"))\" + (me.searchOptions == null ? \"\" : me.searchOptions);\n                                if (search.indexOf(\"AND ())\") !== -1) {\n                                    search = null;\n                                }\n                                callback(search);\n                            }, function(failure) {\n                                appError(failure);\n                                callback(null);\n                            }, paramObj);\n                        }, function(failure) {\n                            appError(failure);\n                            callback(null);\n                        }, paramObj);\n                    } else if (type === \"Framework\") {\n                        if (termAdded) {\n                            search += \" OR \";\n                        }\n                        // Other framework property from config\n                        search += (this.applySearchTo[i].id + \":\" + this.searchTerm);\n                        termAdded = true;\n                    } else if (type === \"Competency\" && this.applySearchTo[i].id === \"competencyLabel\") {\n                        if (termAdded) {\n                            search += \" OR \";\n                        }\n                        search += (\"ceasn\\\\:competencyLabel:\" + this.searchTerm);\n                        termAdded = true;\n                    }\n                }\n                if (!this.applySearchToOwner) {\n                    search += \"))\" + (this.searchOptions == null ? \"\" : this.searchOptions);\n                }\n            }\n            if (!this.applySearchToOwner) {\n                callback(search);\n            }\n        },\n        searchForDirectories: function($state) {\n            let me = this;\n            this.searchingForDirectories = true;\n            me.buildSearch(\"Directory\", function(search) {\n                var paramObj = null;\n                if (me.paramObj) {\n                    paramObj = Object.assign({}, me.paramObj);\n                    if (me.searchTerm != null && me.searchTerm !== \"\") { delete paramObj.sort; }\n                }\n                if (!me.firstSearchProcessing) {\n                    me.start += me.paramObj.size;\n                }\n                paramObj.start = me.start;\n                let directories = [];\n                me.repo.searchWithParams(search, paramObj, null, async function(results) {\n                    for (let result of results) {\n                        if (!me.filterToEditable || (me.filterToEditable && me.canEditAny(result))) {\n                            if (!EcArray.has(me.resultIds, result.id)) {\n                                me.resultIds.push(result.id);\n                                if (!me.idsNotPermittedInSearch || me.idsNotPermittedInSearch.length === 0 || !EcArray.has(me.idsNotPermittedInSearch, result.shortId())) {\n                                    // Don't show subdirectories unless searching\n                                    if (!result.parentDirectory || me.searchTerm !== \"\") {\n                                        if (result.isAny(new EcEncryptedValue().getTypes())) {\n                                            // Decrypt and add to results list\n                                            var type = \"Ec\" + result.encryptedType;\n                                            let obj = new window[type]();\n                                            obj.copyFrom(await EcEncryptedValue.fromEncryptedValue(result));\n                                            result = obj;\n                                        }\n                                        directories.push(result);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    me.$store.commit('editor/setFirstSearchProcessing', false);\n                    if (directories && directories.length > 0) {\n                        me.results = me.results.concat(directories);\n                        if ($state) {\n                            $state.loaded();\n                        }\n                    } else if (results.length === 0) {\n                        me.searchingForDirectories = false;\n                        me.start = 0;\n                        me.loadMore($state);\n                    } else if (results.length > 0 && $state) {\n                        // $state references are for vue-infinite-loading component\n                        me.loadMore($state);\n                    } else if ($state) {\n                        $state.complete();\n                    }\n                }, function(err) {\n                    appError(err);\n                    me.$store.commit('editor/setFirstSearchProcessing', false);\n                    if ($state) {\n                        $state.complete();\n                    }\n                });\n            });\n        },\n        searchRepo: debounce(function() {\n            var me = this;\n            this.start = 0;\n            this.subStart = 0;\n            me.$store.commit('editor/setFirstSearchProcessing', true);\n            this.results.splice(0, this.results.length);\n            this.subResults.splice(0, this.subResults.length);\n            this.resultIds.splice(0, this.resultIds.length);\n            this.searchingForCompetencies = false;\n            this.nonDirectoryResults = false;\n            if (!this.applySearchTo) {\n                if (this.view === 'frameworks' && this.type === \"Framework\") {\n                    this.searchDirectories = true;\n                } else {\n                    this.searchDirectories = false;\n                }\n            }\n            if (this.searchTerm === \"\" && this.displayFirst && this.displayFirst.length > 0) {\n                for (var i = 0; i < 20; i++) {\n                    if (this.displayFirst[0]) {\n                        this.results.push(this.displayFirst[0]);\n                        this.resultIds.push(this.displayFirst[0].id);\n                        this.displayFirst.shift();\n                        this.nonDirectoryResults = true;\n                    }\n                }\n            }\n            if (this.searchDirectories === true) {\n                this.searchForDirectories();\n            } else if (this.searchFrameworks && (this.searchTerm !== \"\" || !this.displayFirst || this.displayFirst.length === 0)) {\n                me.buildSearch(this.type, function(search) {\n                    var paramObj = null;\n                    if (me.paramObj) {\n                        paramObj = Object.assign({}, me.paramObj);\n                        if (me.searchTerm != null && me.searchTerm !== \"\") { delete paramObj.sort; }\n                    }\n                    me.repo.searchWithParams(search, paramObj, function(result) {\n                    }, async function(results) {\n                        for (let result of results) {\n                            if (!me.filterToEditable || (me.filterToEditable && me.canEditAny(result))) {\n                                if (!EcArray.has(me.resultIds, result.id)) {\n                                    me.resultIds.push(result.id);\n                                    if (!me.idsNotPermittedInSearch || me.idsNotPermittedInSearch.length === 0 || !EcArray.has(me.idsNotPermittedInSearch, result.shortId())) {\n                                        if (result.isAny(new EcEncryptedValue().getTypes())) {\n                                            // Decrypt and add to results list\n                                            var type = \"Ec\" + result.encryptedType;\n                                            let obj = new window[type]();\n                                            obj.copyFrom(await EcEncryptedValue.fromEncryptedValue(result));\n                                            result = obj;\n                                        }\n                                        if (result.name !== '' || result['dcterms:title'] !== '') {\n                                            me.results.push(result);\n                                            me.nonDirectoryResults = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        me.$store.commit('editor/setFirstSearchProcessing', false);\n                        if (results.length < 10 && (me.type === \"Framework\" || me.type === \"ConceptScheme\")) {\n                            if (me.searchCompetencies) {\n                                me.searchForSubObjects();\n                            }\n                        }\n                    }, function(err) {\n                        appError(err);\n                        me.$store.commit('editor/setFirstSearchProcessing', false);\n                    });\n                });\n            } else {\n                me.$store.commit('editor/setFirstSearchProcessing', false);\n            }\n            if (!this.searchFrameworks && !this.searchDirectories && (this.searchTerm !== \"\" || !this.displayFirst || this.displayFirst.length === 0)) {\n                // Only competency fields were selected\n                return this.searchForSubObjects();\n            }\n        }, 1000),\n        loadMore: function($state) {\n            this.$emit('search-updated');\n            if (this.searchTerm === \"\" && this.displayFirst && this.displayFirst.length > 0) {\n                for (var i = 0; i < 20; i++) {\n                    if (this.displayFirst[i]) {\n                        this.results.push(this.displayFirst[i]);\n                        this.resultIds.push(this.displayFirst[i].id);\n                        this.displayFirst.shift();\n                    }\n                }\n            }\n            if (this.searchingForDirectories) {\n                this.searchForDirectories($state);\n            } else if (this.paramObj && (this.searchTerm !== \"\" || !this.displayFirst || this.displayFirst.length === 0)) {\n                var me = this;\n                var localParamObj = Object.assign({}, this.paramObj);\n                if (me.searchTerm != null && me.searchTerm !== \"\") { delete localParamObj.sort; }\n                if (me.nonDirectoryResults) {\n                    this.start += this.paramObj.size;\n                }\n                localParamObj.start = this.start;\n                // If we've started loading competencies and reach scroll point, load more\n                var type;\n                if (this.searchingForCompetencies) {\n                    if (this.type === \"ConceptScheme\") {\n                        type = \"Concept\";\n                    } else {\n                        type = \"Competency\";\n                    }\n                } else {\n                    type = this.type;\n                }\n                this.buildSearch(type, function(search) {\n                    me.repo.searchWithParams(search, localParamObj, function(result) {\n                    }, async function(results) {\n                        for (let result of results) {\n                            if (!me.filterToEditable || (me.filterToEditable && me.canEditAny(result))) {\n                                if (me.searchingForCompetencies) {\n                                    if (!EcArray.has(me.resultIds, result.id)) {\n                                        me.resultIds.push(result.id);\n                                        if (!me.idsNotPermittedInSearch || me.idsNotPermittedInSearch.length === 0 || !EcArray.has(me.idsNotPermittedInSearch, result.shortId())) {\n                                            if (result.isAny(new EcEncryptedValue().getTypes())) {\n                                                // Decrypt and add to results list\n                                                var objType = \"Ec\" + result.encryptedType;\n                                                let obj = new window[objType]();\n                                                obj.copyFrom(await EcEncryptedValue.fromEncryptedValue(result));\n                                                result = obj;\n                                            }\n                                            me.subResults.push(result);\n                                        }\n                                    }\n                                } else {\n                                    if (!EcArray.has(me.resultIds, result.id)) {\n                                        me.resultIds.push(result.id);\n                                        if (!me.idsNotPermittedInSearch || me.idsNotPermittedInSearch.length === 0 || !EcArray.has(me.idsNotPermittedInSearch, result.shortId())) {\n                                            if (result.isAny(new EcEncryptedValue().getTypes())) {\n                                                // Decrypt and add to results list\n                                                var objType = \"Ec\" + result.encryptedType;\n                                                let obj = new window[objType]();\n                                                obj.copyFrom(await EcEncryptedValue.fromEncryptedValue(result));\n                                                result = obj;\n                                            }\n                                            me.results.push(result);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (results.length === 0 && (me.type === \"Framework\" || me.type === \"ConceptScheme\")) {\n                            if (me.searchCompetencies) {\n                                me.searchForSubObjects($state);\n                            } else if ($state) {\n                                $state.complete();\n                            }\n                        } else if (results.length > 0) {\n                            me.nonDirectoryResults = true;\n                            // $state references are for vue-infinite-loading component\n                            if ($state) {\n                                $state.loaded();\n                            }\n                        } else if ($state) {\n                            $state.complete();\n                        }\n                    }, function(err) {\n                        appError(err);\n                        $state.complete();\n                    });\n                });\n            } else {\n                $state.loaded();\n            }\n        },\n        searchForSubObjects: function($state) {\n            var me = this;\n            this.searchingForCompetencies = true;\n            var subLocalParamObj = Object.assign({}, me.paramObj);\n            if (me.searchTerm != null && me.searchTerm !== \"\") { delete subLocalParamObj.sort; }\n            subLocalParamObj.start = me.subStart;\n            if (subLocalParamObj.sort && subLocalParamObj.sort.indexOf(\"dcterms:title\") !== -1) {\n                subLocalParamObj.sort = subLocalParamObj.sort.replace('dcterms:title', 'skos:prefLabel');\n            }\n            var type = me.type === \"Framework\" ? \"Competency\" : \"Concept\";\n            me.buildSearch(type, function(subSearch) {\n                me.repo.searchWithParams(subSearch, subLocalParamObj, function(subResult) {\n                }, async function(subResults) {\n                    for (let subResult of subResults) {\n                        if (!me.filterToEditable || (me.filterToEditable && me.canEditAny(subResult))) {\n                            if (!EcArray.has(me.resultIds, subResult.id)) {\n                                me.resultIds.push(subResult.id);\n                                if (!me.idsNotPermittedInSearch || me.idsNotPermittedInSearch.length === 0 || !EcArray.has(me.idsNotPermittedInSearch, subResult.shortId())) {\n                                    if (subResult.isAny(new EcEncryptedValue().getTypes())) {\n                                        // Decrypt and add to results list\n                                        var objType = \"Ec\" + subResult.encryptedType;\n                                        let obj = new window[objType]();\n                                        obj.copyFrom(await EcEncryptedValue.fromEncryptedValue(subResult));\n                                        subResult = obj;\n                                    }\n                                    me.subResults.push(subResult);\n                                    me.nonDirectoryResults = true;\n                                }\n                            }\n                        }\n                    }\n                    if (subResults.length > 0 && $state) {\n                        $state.loaded();\n                    } else if ($state) {\n                        $state.complete();\n                    }\n                    me.subStart += me.paramObj.size;\n                }, function(err) {\n                    appError(err);\n                    if ($state) {\n                        $state.complete();\n                    }\n                });\n            });\n        },\n        isClicked: function(id) {\n            if (EcArray.has(this.selected, id)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    },\n    mounted: function() {\n        if (this.view === 'crosswalk') {\n            this.searchFrameworks = true;\n            this.searchCompetencies = false;\n            this.searchDirectories = false;\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\">\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=31db8bf5&\"\nimport script from \"./List.vue?vue&type=script&lang=js&\"\nexport * from \"./List.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}