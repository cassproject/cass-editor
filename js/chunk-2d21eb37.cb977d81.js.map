{"version":3,"sources":["webpack:///./src/lode/components/Assertion.vue","webpack:///src/lode/components/Assertion.vue","webpack:///./src/lode/components/Assertion.vue?4365","webpack:///./src/lode/components/Assertion.vue?4497"],"names":["render","_vm","_c","_self","directives","name","rawName","value","callback","initialize","once","expression","staticClass","ok","_v","_s","agent","timestamp","timeAgo","_e","negative","subject","evidenceText","_l","evidenceThing","index","key","url","attrs","text","badged","badgeUrl","staticRenderFns","props","uri","String","icon","Boolean","data","assertion","subjectPk","agentPk","expiry","competency","agentPerson","subjectPerson","evidence","evidenceExplanation","computed","statement","$moment","fromNow","competencyText","fingerprintUrl","email","EcCrypto","md5","toLowerCase","getGuid","hasReader","$store","getters","EcRemote","urlAppend","window","repo","selectedServer","watch","oldEvidence","newEvidence","_this","length","dispatch","then","because","$nextTick","methods","isVisible","entry","_this2","EcAssertion","get","getSubjectName","catch","appError","getSubjectAsync","pk","toPem","getAgentName","getAgentAsync","getAgent","assertionDate","getAssertionDateAsync","expirationDate","getExpirationDateAsync","getNegativeAsync","i","getEvidenceCount","getEvidenceAsync","push","EcCompetency","gotoCompetency","_this3","me","EcPerson","search","EcPk","fromPem","fingerprint","persons","p","Person","assignId","addOwner","displayName","failure","getSubject","_this4"],"mappings":"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","file":"js/chunk-2d21eb37.cb977d81.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('span',{directives:[{name:\"observe-visibility\",rawName:\"v-observe-visibility\",value:({callback: _vm.initialize,once: true}),expression:\"{callback: initialize,once: true}\"}],staticClass:\"assertion\"},[_c('span',[(_vm.ok)?_c('li',[_c('strong',[_vm._v(_vm._s(_vm.agent))]),(_vm.timestamp)?_c('span',[_vm._v(\" claimed \"+_vm._s(_vm.timeAgo)+\":\")]):_vm._e(),_c('span',{staticClass:\"statement antitile\"},[(_vm.negative)?_c('span',[_c('strong',[_vm._v(\" \"+_vm._s(_vm.subject))]),_vm._v(\" can't do this\")]):_c('span',[_c('strong',[_vm._v(\" \"+_vm._s(_vm.subject))]),_vm._v(\" can do this\")]),(_vm.evidenceText)?_c('span',[_vm._v(\" because they \"),_vm._l((_vm.evidenceText),function(evidenceThing,index){return _c('span',{key:index},[(index != 0)?_c('span',[_vm._v(\" and they \")]):_vm._e(),(evidenceThing.url)?_c('a',{attrs:{\"href\":evidenceThing.url,\"target\":\"_blank\"}},[_vm._v(\" \"+_vm._s(evidenceThing.text))]):_c('span',[_vm._v(\" \"+_vm._s(evidenceThing.text))])])})],2):_vm._e(),(_vm.badged)?_c('span',[_vm._v(\" and I issued them a \"),_c('a',{attrs:{\"href\":_vm.badgeUrl}},[_vm._v(\"badge\")])]):_vm._e(),_vm._v(\". \")])]):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <span\n        class=\"assertion\"\n        v-observe-visibility=\"{callback: initialize,once: true}\">\n        <span>\n            <li v-if=\"ok\">\n                <strong>{{ agent }}</strong>\n                <span v-if=\"timestamp\"> claimed {{ timeAgo }}:</span>\n                <span class=\"statement antitile\">\n                    <span v-if=\"negative\"><strong> {{ subject }}</strong> can't do this</span>\n                    <span v-else><strong> {{ subject }}</strong> can do this</span>\n                    <span v-if=\"evidenceText\"> because they\n                        <span\n                            v-for=\"(evidenceThing, index) in evidenceText\"\n                            :key=\"index\">\n                            <span v-if=\"index != 0\"> and they </span>\n                            <a\n                                v-if=\"evidenceThing.url\"\n                                :href=\"evidenceThing.url\"\n                                target=\"_blank\"> {{ evidenceThing.text }}</a>\n                            <span v-else> {{ evidenceThing.text }}</span>\n                        </span>\n                    </span>\n                    <span v-if=\"badged\"> and I issued them a <a :href=\"badgeUrl\">badge</a></span>.\n                </span>\n            </li>\n        </span>\n    </span>\n</template>\n<script>\n\nexport default {\n    name: 'Assertion',\n    props: {\n        uri: String,\n        icon: Boolean\n    },\n    data: function() {\n        return {\n            assertion: null,\n            subjectPk: null,\n            agentPk: null,\n            agent: null,\n            timestamp: null,\n            expiry: null,\n            competency: null,\n            negative: null,\n            agentPerson: null,\n            subjectPerson: null,\n            evidence: null,\n            evidenceExplanation: null,\n            subject: null\n        };\n    },\n    computed: {\n        ok: function() {\n            if (this.subject == null) {\n                return false;\n            }\n\n            if (this.agent == null) {\n                return false;\n            }\n\n            if (this.competency == null) {\n                return false;\n            }\n\n            return true;\n        },\n        statement: function() {\n            if (this.subject == null) {\n                return \"Decrypting...\";\n            }\n\n            if (this.agent == null) {\n                return \"Decrypting...\";\n            }\n\n            if (this.competency == null) {\n                return \"Decrypting...\";\n            }\n\n            var statement = \"\";\n            if (this.timestamp != null) {\n                statement += this.$moment(this.timestamp).fromNow() + \", \";\n            }\n\n            statement += this.agent + \" claimed \" + this.subject;\n\n            if (this.negative === true) {\n                statement += \" could not \";\n            } else {\n                statement += \" could \";\n            }\n\n            statement += \"demonstrate \\\"\" + this.competencyText + \"\\\".\";\n            return statement;\n        },\n        timeAgo: function() {\n            if (this.timestamp == null) {\n                return null;\n            }\n            return this.$moment(this.timestamp).fromNow();\n        },\n        competencyText: function() {\n            if (this.competency == null) {\n                return null;\n            }\n            return this.competency.name;\n        },\n        evidenceText: function() {\n            return this.evidenceExplanation;\n        },\n        fingerprintUrl: function() {\n            if (this.agentPerson == null) {\n                return null;\n            }\n            if (this.agentPerson.email != null) {\n                return \"https://www.gravatar.com/avatar/\" + EcCrypto.md5(this.agentPerson.email.toLowerCase()) + \"?s=22\";\n            }\n            return \"http://tinygraphs.com/spaceinvaders/\" + this.agentPerson.getGuid() + \"?theme=base&numcolors=16&size=22&fmt=svg\";\n        },\n        badged: function() {\n            if (this.assertion == null) {\n                return false;\n            }\n            return this.assertion.hasReader(this.$store.getters['editor/badgePk']);\n        },\n        badgeUrl: function() {\n            if (this.assertion != null) {\n                if (this.assertion.hasReader(this.$store.getters['editor/badgePk'])) {\n                    return EcRemote.urlAppend(window.repo.selectedServer, \"badge/assertion/\") + this.assertion.getGuid();\n                }\n            }\n            return \"\";\n        }\n    },\n    watch: {\n        evidence: function(oldEvidence, newEvidence) {\n            this.evidenceExplanation = null;\n            if (this.evidence != null) {\n                if (this.evidence.length > 0) {\n                    this.$store.dispatch('editor/computeBecause', this.evidence).then((because) => {\n                        this.$nextTick(() => {\n                            this.evidenceExplanation = because;\n                        });\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        initialize: function(isVisible, entry) {\n            if (isVisible) {\n                EcAssertion.get(this.uri, (assertion) => {\n                    this.assertion = assertion;\n                    if (assertion.subject == null) {\n                        this.subject = \"nobody\";\n                    } else {\n                        assertion.getSubjectName(window.repo).then((name) => {\n                            this.subject = name;\n                        }).catch(appError);\n                        assertion.getSubjectAsync((pk) => {\n                            this.subjectPk = pk.toPem();\n                        }, appError);\n                    }\n                    if (assertion.agent == null) {\n                        this.agent = \"nobody\";\n                    } else {\n                        assertion.getAgentName(window.repo).then((name) => {\n                            this.agent = name;\n                        }).catch(appError);\n                    }\n                    assertion.getAgentAsync((pk) => {\n                        this.agentPk = pk.toPem();\n                        this.getAgent();\n                    }, appError);\n                    if (assertion.assertionDate != null) {\n                        assertion.getAssertionDateAsync((assertionDate) => {\n                            this.timestamp = assertionDate;\n                        }, appError);\n                    }\n                    if (assertion.expirationDate != null) {\n                        assertion.getExpirationDateAsync((expirationDate) => {\n                            this.expiry = expirationDate;\n                        }, appError);\n                    }\n                    if (assertion.negative != null) {\n                        assertion.getNegativeAsync((negative) => {\n                            this.negative = negative;\n                        }, appError);\n                    } else {\n                        this.negative = false;\n                    }\n                    if (assertion.evidence != null) {\n                        for (var i = 0; i < assertion.getEvidenceCount(); i++) {\n                            ((i) => {\n                                assertion.getEvidenceAsync(i, (evidence) => {\n                                    if (this.evidence == null) {\n                                        this.evidence = [];\n                                    }\n                                    this.evidence.push(evidence);\n                                    this.evidenceExplanation = null;\n                                }, appError);\n                            })(i);\n                        }\n                    }\n                    EcCompetency.get(assertion.competency, (competency) => {\n                        this.competency = competency;\n                    }, appError);\n                }, appError);\n            }\n        },\n        gotoCompetency: function() {\n            // TODO\n            // EcFramework.search(repo, \"competency:\\\"\" + this.assertion.competency + \"\\\"\", (frameworks) => {\n            //     if (frameworks.length > 0) {\n            //         app.selectedFramework = frameworks[0];\n            //         app.selectedCompetency = EcCompetency.getBlocking(me.assertion.competency);\n            //         app.subject = me.assertion.getSubject().toPem();\n            //         $(\"#rad2\").click();\n            //         setTimeout(\n            //             function () {\n            //                 $(\"[id=\\\"\" + app.selectedCompetency.id + \"\\\"]\").each(function () {\n            //                     $(this)[0].scrollIntoView();\n            //                 })\n            //             }, 1000);\n            //     }\n            // }, appError);\n        },\n        getAgent: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.agentPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.agentPk);\n                    var p = new Person();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.agentPerson = p;\n                } else {\n                    this.agentPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.agentPk);\n                var p = new Person();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.agentPerson = p;\n            });\n        },\n        getSubject: function() {\n            this.agentPerson = null;\n            let me = this;\n            EcPerson.search(window.repo, EcPk.fromPem(me.subjectPk).fingerprint(), (persons) => {\n                if (persons.length === 0) {\n                    var pk = EcPk.fromPem(me.subjectPk);\n                    var p = new Person();\n                    p.assignId(window.repo.selectedServer, pk.fingerprint());\n                    p.addOwner(pk);\n                    if (this.displayName === null) {\n                        p.name = \"Unknown Person.\";\n                    } else {\n                        p.name = this.displayName;\n                    }\n                    this.subjectPerson = p;\n                } else {\n                    this.subjectPerson = persons[0];\n                }\n            }, (failure) => {\n                var pk = EcPk.fromPem(me.subjectPk);\n                var p = new Person();\n                p.assignId(window.repo.selectedServer, pk.fingerprint());\n                p.addOwner(pk);\n                if (this.displayName === null) {\n                    p.name = \"Unknown Person.\";\n                } else {\n                    p.name = this.displayName;\n                }\n                this.subjectPerson = p;\n            });\n        }\n    }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Assertion.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Assertion.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Assertion.vue?vue&type=template&id=9b6f9e24\"\nimport script from \"./Assertion.vue?vue&type=script&lang=js\"\nexport * from \"./Assertion.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}