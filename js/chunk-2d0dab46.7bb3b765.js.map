{"version":3,"sources":["webpack:///./src/mixins/cassUtil.js"],"names":["cassUtil","name","data","methods","getOrganizationByEcPk","ecPk","successCallback","failureCallback","ecPkPem","toPem","paramObj","size","EcOrganization","search","window","repo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ecoa","_iterator","_step","o","groupPpkSet","_iterator2","_step2","gPpk","wrap","_callee$","_context","prev","next","_createForOfIteratorHelper","s","n","done","value","getOrgKeys","sent","toPk","equals","abrupt","t0","e","f","finish","t1","toString","t2","stop","_x","apply","arguments","err","getOrganizationEcPk","orgObj","_callee2","_callee2$","_context2","getCurrentOrgKey","getPersonEcPk","personObj","personFingerprint","generateProbablePersonFingerprintFromShortId","shortId","owner","_iterator3","_step3","pkPem","EcPk","fromPem","fingerprint","addAllOwnersFromObjectToObject","fromObj","toObj","_iterator4","_step4","addOwner","setDefaultBrowserConfigId","configId","localStorage","setItem","removeDefaultBrowserConfig","removeItem","getDefaultBrowserConfigId","getItem","getBooleanValue","val","equalsIgnoreCase","addAllIdentityPksAsOwners","obj","EcIdentityManager","default","ids","length","i","ppk","isObjectOwnerless","doesAnyIdentityOwnObject","isAdmin","canEditAny","getMyPks","item","adminKeys","personShortId","substring","lastIndexOf","isPersonIdAnObjectOwner","_iterator5","_step5","ownerPkPem","ownerFingerprint","isPersonIdAnObjectReader","reader","_iterator6","_step6","readerPkPem","readerFingerprint","areAnyIdentitiesThisPerson","getFingerprint","isPersonalIdentityAnObjectOwner","personalIdentPkPem","getPersonalIdentityPk","includes","buildEcAlignmentsFromRemoteLinkedData","ecrlda","ecaa","_iterator7","_step7","ecrld","eca","EcAlignment","copyFrom","push","computed","amLoggedIn"],"mappings":"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","file":"js/chunk-2d0dab46.7bb3b765.js","sourcesContent":["export const cassUtil = {\n    name: 'cassUtil',\n    data: () => ({\n    }),\n    methods: {\n        getOrganizationByEcPk(ecPk, successCallback, failureCallback) {\n            let ecPkPem = ecPk.toPem();\n            let paramObj = {};\n            paramObj.size = 10000;\n            EcOrganization.search(window.repo, '',\n                async function(ecoa) {\n                    for (let o of ecoa) {\n                        try {\n                            let groupPpkSet = await o.getOrgKeys();\n                            for (let gPpk of groupPpkSet) {\n                                if (gPpk && gPpk.toPk().toPem().equals(ecPkPem)) {\n                                    successCallback(o);\n                                    return;\n                                }\n                            }\n                        } catch (e) {\n                            // TODO Problem with EcOrganization update and creating encrypted value when only a reader...\n                            // Anticipated workaround....login as group owner and save it.\n                            // console.error(\"TODO...fix this...needs FRITZ input!!!!: \" + e.toString());\n                            failureCallback(e.toString());\n                        }\n                    }\n                    successCallback(null);\n                },\n                function(err) {\n                    failureCallback(err);\n                },\n                paramObj);\n        },\n        async getOrganizationEcPk(orgObj) {\n            try {\n                return (await orgObj.getCurrentOrgKey()).toPk();\n                // let orgEvPpk = new EcEncryptedValue();\n                // orgEvPpk.copyFrom(orgObj[this.GROUP_PPK_KEY]);\n                // let orgPpk = EcPpk.fromPem(orgEvPpk.decryptIntoString());\n                // return orgPpk.toPk();\n            } catch (e) {\n                // TODO Problem with EcOrganization update and creating encrypted value when only a reader...\n                // Anticipated workaround....login as group owner and save it.\n                return null;\n            }\n        },\n        getPersonEcPk(personObj) {\n            let personFingerprint = this.generateProbablePersonFingerprintFromShortId(personObj.shortId());\n            if (personObj.owner) {\n                for (let pkPem of personObj.owner) {\n                    let ecPk = EcPk.fromPem(pkPem);\n                    if (personFingerprint.equals(ecPk.fingerprint())) return ecPk;\n                }\n            }\n            return null;\n        },\n        addAllOwnersFromObjectToObject(fromObj, toObj) {\n            if (fromObj && fromObj.owner) {\n                for (let pkPem of fromObj.owner) {\n                    let ecPk = EcPk.fromPem(pkPem);\n                    toObj.addOwner(ecPk);\n                }\n            }\n        },\n        setDefaultBrowserConfigId(configId) {\n            localStorage.setItem(\"cassAuthoringToolDefaultBrowserConfigId\", configId);\n        },\n        removeDefaultBrowserConfig() {\n            localStorage.removeItem(\"cassAuthoringToolDefaultBrowserConfigId\");\n        },\n        getDefaultBrowserConfigId() {\n            return localStorage.getItem(\"cassAuthoringToolDefaultBrowserConfigId\");\n        },\n        getBooleanValue(val) {\n            if (typeof val === 'boolean') return val;\n            else if (typeof val === 'string') {\n                if (val.equalsIgnoreCase('true')) return true;\n                else return false;\n            } else return false;\n        },\n        addAllIdentityPksAsOwners(obj) {\n            // let isEcrld = (obj instanceOf EcRemoteLinkedData);\n            if (EcIdentityManager && EcIdentityManager.default.ids && EcIdentityManager.default.ids.length > 0) {\n                for (let i = 0; i < EcIdentityManager.default.ids.length; i++) {\n                    obj.addOwner(EcIdentityManager.default.ids[i].ppk.toPk());\n                }\n            }\n        },\n        isObjectOwnerless(obj) {\n            if (!obj.owner || obj.owner.length === 0) return true;\n            else return false;\n        },\n        doesAnyIdentityOwnObject(obj) {\n            if (this.isAdmin()) return true;\n            if (obj.canEditAny == null) return true;\n            return obj.canEditAny(EcIdentityManager.default.getMyPks());\n        },\n        canEditAny: function(item) {\n            if (this.isAdmin()) return true;\n            if (item.canEditAny == null) return true;\n            return item.canEditAny(EcIdentityManager.default.getMyPks());\n        },\n        isAdmin: function() {\n            if (EcIdentityManager.default.ids.length > 0 && window.repo.adminKeys != null && window.repo.adminKeys.length > 0) {\n                if (window.repo.adminKeys[0] === EcIdentityManager.default.ids[0].ppk.toPk().toPem()) { return true; }\n            }\n            return false;\n        },\n        generateProbablePersonFingerprintFromShortId(personShortId) {\n            return personShortId.substring(personShortId.lastIndexOf(\"/\") + 1);\n        },\n        isPersonIdAnObjectOwner(personShortId, obj) {\n            if (!obj.owner || obj.owner.length === 0) return false;\n            let personFingerprint = this.generateProbablePersonFingerprintFromShortId(personShortId);\n            for (let ownerPkPem of obj.owner) {\n                let ownerFingerprint = EcPk.fromPem(ownerPkPem).fingerprint();\n                if (ownerFingerprint.equals(personFingerprint)) return true;\n            }\n            return false;\n        },\n        isPersonIdAnObjectReader(personShortId, obj) {\n            if (!obj.reader || obj.reader.length === 0) return false;\n            let personFingerprint = this.generateProbablePersonFingerprintFromShortId(personShortId);\n            for (let readerPkPem of obj.reader) {\n                let readerFingerprint = EcPk.fromPem(readerPkPem).fingerprint();\n                if (readerFingerprint.equals(personFingerprint)) return true;\n            }\n            // return obj.hasReader(EcPk.fromPem(pkPem));\n            return false;\n        },\n        areAnyIdentitiesThisPerson(personObj) {\n            let personFingerprint = personObj.getFingerprint();\n            if (EcIdentityManager && EcIdentityManager.default.ids && EcIdentityManager.default.ids.length > 0) {\n                for (let i = 0; i < EcIdentityManager.default.ids.length; i++) {\n                    if (EcIdentityManager.default.ids[i].ppk.toPk().fingerprint().equals(personFingerprint)) return true;\n                }\n            }\n            return false;\n        },\n        isPersonalIdentityAnObjectOwner(obj) {\n            if (this.isAdmin()) return true;\n            if (!obj.owner || obj.owner.length === 0) return false;\n            let personalIdentPkPem = this.getPersonalIdentityPk().toPem();\n            return obj.owner.includes(personalIdentPkPem);\n        },\n        getPersonalIdentityPk() {\n            // assuming that the first identity is the user's personal identity\n            if (EcIdentityManager && EcIdentityManager.default.ids && EcIdentityManager.default.ids.length > 0) {\n                return EcIdentityManager.default.ids[0].ppk.toPk();\n            } else return null;\n        },\n        buildEcAlignmentsFromRemoteLinkedData(ecrlda) {\n            let ecaa = [];\n            for (let ecrld of ecrlda) {\n                let eca = new EcAlignment();\n                eca.copyFrom(ecrld);\n                ecaa.push(eca);\n            }\n            return ecaa;\n        }\n    },\n    computed: {\n        amLoggedIn: function() {\n            if (EcIdentityManager && EcIdentityManager.default.ids && EcIdentityManager.default.ids.length > 0) return true;\n            else return false;\n        }\n    }\n};\n\n"],"sourceRoot":""}