{"version":3,"sources":["webpack:///./src/views/progressionModel/ProgressionHierarchy.vue","webpack:///src/views/progressionModel/ProgressionHierarchy.vue","webpack:///./src/views/progressionModel/ProgressionHierarchy.vue?aef6","webpack:///./src/views/progressionModel/ProgressionHierarchy.vue?cb95","webpack:///./src/views/progressionModel/ProgressionHierarchy.vue?7a28","webpack:///./src/mixins/competencyEdits.js"],"names":["render","_vm","this","_c","_self","staticClass","class","dragging","canEdit","view","queryParams","select","attrs","directives","name","rawName","value","selectAll","expression","domProps","Array","isArray","_i","on","$event","$$a","$$el","target","$$c","checked","$$v","$$i","concat","slice","_e","expanded","selectButtonText","$emit","selectedArray","_v","_s","multipleSelected","addingNode","_m","addProgressionModelOrLevelText","canCopyOrCut","deleteSelected","loading","onClickCreateNew","cutClick","canPaste","pasteClick","computeHierarchy","setPrecedence","cancelImport","$store","dispatch","openFramework","path","query","hierarchy","_b","isDraggable","beginDrag","endDrag","model","callback","dragOptions","_l","item","index","key","obj","id","subview","children","profile","highlightList","newFramework","container","properties","shiftKey","arrowKey","onCreateNewNode","handleMountingNode","add","move","onDraggableCheck","staticRenderFns","props","Object","containerType","String","repo","selectMode","Boolean","containerTypeGet","viewOnly","type","default","doneDragging","data","structure","once","controlOnStart","filter","dragIcon","delay","disabled","ghostClass","chosenClass","dragClass","scrollSensitivity","forceFallback","components","HierarchyNode","draggable","mixins","common","competencyEdits","computed","length","getters","addAnother","me","appLog","precache","multiget","success","appError","canEditAny","recomputeHierarchy","framework","watch","handler","deep","addProgressionMaddProgressionModelOrLevelTextodelOrChildText","commit","val","mounted","singleSelect","window","addEventListener","keydown","keyup","beforeDestroy","removeEventListener","methods","copyClick","e","indexOf","ctrlKey","parentId","previousSiblingId","startTime","_this","setTimeout","removePrecedence","_removePrecedence","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_this2","wrap","_context2","prev","next","abrupt","Promise","_ref","_callee","resolve","i","c","_context","r","undefined","saveObject","EcConcept","get","sent","push","addChildren","stop","_x","apply","arguments","_setPrecedence","_callee3","_context3","setPrecedes","setPrecededBy","_computeHierarchy","_callee4","setOrder","_context4","reorder","_x2","printPrettyStructure","output","j","k","_addChildren","_callee6","deletePrecedence","_this3","_context6","_ref2","_callee5","subC","_context5","_x7","_x3","_x4","_x5","_x6","_reorder","_callee8","unorderedStructure","property","_this4","_context8","_ref3","_callee7","changesMade","numChangesMade","c2","_context7","reorderChildren","setProrgressionOrder","_x10","_x8","_x9","_reorderChildren","_callee10","_this5","_context10","_ref4","_callee9","childChangesMade","numChildChangesMade","subC1","subC2","_context9","_x14","_x11","_x12","_x13","_setProrgressionOrder","_callee11","node1","node2","sibling","parentStructure","node1Index","node2Index","_parentStructure","_node1Index","_node2Index","nodeParent","_context11","findSiblingOfNode","findSubStructure","findIndex","EcRemoteLinkedData","trimVersionFromUrl","splice","toString","_x15","_x16","_x17","_x18","_findSiblingOfNode","_callee13","node","nibling","_this6","_context13","_ref5","_callee12","niblingParent","niblingAncestor","_context12","t0","t1","_x21","_x19","_x20","_findSubStructure","_callee15","_this7","_context15","_ref6","_callee14","subStructure","_context14","_x24","_x22","_x23","event","originalEvent","foo","to","oldIndex","newIndex","toId","toLast","from","shortId","_setPrecedes","_callee17","_this8","_context17","_ref7","_callee16","precedes","_precedes","_context16","setChildrenPrecedes","findPrecedes","findChildrenPrecedes","_x26","_x25","_setChildrenPrecedes","_callee19","subContainer","_this9","_context19","_ref8","_callee18","_precedes2","_context18","_x29","_x27","_x28","_findPrecedes","_callee21","sourceNodeId","_this10","_context21","_ref9","_callee20","foundSourceNode","_context20","_x32","_x30","_x31","_findChildrenPrecedes","_callee23","_this11","_context23","_ref10","_callee22","foundChildSourceNode","_context22","_x36","_x33","_x34","_x35","_setPrecededBy","_callee25","_this12","_context25","_ref11","_callee24","precededBy","_precededBy","_context24","setChildrenPrecededBy","findPrecededBy","findChildrenPrecededBy","_x38","_x37","_setChildrenPrecededBy","_callee27","_this13","_context27","_ref12","_callee26","_precededBy2","_context26","_x41","_x39","_x40","_findPrecededBy","_callee29","_this14","_context29","_ref13","_callee28","_context28","_x44","_x42","_x43","_findChildrenPrecededBy","_callee31","_this15","_context31","_ref14","_callee30","_context30","_x48","_x45","_x46","_x47","_saveObject","_callee33","_this16","_context33","_ref15","_callee32","_context32","saveTo","_x50","_x49","_move","_callee35","fromId","fromContainerId","toContainerId","removeOldRelations","initialValue","fromIndex","toIndex","moveComp","fromContainer","fromProperty","fromProperty2","toContainer","toProperty","toProperty2","fromPropInitialValue","fromProp2InitialValue","toPropInitialValue","toProp2InitialValue","_context35","EcRepository","EcArray","operation","fieldChanged","Date","toISOString","state","editor","private","EcEncryptedValue","encryptOnSaveMap","toEncryptedValue","t2","setRemove","_callee34","_context34","_x51","_x52","_x53","_x54","_x55","_x56","_add","_callee36","containerId","previousSibling","owner","reader","parent","_context36","newObjectEndpoint","generateShortId","generateId","selectedServer","EcIdentityManager","ids","addOwner","ppk","toPk","EcPk","fromPem","addReader","setDefaultLanguage","defaultLanguage","multiput","JSON","parse","toJson","_x57","_x58","objId","setAdd","deleteObject","_openFramework","_callee37","f","_context37","EcConceptScheme","$router","params","frameworkId","_onClickCreateNew","_callee38","_context38","_deleteSelected","_callee39","_context39","deleteLevel","thing","deleteLevelInner","_deleteLevelInner","_callee40","editsToUndo","level","_level","_context40","spitEvent","deleteRegistered","stringify","_x59","component","removeObject","thisFramework","initialCompetencies","competency","initialRelations","relation","initialLevels","removeCompetency","conditionalDelete","importType","frameworkToSave","removeLevel","changedValue"],"mappings":"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","file":"js/chunk-056ed129.2ae6069b.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"lode__hierarchy\",class:{'is-dragging': _vm.dragging}},[_c('div',{staticClass:\"hierarchy-buttons columns is-gapless is-paddingless is-mobile is-marginless is-paddingless\"},[((_vm.canEdit && _vm.view !== 'import') || _vm.queryParams.select)?_c('div',{staticClass:\"column is-narrow\",attrs:{\"id\":\"check-radio-all-column\"}},[_c('div',{staticClass:\"field\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectAll),expression:\"selectAll\"}],staticClass:\"is-checkradio\",attrs:{\"id\":\"selectAllCheckbox\",\"type\":\"checkbox\",\"name\":\"selectAllCheckbox\"},domProps:{\"checked\":Array.isArray(_vm.selectAll)?_vm._i(_vm.selectAll,null)>-1:(_vm.selectAll)},on:{\"change\":function($event){var $$a=_vm.selectAll,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.selectAll=$$a.concat([$$v]))}else{$$i>-1&&(_vm.selectAll=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.selectAll=$$c}}}}),_c('label',{attrs:{\"for\":\"selectAllCheckbox\"}})])]):_vm._e(),_c('div',{staticClass:\"column is-narrow\"},[(_vm.expanded)?_c('div',{staticClass:\"icon is-vcentered\",on:{\"click\":function($event){_vm.expanded=false}}},[_c('i',{staticClass:\"fa fa-caret-down has-text-primary is-size-2\"})]):(!_vm.expanded)?_c('div',{staticClass:\"icon is-vcentered\",on:{\"click\":function($event){_vm.expanded=true}}},[_c('i',{staticClass:\"fa fa-caret-right has-text-primary is-size-2\"})]):_c('div',{staticClass:\"icon is-vcentered\"},[_c('i',{staticClass:\"fa fa-circle is-size-6 has-text-light\"})]),(_vm.selectButtonText)?_c('div',{staticClass:\"button is-outlined is-primary\",on:{\"click\":function($event){return _vm.$emit('select-button-click', _vm.selectedArray)}}},[_vm._v(\" \"+_vm._s(_vm.selectButtonText)+\" \")]):_vm._e()]),_c('div',{staticClass:\"column is-narrow\"},[_c('div',{staticClass:\"buttons\"},[(_vm.multipleSelected && !_vm.addingNode && _vm.view !== 'import' && _vm.canEdit)?_c('div',{staticClass:\"button is-outlined is-primary\",on:{\"click\":function($event){return _vm.$emit('edit-multiple-event')}}},[_vm._m(0),_c('span',[_vm._v(\" Edit multiple \")])]):_vm._e(),(!_vm.addingNode && _vm.canEdit && !_vm.multipleSelected)?_c('div',{staticClass:\"button is-outlined is-primary\",on:{\"click\":function($event){_vm.addingNode = true;}}},[_vm._m(1),_c('span',[_vm._v(\" \"+_vm._s(_vm.addProgressionModelOrLevelText)+\" \")])]):_vm._e(),(!_vm.addingNode && _vm.canEdit && !_vm.multipleSelected && _vm.canCopyOrCut)?_c('div',{staticClass:\"button is-outlined is-danger\",on:{\"click\":_vm.deleteSelected}},[_vm._m(2),_c('span',[_vm._v(\" delete item \")])]):_vm._e(),(_vm.addingNode)?_c('div',{staticClass:\"button is-outlined is-dark\",on:{\"click\":function($event){_vm.addingNode = false;}}},[_vm._m(3),_c('span',[_vm._v(\"cancel\")])]):_vm._e(),(_vm.addingNode)?_c('div',{staticClass:\"button is-outlined is-primary\",class:{'is-loading': _vm.loading},on:{\"click\":_vm.onClickCreateNew}},[_vm._m(4),_c('span',[_vm._v(\" create new \")])]):_vm._e(),(_vm.view === 'framework' || _vm.view === 'concept')?_c('div',{staticClass:\"button is-outlined\",class:_vm.canCopyOrCut ? 'is-primary' : 'is-disabled',attrs:{\"title\":\"Cut progression level\",\"disabled\":!_vm.canCopyOrCut},on:{\"click\":_vm.cutClick}},[_vm._m(5)]):_vm._e(),(_vm.view === 'framework' || _vm.view === 'concept')?_c('div',{staticClass:\"button is-outlined\",class:_vm.canPaste ? 'is-primary' : 'is-disabled',attrs:{\"disabled\":!_vm.canPaste,\"title\":\"Paste progression level\"},on:{\"click\":_vm.pasteClick}},[_vm._m(6)]):_vm._e(),(_vm.view === 'concept')?_c('div',{staticClass:\"button is-outlined is-primary\",attrs:{\"title\":\"Reorder by Precedence\"},on:{\"click\":function($event){return _vm.computeHierarchy(true)}}},[_c('span',[_vm._v(\" reorder by precedence \")])]):_vm._e(),(_vm.view === 'concept')?_c('div',{staticClass:\"button is-outlined is-primary\",attrs:{\"title\":\"Set Precedence\"},on:{\"click\":_vm.setPrecedence}},[_c('span',[_vm._v(\" set precedence by order \")])]):_vm._e()])]),(_vm.view === 'import')?_c('div',{staticClass:\"column\"},[_c('div',{staticClass:\"buttons is-right\"},[_c('div',{staticClass:\"buttons is-right\"},[_c('div',{staticClass:\"button is-light is-pulled-right is-dark is-outlined\",on:{\"click\":_vm.cancelImport}},[_c('span',[_vm._v(\" Cancel \")]),_vm._m(7)]),_c('div',{staticClass:\"button is-dark is-outlined is-pulled-right\",on:{\"click\":function($event){return _vm.$store.dispatch('app/clearImport')}}},[_c('span',[_vm._v(\" import again \")]),_vm._m(8)]),_c('div',{staticClass:\"button is-dark is-outlined is-pulled-right\",on:{\"click\":_vm.openFramework}},[_c('span',[_vm._v(\"view in editor\")]),_vm._m(9)]),_c('router-link',{staticClass:\"button is-primary is-outlined is -pulled-right\",attrs:{\"to\":{path: '/progressionLevels', query: _vm.queryParams}}},[_c('span',[_vm._v(\" Done \")]),_c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-home\"})])])],1)])]):_vm._e()]),(_vm.hierarchy)?[_c('draggable',_vm._b({staticClass:\"lode__hierarchy-ul\",attrs:{\"tag\":\"ul\",\"disabled\":_vm.canEdit !== true || !_vm.isDraggable,\"group\":{ name: 'test' },\"handle\":\".handle\"},on:{\"start\":_vm.beginDrag,\"end\":_vm.endDrag},model:{value:(_vm.hierarchy),callback:function ($$v) {_vm.hierarchy=$$v},expression:\"hierarchy\"}},'draggable',_vm.dragOptions,false),_vm._l((_vm.hierarchy),function(item,index){return _c('HierarchyNode',{key:item.obj.id,staticClass:\"lode__hierarchy-li\",attrs:{\"depth\":1,\"view\":_vm.view,\"subview\":_vm.subview,\"obj\":item.obj,\"dragging\":_vm.dragging,\"canEdit\":_vm.canEdit,\"hasChild\":item.children,\"profile\":_vm.profile,\"highlightList\":_vm.highlightList,\"selectAll\":_vm.selectAll,\"newFramework\":_vm.newFramework,\"index\":index,\"frameworkEditable\":_vm.canEdit,\"selectedArray\":_vm.selectedArray,\"parentStructure\":_vm.hierarchy,\"parent\":_vm.container,\"properties\":_vm.properties,\"expandAll\":_vm.expanded==true,\"propagateParentChecked\":\"false\",\"shiftKey\":_vm.shiftKey,\"arrowKey\":_vm.arrowKey},on:{\"create-new-node-event\":_vm.onCreateNewNode,\"mounting-node\":_vm.handleMountingNode,\"add\":_vm.add,\"begin-drag\":_vm.beginDrag,\"move\":_vm.move,\"select\":_vm.select,\"draggable-check\":_vm.onDraggableCheck}})}),1)]:_vm._e()],2)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-cog\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-plus-circle\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-plus-circle\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-times\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-plus\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fas handle fa-cut\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-paste\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-times-circle\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-redo-alt\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"icon\"},[_c('i',{staticClass:\"fa fa-edit\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div\n        class=\"lode__hierarchy\"\n        :class=\"{'is-dragging': dragging}\">\n        <div\n            class=\"hierarchy-buttons columns is-gapless is-paddingless is-mobile is-marginless is-paddingless\">\n            <!-- CONTROLS FOR SELECT: ENABLED MULTI EDIT  -->\n            <div\n                v-if=\"(canEdit && view !== 'import') || queryParams.select\"\n                id=\"check-radio-all-column\"\n                class=\"column is-narrow\">\n                <div\n                    class=\"field\">\n                    <input\n                        class=\"is-checkradio\"\n                        id=\"selectAllCheckbox\"\n                        type=\"checkbox\"\n                        name=\"selectAllCheckbox\"\n                        v-model=\"selectAll\">\n                    <label for=\"selectAllCheckbox\" />\n                </div>\n            </div>\n            <!-- CONTROLS FOR EXPAND  -->\n            <div class=\"column is-narrow\">\n                <div\n                    v-if=\"expanded\"\n                    class=\"icon is-vcentered\"\n                    @click=\"expanded=false\">\n                    <i class=\"fa fa-caret-down has-text-primary is-size-2\" />\n                </div>\n                <div\n                    v-else-if=\"!expanded\"\n                    class=\"icon is-vcentered\"\n                    @click=\"expanded=true\">\n                    <i class=\"fa fa-caret-right has-text-primary is-size-2\" />\n                </div>\n                <div\n                    v-else\n                    class=\"icon is-vcentered\">\n                    <i class=\"fa fa-circle is-size-6 has-text-light\" />\n                </div>\n                <div\n                    v-if=\"selectButtonText\"\n                    @click=\"$emit('select-button-click', selectedArray)\"\n                    class=\"button is-outlined is-primary\">\n                    {{ selectButtonText }}\n                </div>\n            </div>\n            <!-- MULTI EDIT BUTTONS -->\n            <div class=\"column is-narrow\">\n                <div\n                    class=\"buttons\">\n                    <div\n                        v-if=\"multipleSelected && !addingNode && view !== 'import' && canEdit\"\n                        @click=\"$emit('edit-multiple-event')\"\n                        class=\"button is-outlined is-primary\">\n                        <span class=\"icon\">\n                            <i class=\"fa fa-cog\" />\n                        </span>\n                        <span>\n                            Edit multiple\n                        </span>\n                    </div>\n                    <!-- if multiple are selected allow for edit multiple -->\n                    <div\n                        @click=\"addingNode = true;\"\n                        v-if=\"!addingNode && canEdit && !multipleSelected\"\n                        class=\"button is-outlined is-primary\">\n                        <span class=\"icon\">\n                            <i class=\"fa fa-plus-circle\" />\n                        </span>\n                        <span>\n                            {{ addProgressionModelOrLevelText }}\n                        </span>\n                    </div>\n                    <!-- delete item -->\n                    <div\n                        v-if=\"!addingNode && canEdit && !multipleSelected && canCopyOrCut\"\n                        @click=\"deleteSelected\"\n                        class=\"button is-outlined is-danger\">\n                        <span class=\"icon\">\n                            <i class=\"fa fa-plus-circle\" />\n                        </span>\n                        <span>\n                            delete item\n                        </span>\n                    </div>\n                    <div\n                        v-if=\"addingNode\"\n                        @click=\"addingNode = false;\"\n                        class=\"button is-outlined is-dark \">\n                        <span class=\"icon\">\n                            <i class=\"fa fa-times\" />\n                        </span>\n                        <span>cancel</span>\n                    </div>\n                    <div\n                        v-if=\"addingNode\"\n                        @click=\"onClickCreateNew\"\n                        :class=\"{'is-loading': loading}\"\n                        class=\"button is-outlined is-primary \">\n                        <span class=\"icon\">\n                            <i class=\"fa fa-plus\" />\n                        </span>\n                        <span>\n                            create new\n                        </span>\n                    </div>\n                    <div\n                        v-if=\"view === 'framework' || view === 'concept'\"\n                        title=\"Cut progression level\"\n                        :disabled=\"!canCopyOrCut\"\n                        class=\"button is-outlined\"\n                        :class=\"canCopyOrCut ? 'is-primary' : 'is-disabled'\"\n                        @click=\"cutClick\">\n                        <span class=\"icon\">\n                            <i class=\"fas handle fa-cut\" />\n                        </span>\n                    </div>\n                    <div\n                        v-if=\"view === 'framework' || view === 'concept'\"\n                        :disabled=\"!canPaste\"\n                        class=\"button is-outlined \"\n                        @click=\"pasteClick\"\n                        :class=\"canPaste ? 'is-primary' : 'is-disabled'\"\n                        title=\"Paste progression level\">\n                        <span class=\"icon\">\n                            <i class=\"fa fa-paste\" />\n                        </span>\n                    </div>\n                    <div\n                        v-if=\"view === 'concept'\"\n                        @click=\"computeHierarchy(true)\"\n                        class=\"button is-outlined is-primary \"\n                        title=\"Reorder by Precedence\">\n                        <span>\n                            reorder by precedence\n                        </span>\n                    </div>\n                    <div\n                        v-if=\"view === 'concept'\"\n                        @click=\"setPrecedence\"\n                        class=\"button is-outlined is-primary \"\n                        title=\"Set Precedence\">\n                        <span>\n                            set precedence by order\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <!-- IMPORT WORKFLOW BUTTONS -->\n            <div\n                class=\"column\"\n                v-if=\"view === 'import'\">\n                <div class=\"buttons is-right\">\n                    <!-- import details options -->\n                    <div\n                        class=\"buttons is-right\">\n                        <!-- cancel button -->\n                        <div\n                            @click=\"cancelImport\"\n                            class=\" button is-light is-pulled-right is-dark is-outlined\">\n                            <span>\n                                Cancel\n                            </span>\n                            <span class=\"icon\">\n                                <i class=\"fa fa-times-circle\" />\n                            </span>\n                        </div>\n                        <!--  start over -->\n                        <div\n                            @click=\"$store.dispatch('app/clearImport')\"\n                            class=\"button is-dark is-outlined is-pulled-right\">\n                            <span>\n                                import again\n                            </span>\n                            <span class=\"icon\">\n                                <i class=\"fa fa-redo-alt\" />\n                            </span>\n                        </div>\n                        <!-- open in editor -->\n                        <div\n                            @click=\"openFramework\"\n                            class=\"button is-dark is-outlined is-pulled-right\">\n                            <span>view in editor</span>\n                            <span class=\"icon\">\n                                <i class=\"fa fa-edit\" />\n                            </span>\n                        </div>\n                        <!--  home -->\n                        <router-link\n                            class=\"button is-primary is-outlined is -pulled-right\"\n                            :to=\"{path: '/progressionLevels', query: queryParams}\">\n                            <span>\n                                Done\n                            </span>\n                            <span class=\"icon\">\n                                <i class=\"fa fa-home\" />\n                            </span>\n                        </router-link>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <template\n            v-if=\"hierarchy\">\n            <draggable\n                v-bind=\"dragOptions\"\n                v-model=\"hierarchy\"\n                tag=\"ul\"\n                class=\"lode__hierarchy-ul\"\n                :disabled=\"canEdit !== true || !isDraggable\"\n                :group=\"{ name: 'test' }\"\n                @start=\"beginDrag\"\n                handle=\".handle\"\n                @end=\"endDrag\">\n                <HierarchyNode\n                    :depth=\"1\"\n                    :view=\"view\"\n                    @create-new-node-event=\"onCreateNewNode\"\n                    :subview=\"subview\"\n                    @mounting-node=\"handleMountingNode\"\n                    v-for=\"(item, index) in hierarchy\"\n                    :key=\"item.obj.id\"\n                    :obj=\"item.obj\"\n                    class=\"lode__hierarchy-li\"\n                    :dragging=\"dragging\"\n                    :canEdit=\"canEdit\"\n                    :hasChild=\"item.children\"\n                    :profile=\"profile\"\n                    :highlightList=\"highlightList\"\n                    :selectAll=\"selectAll\"\n                    :newFramework=\"newFramework\"\n                    :index=\"index\"\n                    :frameworkEditable=\"canEdit\"\n                    :selectedArray=\"selectedArray\"\n                    @add=\"add\"\n                    @begin-drag=\"beginDrag\"\n                    @move=\"move\"\n                    @select=\"select\"\n                    :parentStructure=\"hierarchy\"\n                    :parent=\"container\"\n                    @draggable-check=\"onDraggableCheck\"\n                    :properties=\"properties\"\n                    :expandAll=\"expanded==true\"\n                    propagateParentChecked=\"false\"\n                    :shiftKey=\"shiftKey\"\n                    :arrowKey=\"arrowKey\" />\n            </draggable>\n        </template>\n    </div>\n</template>\n<script>\n\nimport common from '@/mixins/common.js';\nimport competencyEdits from '@/mixins/competencyEdits.js';\nvar hierarchyTimeout;\nexport default {\n    name: 'ProgressionHierarchy',\n    props: {\n        container: Object,\n        containerType: String,\n        repo: Object,\n        profile: Object,\n        highlightList: Array,\n        selectMode: Boolean,\n        selectAll: Boolean,\n        containerTypeGet: String,\n        viewOnly: Boolean,\n        newFramework: Boolean,\n        properties: String,\n        view: {\n            type: String,\n            default: 'framework'\n        },\n        subview: {\n            type: String,\n            default: ''\n        },\n        doneDragging: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data: function() {\n        return {\n            structure: [],\n            once: true,\n            dragging: false,\n            controlOnStart: false,\n            filter: 'showAll',\n            dragIcon: 'fa-arrows-alt',\n            dragOptions: {\n                delay: 100,\n                disabled: false,\n                ghostClass: 'ghost-drag',\n                chosenClass: 'chosen-drag',\n                dragClass: 'drag',\n                scrollSensitivity: 200,\n                forceFallback: true\n            },\n            multipleSelected: false,\n            addingNode: false,\n            selectedArray: [],\n            selectButtonText: null,\n            expanded: true,\n            isDraggable: true,\n            shiftKey: false,\n            arrowKey: null,\n            addProgressionModelOrLevelText: \"Add Level\",\n            loading: false\n        };\n    },\n    components: {\n        HierarchyNode: () => import('@/lode/components/HierarchyNode.vue'),\n        draggable: () => import('vuedraggable')\n    },\n    mixins: [common, competencyEdits],\n    computed: {\n        canCopyOrCut: function() {\n            if (this.selectedArray && this.selectedArray.length === 1) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        canPaste: function() {\n            if ((this.$store.getters['editor/copyId'] !== null || this.$store.getters['editor/cutId'] !== null) && this.$store.getters['editor/nodeInFocus'] !== null) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        queryParams: function() {\n            return this.$store.getters['editor/queryParams'];\n        },\n        addAnother: function() {\n            return this.$store.getters['editor/addAnother'];\n        },\n        hierarchy: function() {\n            var me = this;\n            if (this.container == null) return null;\n            if (!this.once) return this.structure;\n            appLog(\"Computing hierarchy.\");\n            var precache = [];\n            if (this.container[\"skos:hasTopConcept\"] != null) { precache = precache.concat(this.container[\"skos:hasTopConcept\"]); }\n            if (precache.length > 0) {\n                this.repo.multiget(precache, function(success) {\n                    me.computeHierarchy(false);\n                }, appError);\n            } else {\n                me.computeHierarchy(false);\n            }\n            return this.structure;\n        },\n        // True if the current client can edit this object.\n        canEdit: function() {\n            if (this.viewOnly === true) {\n                return false;\n            }\n            return this.canEditAny(this.container);\n        },\n        recomputeHierarchy: function() {\n            return this.$store.getters['editor/recomputeHierarchy'];\n        },\n        framework() {\n            return this.$store.getters['editor/framework'];\n        }\n    },\n    watch: {\n        container: {\n            handler() {\n                this.once = true;\n            },\n            deep: true\n        },\n        selectedArray: function() {\n            if (this.selectedArray.length > 1) {\n                this.multipleSelected = true;\n            } else {\n                this.multipleSelected = false;\n            }\n            if (this.selectedArray.length === 1) {\n                this.addProgressionModelOrLevelText = \"Add Level\";\n            } else {\n                this.addProgressionMaddProgressionModelOrLevelTextodelOrChildText = \"Add Progression Model\";\n            }\n            this.$emit('selected-array', this.selectedArray);\n        },\n        recomputeHierarchy: function() {\n            if (this.recomputeHierarchy) {\n                this.once = true;\n                this.$store.commit('editor/recomputeHierarchy', false);\n            }\n        },\n        doneDragging: function() {\n            if (this.doneDragging) {\n                this.dragging = false;\n            }\n        },\n        addAnother: function(val) {\n            if (val) {\n                this.onClickCreateNew();\n                this.$store.commit('editor/addAnother', false);\n            }\n        }\n    },\n    mounted: function() {\n        if (this.queryParams) {\n            if (this.queryParams.singleSelect) {\n                this.selectButtonText = this.queryParams.singleSelect;\n            }\n            if (this.queryParams.select) {\n                if (this.queryParams.select !== \"\" && this.queryParams.select !== \"select\") {\n                    this.selectButtonText = this.queryParams.select;\n                }\n            }\n        }\n        window.addEventListener(\"keydown\", this.keydown);\n        window.addEventListener(\"keyup\", this.keyup);\n    },\n    beforeDestroy: function() {\n        window.removeEventListener('keyup', this.keyup);\n        window.removeEventListener('keydown', this.keydown);\n    },\n    methods: {\n        cutClick: function() {\n            if (this.selectedArray && this.selectedArray.length === 1) {\n                this.$store.commit('editor/cutId', this.selectedArray[0]);\n            }\n            this.$store.commit('editor/copyId', null);\n            this.$store.commit('editor/paste', false);\n        },\n        copyClick: function() {\n            if (this.selectedArray && this.selectedArray.length === 1) {\n                this.$store.commit('editor/copyId', this.selectedArray[0]);\n            }\n            this.$store.commit('editor/cutId', null);\n            this.$store.commit('editor/paste', false);\n        },\n        pasteClick: function() {\n            this.$store.commit('editor/paste', true);\n        },\n        keydown(e) {\n            if (this.canEdit) {\n                if (e.shiftKey) {\n                    this.shiftKey = true;\n                }\n                if (e.key.indexOf(\"Arrow\") !== -1 && e.shiftKey) {\n                    this.arrowKey = e.key;\n                }\n                if (e.key === \"x\" && e.ctrlKey) {\n                    if (this.selectedArray && this.selectedArray.length === 1) {\n                        this.$store.commit('editor/cutId', this.selectedArray[0]);\n                    }\n                    this.$store.commit('editor/copyId', null);\n                    this.$store.commit('editor/paste', false);\n                }\n                if (e.key === \"c\" && e.ctrlKey) {\n                    if (this.selectedArray && this.selectedArray.length === 1) {\n                        this.$store.commit('editor/copyId', this.selectedArray[0]);\n                    }\n                    this.$store.commit('editor/cutId', null);\n                    this.$store.commit('editor/paste', false);\n                }\n                if (e.key === \"v\" && e.ctrlKey) {\n                    this.$store.commit('editor/paste', true);\n                }\n            }\n        },\n        keyup(e) {\n            if (!e.shiftKey) {\n                this.shiftKey = false;\n            }\n            if (e.key.indexOf(\"Arrow\") !== -1) {\n                this.arrowKey = null;\n            }\n        },\n        onCreateNewNode: function(parentId, previousSiblingId) {\n            this.add(parentId, previousSiblingId);\n        },\n        /*\n         * when a child node is mounted it emits an event\n         * and a timeout is started\n         */\n        handleMountingNode: function() {\n            this.startTime();\n        },\n        /*\n         * each mount resets the timeout\n         * if the timeout length is met (no new nodes)\n         * the done loading event is triggered\n         */\n        startTime: function() {\n            hierarchyTimeout = setTimeout(() => {\n                this.$emit('done-loading-nodes');\n            }, 1000);\n        },\n        removePrecedence: async function() {\n            return new Promise(async(resolve) => {\n                let structure = [];\n                if (this.container == null) { return r; }\n                if (this.container[\"skos:hasTopConcept\"] !== null && this.container[\"skos:hasTopConcept\"] !== undefined) {\n                    if (this.container[\"ceterms:precedes\"] || this.container[\"ceterms:precededBy\"]) {\n                        if (this.container[\"ceterms:precedes\"]) delete this.container[\"ceterms:precedes\"];\n                        if (this.container[\"ceterms:precededBy\"]) delete this.container[\"ceterms:precededBy\"];\n                        await this.saveObject(this.container);\n                    }\n                    for (var i = 0; i < this.container[\"skos:hasTopConcept\"].length; i++) {\n                        var c = await EcConcept.get(this.container[\"skos:hasTopConcept\"][i]);\n                        if (c) {\n                            if (c[\"ceterms:precedes\"] || c[\"ceterms:precededBy\"]) {\n                                if (c[\"ceterms:precedes\"]) delete c[\"ceterms:precedes\"];\n                                if (c[\"ceterms:precededBy\"]) delete c[\"ceterms:precededBy\"];\n                                await this.saveObject(c);\n                            }\n                            structure.push({\"obj\": c, \"children\": []});\n                            if (c[\"skos:narrower\"]) {\n                                await this.addChildren(structure, c, i, true);\n                            }\n                        }\n                    }\n                }\n\n                this.structure = structure;\n                resolve();\n            });\n        },\n        setPrecedence: async function() {\n            await this.removePrecedence();\n\n            let structure = this.structure;\n            await this.setPrecedes(structure);\n            await this.setPrecededBy(structure);\n\n            this.structure = structure;\n        },\n        computeHierarchy: async function(setOrder) {\n            let structure = [];\n            if (this.container == null) { return r; }\n            if (this.container[\"skos:hasTopConcept\"] !== null && this.container[\"skos:hasTopConcept\"] !== undefined) {\n                for (var i = 0; i < this.container[\"skos:hasTopConcept\"].length; i++) {\n                    var c = await EcConcept.get(this.container[\"skos:hasTopConcept\"][i]);\n                    if (c) {\n                        structure.push({\"obj\": c, \"children\": []});\n                        if (c[\"skos:narrower\"]) {\n                            await this.addChildren(structure, c, i, false);\n                        }\n                    }\n                }\n            }\n\n            if (setOrder) {\n                await this.reorder(structure, \"ceterms:precedes\");\n                await this.reorder(structure, \"ceterms:precededBy\");\n            }\n\n            this.structure = structure;\n            this.once = false;\n        },\n        printPrettyStructure(structure) {\n            let output = \"[\";\n            for (let i = 0; i < structure.length; i++) {\n                if (structure[i].obj) {\n                    output += structure[i].obj[\"skos:prefLabel\"][\"@value\"] + ((i === structure.length - 1) && !(structure[i].children && structure[i].children.length > 0) ? \"\" : \", \");\n                }\n                if (structure[i].children.length > 0) {\n                    for (let j = 0; j < structure[i].children.length; j++) {\n                        if (structure[i].children[j]) {\n                            let children = structure[i].children;\n                            output += (j === 0 ? \"(\" : \"\") + children[j].obj[\"skos:prefLabel\"][\"@value\"] + (j === structure[i].children.length - 1 ? \")\" : \", \");\n                            output += (j === structure[i].children.length - 1 ? (i === structure.length - 1 ? \"]\" : \", \") : \"\");\n                            if (children[j].children.length > 0) {\n                                for (let k = 0; k < children[j].children.length; k++) {\n                                    if (children[j].children[k]) {\n                                        output += (k === 0 ? \"(\" : \"\") + children[j].children[k].obj[\"skos:prefLabel\"][\"@value\"] + (k === children[j].children.length - 1 ? \")\" : \", \");\n                                        output += (k === children[j].children.length - 1 ? (j === children.length - 1 ? \"]\" : \", \") : \"\");\n                                    }\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    output += (i === structure.length - 1 ? \"]\" : \"\");\n                }\n            }\n            return output;\n        },\n        addChildren: async function(structure, c, i, deletePrecedence) {\n            return new Promise(async(resolve) => {\n                for (var j = 0; j < c[\"skos:narrower\"].length; j++) {\n                    var subC = await EcConcept.get(c[\"skos:narrower\"][j]);\n                    if (deletePrecedence &&\n                        (subC[\"ceterms:precedes\"] || subC[\"ceterms:precededBy\"])) {\n                        if (subC[\"ceterms:precedes\"]) delete subC[\"ceterms:precedes\"];\n                        if (subC[\"ceterms:precededBy\"]) delete subC[\"ceterms:precededBy\"];\n                        await this.saveObject(subC);\n                    }\n                    structure[i].children.push({\"obj\": subC, \"children\": []});\n                    if (subC && subC[\"skos:narrower\"]) {\n                        await this.addChildren(structure[i].children, subC, j, deletePrecedence);\n                    }\n                }\n                resolve();\n            });\n        },\n        reorder: async function(unorderedStructure, property) {\n            return new Promise(async(resolve) => {\n                let changesMade = true;\n                let numChangesMade = 0; // Prevents endless loop when model properties are inconsistent\n                if (unorderedStructure == null) {\n                    return;\n                }\n                if (unorderedStructure !== null && unorderedStructure.length) {\n                    while (changesMade && (numChangesMade < 100)) {\n                        changesMade = false;\n                        let i;\n                        if (property === \"ceterms:precedes\") {\n                            i = 0;\n                        } else {\n                            i = unorderedStructure.length - 1;\n                        }\n                        let next = unorderedStructure[i];\n                        while (next) {\n                            var c = unorderedStructure[i].obj;\n                            if (c) {\n                                if (unorderedStructure[i].children) {\n                                    if (await this.reorderChildren(unorderedStructure, unorderedStructure[i].children, property)) {\n                                        numChangesMade++;\n                                        changesMade = true;\n                                    }\n                                }\n                                if (c[property]) {\n                                    var c2 = await EcConcept.get(c[property]);\n                                    if (await this.setProrgressionOrder(unorderedStructure, c, c2, property)) {\n                                        numChangesMade++;\n                                        changesMade = true;\n                                    }\n                                }\n                                if (property === \"ceterms:precedes\") {\n                                    if (i < unorderedStructure.length - 1) {\n                                        i++;\n                                        next = unorderedStructure[i];\n                                    } else {\n                                        next = undefined;\n                                    }\n                                } else {\n                                    if (i > 0) {\n                                        i--;\n                                        next = unorderedStructure[i];\n                                    } else {\n                                        next = undefined;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                resolve();\n            });\n        },\n        reorderChildren: async function(unorderedStructure, children, property) {\n            return new Promise(async(resolve) => {\n                let changesMade = false;\n                let childChangesMade = true;\n                let numChildChangesMade = 0; // Prevents endless loop when model properties are inconsistent\n                while (childChangesMade && (numChildChangesMade < 100)) {\n                    childChangesMade = false;\n                    let j;\n                    if (property === \"ceterms:precedes\") {\n                        j = 0;\n                    } else {\n                        j = children.length - 1;\n                    }\n                    let next = children[j];\n                    while (next) {\n                        let subC1 = children[j].obj;\n                        if (subC1) {\n                            if (subC1[\"skos:narrower\"]) {\n                                if (await this.reorderChildren(unorderedStructure, children[j].children, property)) {\n                                    changesMade = true;\n                                    numChildChangesMade++;\n                                    childChangesMade = true;\n                                }\n                            }\n                            if (subC1[property]) {\n                                let subC2 = await EcConcept.get(subC1[property]);\n                                if (await this.setProrgressionOrder(unorderedStructure, subC1, subC2, property)) {\n                                    changesMade = true;\n                                    numChildChangesMade++;\n                                    childChangesMade = true;\n                                }\n                            }\n                        }\n\n                        if (property === \"ceterms:precedes\") {\n                            if (j < children.length - 1) {\n                                j++;\n                                next = children[j];\n                            } else {\n                                next = undefined;\n                            }\n                        } else {\n                            if (j > 0) {\n                                j--;\n                                next = children[j];\n                            } else {\n                                next = undefined;\n                            }\n                        }\n                    }\n                }\n                resolve(changesMade);\n            });\n        },\n        setProrgressionOrder: async function(structure, node1, node2, property) {\n            // If the nodes are not at the same level in the hierarchy, then find the ancestor that IS\n            //  at the same level. Once the two sibling nodes are found, switch positions in the array.\n            let sibling = await this.findSiblingOfNode(node1, node2);\n            if (sibling !== null) {\n                // Set the order of the progression levels\n                let parentStructure = await this.findSubStructure(structure, node1);\n                if (!parentStructure) {\n                    // This condition should never be reached.\n                    appLog('Error: No parent structure found');\n                    return false;\n                }\n                let node1Index = await parentStructure.findIndex(item => EcRemoteLinkedData.trimVersionFromUrl(item.obj ? item.obj.id : item.id) === EcRemoteLinkedData.trimVersionFromUrl(node1.id));\n                let node2Index = await parentStructure.findIndex(item => EcRemoteLinkedData.trimVersionFromUrl(item.obj ? item.obj.id : item.id) === EcRemoteLinkedData.trimVersionFromUrl(sibling.id));\n                node2 = ({\"obj\": parentStructure[node2Index].obj, \"children\": parentStructure[node2Index].children});\n                if (property === \"ceterms:precedes\") {\n                    if (node1Index + 1 === node2Index) {\n                        // Nodes are already in order\n                        return false;\n                    }\n                    parentStructure.splice(node2Index, 1);\n                    node1Index = await parentStructure.findIndex(item => EcRemoteLinkedData.trimVersionFromUrl(item.obj ? item.obj.id : item.id) === EcRemoteLinkedData.trimVersionFromUrl(node1.id));\n                    parentStructure.splice(node1Index + 1, 0, node2);\n                } else {\n                    if (node2Index + 1 === node1Index) {\n                        // Nodes are already in order\n                        return false;\n                    }\n                    parentStructure.splice(node2Index, 1);\n                    node1Index = await parentStructure.findIndex(item => EcRemoteLinkedData.trimVersionFromUrl(item.obj ? item.obj.id : item.id) === EcRemoteLinkedData.trimVersionFromUrl(node1.id));\n                    parentStructure.splice(node1Index, 0, node2);\n                }\n                return true;\n            } else {\n                sibling = await this.findSiblingOfNode(node2, node1);\n                if (sibling !== null) {\n                    // Set the order of the progression levels\n                    let parentStructure = await this.findSubStructure(structure, node2);\n                    if (!parentStructure) {\n                        // This condition should never be reached.\n                        appLog('Error: No parent structure found');\n                        return false;\n                    }\n                    let node1Index = await parentStructure.findIndex(item => EcRemoteLinkedData.trimVersionFromUrl(item.obj ? item.obj.id : item.id) === EcRemoteLinkedData.trimVersionFromUrl(sibling.id));\n                    let node2Index = await parentStructure.findIndex(item => EcRemoteLinkedData.trimVersionFromUrl(item.obj ? item.obj.id : item.id) === EcRemoteLinkedData.trimVersionFromUrl(node2.id));\n                    if ((node1Index < 0) || (node1Index >= parentStructure.length) ||\n                        (node2Index < 0) || (node2Index >= parentStructure.length)) {\n                        appLog('Node index not found');\n                        return false;\n                    }\n                    node2 = ({\"obj\": parentStructure[node2Index].obj, \"children\": parentStructure[node2Index].children});\n                    if (property === \"ceterms:precedes\") {\n                        if (node1Index + 1 === node2Index) {\n                            // Nodes are already in order\n                            return false;\n                        }\n                        parentStructure.splice(node2Index, 1);\n                        node1Index = await parentStructure.findIndex(item => EcRemoteLinkedData.trimVersionFromUrl(item.obj ? item.obj.id : item.id) === EcRemoteLinkedData.trimVersionFromUrl(sibling.id));\n                        parentStructure.splice(node1Index + 1, 0, node2);\n                    } else {\n                        if (node2Index + 1 === node1Index) {\n                            // Nodes are already in order\n                            return false;\n                        }\n                        parentStructure.splice(node2Index, 1);\n                        node1Index = await parentStructure.findIndex(item => EcRemoteLinkedData.trimVersionFromUrl(item.obj ? item.obj.id : item.id) === EcRemoteLinkedData.trimVersionFromUrl(sibling.id));\n                        parentStructure.splice(node1Index, 0, node2);\n                    }\n                    return true;\n                } else {\n                    // If no sibling is found, then the common ancestor is higher up in the hierarchy.\n                    //  Search again with the node parent.\n                    if (node1[\"skos:broader\"]) {\n                        let nodeParent = await EcConcept.get(EcRemoteLinkedData.trimVersionFromUrl(node1[\"skos:broader\"]).toString());\n                        return (this.setProrgressionOrder(structure, nodeParent, node2, property));\n                    } else {\n                        // This condition should never be reached.\n                        appLog('Error: No common ancestry found');\n                        return false;\n                    }\n                }\n            }\n        },\n        findSiblingOfNode: async function(node, nibling) {\n            return new Promise(async(resolve) => {\n                let nodeParent = null;\n                let niblingParent = null;\n\n                if (node[\"skos:broader\"]) {\n                    nodeParent = EcRemoteLinkedData.trimVersionFromUrl(node[\"skos:broader\"]);\n                }\n                if (nibling[\"skos:broader\"]) {\n                    niblingParent = EcRemoteLinkedData.trimVersionFromUrl(nibling[\"skos:broader\"]);\n                }\n                if (niblingParent && nodeParent && (niblingParent.toString() === nodeParent.toString())) {\n                    // Nibling is a sibling of node\n                    resolve(nibling);\n                } else if (!node[\"skos:broader\"] && !nibling[\"skos:broader\"]) {\n                    // Nibling and node are at the top of the hierarchy amd are therefore siblings\n                    resolve(nibling);\n                } else if (!nibling[\"skos:broader\"]) {\n                    // Nibling is at the top of the hierarchy and is therefore higher up than node\n                    resolve(null);\n                } else {\n                    // Find the ancestor of nibling that is the sibling of node\n                    let niblingAncestor = await EcConcept.get(niblingParent.toString());\n                    resolve(await this.findSiblingOfNode(node, niblingAncestor));\n                }\n            });\n        },\n        findSubStructure: async function(structure, node) {\n            return new Promise(async(resolve) => {\n                if (!node[\"skos:broader\"]) {\n                    // Parent node is at the top of the container\n                    resolve(structure);\n                    return;\n                }\n                let parentId = null;\n                if (node[\"skos:broader\"].length && node[\"skos:broader\"].length > 0) {\n                    parentId = node[\"skos:broader\"][0];\n                } else {\n                    parentId = node[\"skos:broader\"];\n                }\n\n                for (var i = 0; i < structure.length; i++) {\n                    if (structure[i].children) {\n                        if (EcRemoteLinkedData.trimVersionFromUrl(structure[i].obj.id) === parentId) {\n                            resolve(structure[i].children);\n                            return;\n                        } else {\n                            // If this level is not the parent, of the target node, then go deeper...\n                            let subStructure = await this.findSubStructure(structure[i].children, node);\n                            if (subStructure) {\n                                resolve(subStructure);\n                                return;\n                            }\n                        }\n                    }\n                }\n                resolve(null);\n            });\n        },\n        // WARNING: The Daemon of OBO lingers in these here drag and move methods. The library moves the objects, and OBO will then come get you!\n        beginDrag: function(event) {\n            this.dragging = true;\n            if (event !== undefined) {\n                this.controlOnStart = event.originalEvent.ctrlKey || event.originalEvent.shiftKey;\n            }\n        },\n        endDrag: function(foo) {\n            if (foo.to.id === 'framework_drag') {\n                this.dragging = false;\n                return;\n            }\n            appLog(foo.oldIndex, foo.newIndex);\n            var toId = null;\n            var toLast = false;\n            if (this.shiftKey) {\n                this.controlOnStart = true;\n            }\n            if (foo.from.id === foo.to.id) {\n                if (foo.newIndex + 1 < this.hierarchy.length) {\n                    toId = this.hierarchy[foo.newIndex + 1].obj.shortId();\n                } else if (foo.newIndex === this.hierarchy.length - 1) {\n                    toLast = true;\n                }\n            } else {\n                if (foo.to.children[foo.newIndex] === undefined) {\n                    toId = foo.to.id;\n                } else {\n                    if (foo.newIndex + 1 < foo.to.children.length) {\n                        toId = foo.to.children[foo.newIndex + 1].id;\n                    }\n                }\n            }\n            this.move(\n                this.hierarchy[foo.oldIndex].obj.shortId(),\n                toId,\n                foo.from.id,\n                foo.to.id,\n                !this.controlOnStart, toLast);\n        },\n        setPrecedes: async function(container) {\n            return new Promise(async(resolve) => {\n                // container received should be an array - each array element containing and array of children and EcConcept obj.\n                if (container === null || container.length <= 0) {\n                    resolve(false);\n                }\n                for (let i = 0; i < container.length; i++) {\n                    if (container[i]) {\n                        if (container[i].children && container[i].children.length > 0) {\n                            if (container[i].obj[\"ceterms:precedes\"]) {\n                                delete container[i].obj[\"ceterms:precedes\"];\n                                await this.saveObject(container[i].obj);\n                            }\n                            await this.setChildrenPrecedes(container, container[i].children);\n                        } else {\n                            // leaf node - add precedes property\n                            if (i === container.length - 1) {\n                                // precedes level at another stage of the hierarchy\n                                let precedes = await this.findPrecedes(container, EcRemoteLinkedData.trimVersionFromUrl(container[i].obj.id));\n                                container[i].obj[\"ceterms:precedes\"] = EcRemoteLinkedData.trimVersionFromUrl(precedes);\n                                await this.saveObject(container[i].obj);\n                            } else {\n                                if (container[i + 1].children && container[i + 1].children.length > 0) {\n                                    let precedes = await this.findChildrenPrecedes(container[i + 1].children, container[i].obj.id, true);\n                                    if (precedes !== null) {\n                                        container[i].obj[\"ceterms:precedes\"] = EcRemoteLinkedData.trimVersionFromUrl(precedes);\n                                        await this.saveObject(container[i].obj);\n                                    }\n                                } else {\n                                    container[i].obj[\"ceterms:precedes\"] = EcRemoteLinkedData.trimVersionFromUrl(container[i + 1].obj.id);\n                                    await this.saveObject(container[i].obj);\n                                }\n                            }\n                        }\n                    }\n                }\n                resolve(true);\n            });\n        },\n        setChildrenPrecedes: async function(container, subContainer) {\n            return new Promise(async(resolve) => {\n                // container and subContainer received should both be an array - each array element containing and array of children and EcConcept obj.\n                for (let j = 0; j < subContainer.length; j++) {\n                    if (subContainer[j]) {\n                        if (subContainer[j].children && subContainer[j].children.length > 0) {\n                            if (subContainer[j].obj[\"ceterms:precedes\"]) {\n                                delete subContainer[j].obj[\"ceterms:precedes\"];\n                                await this.saveObject(subContainer[j].obj);\n                            }\n                            await this.setChildrenPrecedes(container, subContainer[j].children);\n                        } else {\n                            // leaf node - add precedes property\n                            if (j === subContainer.length - 1) {\n                                // precedes level at another stage of the hierarchy\n                                let precedes = await this.findPrecedes(container, EcRemoteLinkedData.trimVersionFromUrl(subContainer[j].obj.id));\n                                if (precedes !== null) {\n                                    subContainer[j].obj[\"ceterms:precedes\"] = EcRemoteLinkedData.trimVersionFromUrl(precedes);\n                                    await this.saveObject(subContainer[j].obj);\n                                }\n                            } else {\n                                if (subContainer[j + 1].children && subContainer[j + 1].children.length > 0) {\n                                    let precedes = await this.findChildrenPrecedes(subContainer[j + 1].children, subContainer[j].obj.id, true);\n                                    if (precedes !== null) {\n                                        subContainer[j].obj[\"ceterms:precedes\"] = EcRemoteLinkedData.trimVersionFromUrl(precedes);\n                                        await this.saveObject(subContainer[j].obj);\n                                    }\n                                } else {\n                                    subContainer[j].obj[\"ceterms:precedes\"] = EcRemoteLinkedData.trimVersionFromUrl(subContainer[j + 1].obj.id);\n                                    await this.saveObject(subContainer[j].obj);\n                                }\n                            }\n                        }\n                    }\n                }\n                resolve();\n            });\n        },\n        findPrecedes: async function(container, sourceNodeId) {\n            return new Promise(async(resolve) => {\n                // container received should be an array - each array element containing and array of children and EcConcept obj.\n                // Assumes sourceNodeId is a leaf node\n                let foundSourceNode = false;\n                if (container === null) { return null; }\n                // if (EcRemoteLinkedData.trimVersionFromUrl(container.obj.id) === sourceNodeId) { return null; }\n                for (let i = 0; i < container.length; i++) {\n                    if (!foundSourceNode && (EcRemoteLinkedData.trimVersionFromUrl(container[i].obj.id) === sourceNodeId)) {\n                        foundSourceNode = true;\n                    } else {\n                        if (container[i].children && container[i].children.length > 0) {\n                            let precedes = await this.findChildrenPrecedes(container[i].children, sourceNodeId, foundSourceNode);\n                            if (precedes) {\n                                if (precedes === sourceNodeId) {\n                                    foundSourceNode = true;\n                                } else {\n                                    resolve(precedes);\n                                }\n                            }\n                        } else {\n                            if (foundSourceNode) {\n                                // Source node has already been found. That means that this is the closeest leaf node\n                                resolve(EcRemoteLinkedData.trimVersionFromUrl(container[i].obj.id));\n                            }\n                        }\n                    }\n                }\n                resolve(null);\n            });\n        },\n        findChildrenPrecedes: async function(subContainer, sourceNodeId, foundSourceNode) {\n            return new Promise(async(resolve) => {\n                // subContainer received should be an array - each array element containing and array of children and EcConcept obj.\n                let foundChildSourceNode = foundSourceNode;\n                if (subContainer === null) { return null; }\n                for (let j = 0; j < subContainer.length; j++) {\n                    if (!foundChildSourceNode && (EcRemoteLinkedData.trimVersionFromUrl(subContainer[j].obj.id) === sourceNodeId)) {\n                        foundChildSourceNode = true;\n                    } else {\n                        if (subContainer[j].children && subContainer[j].children.length > 0) {\n                            let precedes = await this.findChildrenPrecedes(subContainer[j].children, sourceNodeId, foundSourceNode);\n                            if (precedes) {\n                                if (precedes === sourceNodeId) {\n                                    foundChildSourceNode = true;\n                                } else {\n                                    resolve(precedes);\n                                }\n                            }\n                        } else {\n                            if (foundChildSourceNode) {\n                                // Source node has already been found. That means that this is the closeest leaf node\n                                resolve(EcRemoteLinkedData.trimVersionFromUrl(subContainer[j].obj.id));\n                            }\n                        }\n                    }\n                }\n                if (foundChildSourceNode) {\n                    resolve(sourceNodeId);\n                } else {\n                    resolve(null);\n                }\n            });\n        },\n        setPrecededBy: async function(container) {\n            return new Promise(async(resolve) => {\n                // container received should be an array - each array element containing and array of children and EcConcept obj.\n                if (container === null || container.length <= 0) {\n                    resolve(false);\n                }\n                for (let i = container.length - 1; i >= 0; i--) {\n                    if (container[i]) {\n                        if (container[i].children && container[i].children.length > 0) {\n                            if (container[i].obj[\"ceterms:precededBy\"]) {\n                                delete container[i].obj[\"ceterms:precededBy\"];\n                                await this.saveObject(container[i].obj);\n                            }\n                            await this.setChildrenPrecededBy(container, container[i].children, i);\n                        } else {\n                            // leaf node - add precededBy property\n                            if (i === 0) {\n                                // precededBy level at another stage of the hierarchy\n                                let precededBy = await this.findPrecededBy(container, EcRemoteLinkedData.trimVersionFromUrl(container[i].obj.id));\n                                if (precededBy !== null) {\n                                    container[i].obj[\"ceterms:precededBy\"] = EcRemoteLinkedData.trimVersionFromUrl(precededBy);\n                                    await this.saveObject(container[i].obj);\n                                }\n                            } else {\n                                if (container[i - 1].children && container[i - 1].children.length > 0) {\n                                    let precededBy = await this.findChildrenPrecededBy(container[i - 1].children, container[i].obj.id, true);\n                                    if (precededBy !== null) {\n                                        container[i].obj[\"ceterms:precededBy\"] = EcRemoteLinkedData.trimVersionFromUrl(precededBy);\n                                        await this.saveObject(container[i].obj);\n                                    }\n                                } else {\n                                    container[i].obj[\"ceterms:precededBy\"] = EcRemoteLinkedData.trimVersionFromUrl(container[i - 1].obj.id);\n                                    await this.saveObject(container[i].obj);\n                                }\n                            }\n                        }\n                    }\n                }\n                resolve(true);\n            });\n        },\n        setChildrenPrecededBy: async function(container, subContainer) {\n            return new Promise(async(resolve) => {\n                // container and subContainer received should both be an array - each array element containing and array of children and EcConcept obj.\n                for (let j = subContainer.length - 1; j >= 0; j--) {\n                    if (subContainer[j]) {\n                        if (subContainer[j].children && subContainer[j].children.length > 0) {\n                            if (subContainer[j].obj[\"ceterms:precededBy\"]) {\n                                delete subContainer[j].obj[\"ceterms:precededBy\"];\n                                await this.saveObject(subContainer[j].obj);\n                            }\n                            await this.setChildrenPrecededBy(container, subContainer[j].children);\n                        } else {\n                            // leaf node - add precededBy property\n                            if (j === 0) {\n                                // precededBy level at another stage of the hierarchy\n                                let precededBy = await this.findPrecededBy(container, EcRemoteLinkedData.trimVersionFromUrl(subContainer[j].obj.id));\n                                if (precededBy !== null) {\n                                    subContainer[j].obj[\"ceterms:precededBy\"] = EcRemoteLinkedData.trimVersionFromUrl(precededBy);\n                                    await this.saveObject(subContainer[j].obj);\n                                }\n                            } else {\n                                if (subContainer[j - 1].children && subContainer[j - 1].children.length > 0) {\n                                    let precededBy = await this.findChildrenPrecededBy(subContainer[j - 1].children, subContainer[j].obj.id, true);\n                                    if (precededBy !== null) {\n                                        subContainer[j].obj[\"ceterms:precededBy\"] = EcRemoteLinkedData.trimVersionFromUrl(precededBy);\n                                        await this.saveObject(subContainer[j].obj);\n                                    }\n                                } else {\n                                    subContainer[j].obj[\"ceterms:precededBy\"] = EcRemoteLinkedData.trimVersionFromUrl(subContainer[j - 1].obj.id);\n                                    await this.saveObject(subContainer[j].obj);\n                                }\n                            }\n                        }\n                    }\n                }\n                resolve();\n            });\n        },\n        findPrecededBy: async function(container, sourceNodeId) {\n            return new Promise(async(resolve) => {\n                // container received should be an array - each array element containing and array of children and EcConcept obj.\n                // Assumes sourceNodeId is a leaf node\n                let foundSourceNode = false;\n                if (container === null) { return null; }\n                for (let i = container.length - 1; i >= 0; i--) {\n                    if (!foundSourceNode && (EcRemoteLinkedData.trimVersionFromUrl(container[i].obj.id) === sourceNodeId)) {\n                        foundSourceNode = true;\n                    } else {\n                        if (container[i].children && container[i].children.length > 0) {\n                            let precededBy = await this.findChildrenPrecededBy(container[i].children, sourceNodeId, foundSourceNode);\n                            if (precededBy) {\n                                if (precededBy === sourceNodeId) {\n                                    foundSourceNode = true;\n                                } else {\n                                    resolve(precededBy);\n                                }\n                            }\n                        } else {\n                            if (foundSourceNode) {\n                                // Source node has already been found. That means that this is the closeest leaf node\n                                resolve(EcRemoteLinkedData.trimVersionFromUrl(container[i].obj.id));\n                            }\n                        }\n                    }\n                }\n                resolve(null);\n            });\n        },\n        findChildrenPrecededBy: async function(subContainer, sourceNodeId, foundSourceNode) {\n            return new Promise(async(resolve) => {\n                // subContainer received should be an array - each array element containing and array of children and EcConcept obj.\n                let foundChildSourceNode = foundSourceNode;\n                if (subContainer === null) { return null; }\n                for (let j = subContainer.length - 1; j >= 0; j--) {\n                    if (!foundChildSourceNode && (EcRemoteLinkedData.trimVersionFromUrl(subContainer[j].obj.id) === sourceNodeId)) {\n                        foundChildSourceNode = true;\n                    } else {\n                        if (subContainer[j].children && subContainer[j].children.length > 0) {\n                            let precededBy = await this.findChildrenPrecededBy(subContainer[j].children, sourceNodeId, foundSourceNode);\n                            if (precededBy) {\n                                if (precededBy === sourceNodeId) {\n                                    foundChildSourceNode = true;\n                                } else {\n                                    resolve(precededBy);\n                                }\n                            }\n                        } else {\n                            if (foundChildSourceNode) {\n                                // Source node has already been found. That means that this is the closeest leaf node\n                                resolve(EcRemoteLinkedData.trimVersionFromUrl(subContainer[j].obj.id));\n                            }\n                        }\n                    }\n                }\n                if (foundChildSourceNode) {\n                    resolve(sourceNodeId);\n                } else {\n                    resolve(null);\n                }\n            });\n        },\n        saveObject: async function(obj) {\n            return new Promise(async(resolve) => {\n                this.repo.saveTo(obj, function() {\n                    resolve();\n                }, appError);\n            });\n        },\n        move: async function(fromId, toId, fromContainerId, toContainerId, removeOldRelations, toLast) {\n            this.once = true;\n            var me = this;\n            if (fromContainerId === toContainerId) {\n                var container = toContainerId ? await EcRepository.get(toContainerId) : this.container;\n                var property = \"skos:narrower\";\n                if (container.type === \"ConceptScheme\") {\n                    container = this.container;\n                    property = \"skos:hasTopConcept\";\n                }\n                var initialValue = container[property] ? container[property].slice() : null;\n                var fromIndex = container[property].indexOf(fromId);\n                container[property].splice(fromIndex, 1);\n                if (toId == null || toId === undefined) {\n                    if (!EcArray.isArray(container[property])) {\n                        container[property] = [];\n                    }\n                    container[property].push(fromId);\n                } else {\n                    if (toLast) {\n                        container[property].push(fromId);\n                    } else {\n                        var toIndex = container[property].indexOf(toId);\n                        container[property].splice(toIndex, 0, fromId);\n                    }\n                }\n                me.$store.commit('editor/addEditsToUndo', [{operation: \"update\", id: container.shortId(), fieldChanged: [property], initialValue: [initialValue]}]);\n                container[\"schema:dateModified\"] = new Date().toISOString();\n                if (this.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[container.id] !== true) {\n                    container = await EcEncryptedValue.toEncryptedValue(container);\n                }\n                this.repo.saveTo(container, function() {\n                    me.computeHierarchy(false);\n                }, appError);\n            } else {\n                var moveComp = await EcConcept.get(fromId);\n                var fromContainer = fromContainerId ? await EcRepository.get(fromContainerId) : this.container;\n                var fromProperty = \"skos:narrower\";\n                var fromProperty2 = \"skos:broader\";\n                var toContainer = toContainerId ? await EcRepository.get(toContainerId) : this.container;\n                var toProperty = \"skos:narrower\";\n                var toProperty2 = \"skos:broader\";\n                if (fromContainer.type === \"ConceptScheme\") {\n                    fromContainer = this.container;\n                    fromProperty = \"skos:hasTopConcept\";\n                    fromProperty2 = \"skos:topConceptOf\";\n                }\n                if (toContainer.type === \"ConceptScheme\") {\n                    toContainer = this.container;\n                    toProperty = \"skos:hasTopConcept\";\n                    toProperty2 = \"skos:topConceptOf\";\n                }\n                var fromIndex = fromContainer[fromProperty].indexOf(fromId);\n                var fromPropInitialValue = fromContainer[fromProperty].slice();\n                var fromProp2InitialValue = moveComp[fromProperty2] ? moveComp[fromProperty2].slice() : null;\n                var toPropInitialValue = toContainer[toProperty] ? toContainer[toProperty].slice() : null;\n                var toProp2InitialValue = moveComp[toProperty2] ? moveComp[toProperty2].slice() : null;\n                if (removeOldRelations) {\n                    fromContainer[fromProperty].splice(fromIndex, 1);\n                }\n                if (fromContainerId && moveComp[fromProperty2]) {\n                    if (removeOldRelations) {\n                        EcArray.setRemove(moveComp[fromProperty2], fromContainerId);\n                    }\n                    if (moveComp[fromProperty2].length === 0) {\n                        delete moveComp[fromProperty2];\n                    }\n                } else {\n                    delete moveComp[fromProperty2];\n                }\n                fromContainer[\"schema:dateModified\"] = new Date().toISOString();\n                if (this.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[fromContainer.id] !== true) {\n                    fromContainer = await EcEncryptedValue.toEncryptedValue(fromContainer);\n                }\n                this.repo.saveTo(fromContainer, async function() {\n                    if (toId == null || toId === undefined) {\n                        if (!EcArray.isArray(toContainer[toProperty])) {\n                            toContainer[toProperty] = [];\n                        }\n                        toContainer[toProperty].push(fromId);\n                    } else {\n                        var toIndex = toContainer[toProperty].indexOf(toId);\n                        toContainer[toProperty].splice(toIndex, 0, fromId);\n                    }\n                    if (toContainer.type === \"ConceptScheme\") {\n                        moveComp[toProperty2] = toContainerId;\n                    } else {\n                        if (!EcArray.isArray(moveComp[toProperty2])) {\n                            moveComp[toProperty2] = [];\n                        }\n                        if (toContainerId) {\n                            moveComp[toProperty2].push(toContainerId);\n                        }\n                    }\n                    me.$store.commit('editor/addEditsToUndo', [\n                        {operation: \"update\", id: fromContainer.shortId(), fieldChanged: [fromProperty], initialValue: [fromPropInitialValue]},\n                        {operation: \"update\", id: toContainer.shortId(), fieldChanged: [toProperty], initialValue: [toPropInitialValue]},\n                        {operation: \"update\", id: moveComp.shortId(), fieldChanged: [fromProperty2, toProperty2], initialValue: [fromProp2InitialValue, toProp2InitialValue]}\n                    ]);\n                    toContainer[\"schema:dateModified\"] = new Date().toISOString();\n                    moveComp[\"schema:dateModified\"] = new Date().toISOString();\n                    if (me.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[toContainer.id] !== true) {\n                        toContainer = await EcEncryptedValue.toEncryptedValue(toContainer);\n                    }\n                    if (me.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[moveComp.id] !== true) {\n                        moveComp = await EcEncryptedValue.toEncryptedValue(moveComp);\n                    }\n                    me.repo.saveTo(toContainer, function() {\n                        me.repo.saveTo(moveComp, appLog, appError);\n                        me.computeHierarchy(false);\n                    }, appLog);\n                }, appError);\n            }\n            this.dragging = false;\n        },\n        add: async function(containerId, previousSibling) {\n            var me = this;\n            var c = new EcConcept();\n            if (this.queryParams.newObjectEndpoint) {\n                c.generateShortId(this.queryParams.newObjectEndpoint);\n            } else {\n                c.generateId(this.repo.selectedServer);\n            }\n            c[\"subType\"] = 'Progression';\n            c[\"schema:dateCreated\"] = new Date().toISOString();\n            c[\"schema:dateModified\"] = new Date().toISOString();\n            if (EcIdentityManager.default.ids != null && EcIdentityManager.default.ids.length > 0) {\n                c.addOwner(EcIdentityManager.default.ids[0].ppk.toPk());\n            }\n            if (this.container.owner && this.container.owner.length > 0) {\n                for (var j = 0; j < this.container.owner.length; j++) {\n                    var owner = this.container.owner[j];\n                    c.addOwner(EcPk.fromPem(owner));\n                }\n            }\n            if (this.container.reader && this.container.reader.length > 0) {\n                for (var j = 0; j < this.container.reader.length; j++) {\n                    var reader = this.container.reader[j];\n                    r.addReader(EcPk.fromPem(reader));\n                }\n            }\n            this.setDefaultLanguage();\n            c[\"skos:prefLabel\"] = {\"@language\": this.$store.state.editor.defaultLanguage, \"@value\": \"New Progression Level\"};\n            c[\"ceasn:inProgressionModel\"] = this.container.shortId();\n            if (containerId === this.container.shortId()) {\n                var initialValue = this.container[\"skos:hasTopConcept\"] ? this.container[\"skos:hasTopConcept\"].slice() : null;\n                if (!EcArray.isArray(this.container[\"skos:hasTopConcept\"])) {\n                    this.container[\"skos:hasTopConcept\"] = [];\n                }\n                if (previousSibling == null || previousSibling === undefined) {\n                    this.container[\"skos:hasTopConcept\"].push(c.shortId());\n                } else {\n                    // Insert immediately after the sibling\n                    var index = this.container[\"skos:hasTopConcept\"].indexOf(previousSibling);\n                    this.container[\"skos:hasTopConcept\"].splice(index + 1, 0, c.shortId());\n                }\n                c[\"skos:topConceptOf\"] = this.container.shortId();\n                me.$store.commit('editor/addEditsToUndo', [\n                    {operation: \"addNew\", id: c.shortId()},\n                    {operation: \"update\", id: this.container.shortId(), fieldChanged: [\"skos:hasTopConcept\"], initialValue: [initialValue]}\n                ]);\n                this.container[\"schema:dateModified\"] = new Date().toISOString();\n                c[\"schema:dateModified\"] = new Date().toISOString();\n                if (this.$store.state.editor.private === true) {\n                    c = await EcEncryptedValue.toEncryptedValue(c);\n                    if (EcEncryptedValue.encryptOnSaveMap[me.container.id] !== true) {\n                        me.container = await EcEncryptedValue.toEncryptedValue(me.container);\n                    }\n                }\n\n                try {\n                    await this.repo.multiput([c, me.container]);\n                    me.once = true;\n                } catch (e) {\n                    appError(e);\n                }\n            } else {\n                c[\"skos:broader\"] = [containerId];\n                var parent = await EcConcept.get(containerId);\n                var initialValue = parent[\"skos:narrower\"] ? parent[\"skos:narrower\"].slice() : null;\n                if (!EcArray.isArray(parent[\"skos:narrower\"])) {\n                    parent[\"skos:narrower\"] = [];\n                }\n                if (previousSibling == null || previousSibling === undefined) {\n                    parent[\"skos:narrower\"].push(c.shortId());\n                } else {\n                    // Insert immediately after the sibling\n                    var index = parent[\"skos:narrower\"].indexOf(previousSibling);\n                    parent[\"skos:narrower\"].splice(index + 1, 0, c.shortId());\n                }\n                me.$store.commit('editor/addEditsToUndo', [\n                    {operation: \"addNew\", id: c.shortId()},\n                    {operation: \"update\", id: parent.shortId(), fieldChanged: [\"skos:narrower\"], initialValue: [initialValue]}\n                ]);\n                this.container[\"schema:dateModified\"] = new Date().toISOString();\n                c[\"schema:dateModified\"] = new Date().toISOString();\n                parent[\"schema:dateModified\"] = new Date().toISOString();\n                if (this.$store.state.editor.private === true) {\n                    c = await EcEncryptedValue.toEncryptedValue(c);\n                    if (EcEncryptedValue.encryptOnSaveMap[parent.id] !== true) {\n                        parent = await EcEncryptedValue.toEncryptedValue(parent);\n                    }\n                    if (EcEncryptedValue.encryptOnSaveMap[me.container.id] !== true) {\n                        me.container = await EcEncryptedValue.toEncryptedValue(me.container);\n                    }\n                }\n                try {\n                    await this.repo.multiput([c, parent, me.container]);\n                    me.once = true;\n                } catch (e) {\n                    appError(e);\n                }\n            }\n            this.$store.commit(\"editor/newCompetency\", c.shortId());\n            appLog(\"Added node: \", JSON.parse(c.toJson()));\n        },\n        select: function(objId, checked) {\n            if (checked) {\n                EcArray.setAdd(this.selectedArray, objId);\n            } else {\n                EcArray.setRemove(this.selectedArray, objId);\n            }\n        },\n        onDraggableCheck: function(checked) {\n            this.isDraggable = checked;\n        },\n        cancelImport: function() {\n            this.deleteObject(this.container);\n            this.$store.dispatch('app/clearImport');\n        },\n        openFramework: async function() {\n            var f = await EcConceptScheme.get(this.container.shortId());\n            this.$store.commit('editor/framework', f);\n            this.$router.push({name: \"progressionModel\", params: {frameworkId: this.container.id}});\n        },\n        onClickCreateNew: async function() {\n            let parent = this.container.shortId();\n            if (this.selectedArray.length === 1) {\n                parent = this.selectedArray[0];\n            }\n\n            this.loading = true;\n            try {\n                await this.add(parent, null);\n            } catch (e) {\n                appError(e);\n            }\n            this.loading = false;\n\n            this.addingNode = false;\n        },\n        deleteSelected: async function() {\n            let item = await EcRepository.get(this.selectedArray[0]);\n            this.deleteLevel(item);\n            this.selectedArray.splice(0, this.selectedArray.length);\n        },\n        deleteLevel: function(thing) {\n            appLog(\"deleting \" + thing.id);\n            this.deleteLevelInner(thing);\n            this.framework[\"schema:dateModified\"] = new Date().toISOString();\n            this.$store.commit('editor/selectedCompetency', null);\n        },\n        deleteLevelInner: async function(c) {\n            var me = this;\n            let editsToUndo = [];\n            if (c[\"skos:broader\"] != null) {\n                for (var i = 0; i < c[\"skos:broader\"].length; i++) {\n                    try {\n                        let level = await EcConcept.get(c[\"skos:broader\"][i]);\n                        var initialValue = level[\"skos:narrower\"].slice();\n                        EcArray.setRemove(level[\"skos:narrower\"], c.shortId());\n                        level[\"schema:dateModified\"] = new Date().toISOString();\n                        editsToUndo.push({operation: \"update\", id: level.shortId(), fieldChanged: [\"skos:narrower\"], initialValue: [initialValue]});\n                        if (me.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[level.id] !== true) {\n                            level = await EcEncryptedValue.toEncryptedValue(level);\n                        }\n                        await repo.saveTo(level);\n                        me.$store.commit('editor/framework', me.framework);\n                    } catch (e) {\n                        appError(e);\n                    }\n                }\n            }\n            if (c[\"skos:narrower\"] != null) {\n                for (var i = 0; i < c[\"skos:narrower\"].length; i++) {\n                    try {\n                        let level = await EcConcept.get(c[\"skos:narrower\"][i]);\n                        me.deleteLevelInner(level);\n                    } catch (e) {\n                        appError(e);\n                    }\n                }\n            }\n            if (c[\"skos:topConceptOf\"] != null) {\n                try {\n                    var initialValue = this.framework[\"skos:hasTopConcept\"].slice();\n                    EcArray.setRemove(this.framework[\"skos:hasTopConcept\"], c.shortId());\n                    editsToUndo.push({operation: \"update\", id: this.framework.shortId(), fieldChanged: [\"skos:hasTopConcept\"], initialValue: [initialValue]});\n                    var framework = this.framework;\n                    framework[\"schema:dateModified\"] = new Date().toISOString();\n                    if (this.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[framework.id] !== true) {\n                        framework = await EcEncryptedValue.toEncryptedValue(framework);\n                    }\n                    await repo.saveTo(framework);\n                    me.$store.commit('editor/framework', me.framework);\n                } catch (e) {\n                    appError(e);\n                }\n            }\n            this.spitEvent(\"levelDeleted\", c.shortId(), \"editFrameworkPage\");\n            editsToUndo.push({operation: \"delete\", obj: c});\n            repo.deleteRegistered(c, function() {\n                me.$store.commit('editor/framework', me.framework);\n                me.$store.commit('editor/addEditsToUndo', JSON.parse(JSON.stringify(editsToUndo)));\n                editsToUndo.splice(0, editsToUndo.length);\n            }, appError);\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\">\n    @import './../../scss/variables.scss';\n\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProgressionHierarchy.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProgressionHierarchy.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProgressionHierarchy.vue?vue&type=template&id=8c6e2d48&\"\nimport script from \"./ProgressionHierarchy.vue?vue&type=script&lang=js&\"\nexport * from \"./ProgressionHierarchy.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ProgressionHierarchy.vue?vue&type=style&index=0&id=8c6e2d48&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProgressionHierarchy.vue?vue&type=style&index=0&id=8c6e2d48&prod&lang=scss&\"","import common from '@/mixins/common.js';\nexport default {\n    mixins: [common],\n    methods: {\n        removeObject: function(thing) {\n            // Remove from container but don't delete\n            appLog(\"removing \" + thing.id);\n            var me = this;\n            var thisFramework = this.$store.getters['editor/framework'];\n            var initialCompetencies = thisFramework.competency ? thisFramework.competency.slice() : null;\n            var initialRelations = thisFramework.relation ? thisFramework.relation.slice() : null;\n            var initialLevels = thisFramework.level ? thisFramework.level.slice() : null;\n            thisFramework[\"schema:dateModified\"] = new Date().toISOString();\n            thisFramework.removeCompetency(thing.shortId(), async function() {\n                var framework = me.framework;\n                me.$store.commit('editor/addEditsToUndo', [{operation: \"update\", id: framework.shortId(), fieldChanged: [\"competency\", \"relation\", \"level\"], initialValue: [initialCompetencies, initialRelations, initialLevels]}]);\n                if (me.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[f.id] !== true) {\n                    framework = await EcEncryptedValue.toEncryptedValue(framework);\n                }\n                window.repo.saveTo(framework, function() {\n                    me.$store.commit('editor/framework', thisFramework);\n                }, appError);\n            }, appLog);\n        },\n        deleteObject: function(thing) {\n            appLog(\"deleting \" + thing.id);\n            var me = this;\n            var framework = this.$store.getters['editor/framework'];\n            if (thing.shortId() === framework.shortId()) {\n                // delete framework\n                window.repo.deleteRegistered(framework, function(success) {\n                    me.spitEvent(\"frameworkDeleted\", framework.shortId(), \"editFrameworkSection\");\n                    // Delete the framework, delete all non-used stuff.\n                    if (framework.competency != null) {\n                        for (var i = 0; i < framework.competency.length; i++) {\n                            me.conditionalDelete(framework.competency[i]);\n                        }\n                    }\n                    if (framework.relation != null) {\n                        for (var i = 0; i < framework.relation.length; i++) {\n                            me.conditionalDelete(framework.relation[i]);\n                        }\n                    }\n                    if (framework.level != null) {\n                        for (var i = 0; i < framework.level.length; i++) {\n                            me.conditionalDelete(framework.level[i]);\n                        }\n                    }\n                    me.$store.commit('editor/framework', null);\n                    if (me.importType) {\n                        // Calling function from import page\n                        me.$store.commit('app/importFramework', null);\n                    } else {\n                        me.$router.push({name: \"frameworks\"});\n                    }\n                }, appLog);\n            } else {\n                // Delete competency and relations\n                var initialCompetencies = framework.competency ? framework.competency.slice() : null;\n                var initialRelations = framework.relation ? framework.relation.slice() : null;\n                var initialLevels = framework.level ? framework.level.slice() : null;\n                this.$store.commit('editor/selectedCompetency', thing);\n                framework[\"schema:dateModified\"] = new Date().toISOString();\n                framework.removeCompetency(thing.shortId(), async function() {\n                    framework.removeLevel(thing.shortId());\n                    me.$store.commit('editor/addEditsToUndo', [\n                        {operation: \"delete\", obj: thing},\n                        {operation: \"update\", id: framework.shortId(), fieldChanged: [\"competency\", \"relation\", \"level\"], initialValue: [initialCompetencies, initialRelations, initialLevels], changedValue: [framework.competency, framework.relation, framework.level]}\n                    ]);\n                    me.conditionalDelete(thing.shortId());\n                    me.spitEvent(\"competencyDeleted\", thing.shortId(), \"editFrameworkSection\");\n                    me.$store.commit('editor/selectedCompetency', null);\n                    var frameworkToSave = framework;\n                    if (me.$store.state.editor.private === true && EcEncryptedValue.encryptOnSaveMap[framework.id] !== true) {\n                        frameworkToSave = await EcEncryptedValue.toEncryptedValue(framework);\n                    }\n                    window.repo.saveTo(frameworkToSave, function() {\n                        me.$store.commit('editor/framework', framework);\n                    }, appError);\n                }, appLog);\n            }\n        }\n    }\n};"],"sourceRoot":""}