(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{692:function(a,s,t){"use strict";t.r(s);var e=t(74),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"ims-open-badge-2-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ims-open-badge-2-0"}},[a._v("#")]),a._v(" IMS Open Badge 2.0")]),a._v(" "),s("p",[a._v("The IMS Open Badge Adapter converts assertions that have been shared with the adapter into IMS Open Badge assertions.")]),a._v(" "),s("p",[s("strong",[a._v("Endpoints")])]),a._v(" "),s("div",{staticClass:"language-hs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GET")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("api")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("badge")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("assertion")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/<")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("assertion")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- Generate Open Badge Assertion for a competency assertion")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GET")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("api")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("badge")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/<")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("competency")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- Generate Open Badge Class for a competency")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GET")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("api")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("badge")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("profile")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/<")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("key")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("fingerprint")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- Generate Open Badge Profile for an identifier and Person object")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GET")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("api")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("badge")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("cryptographicKey")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/<")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("key")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("fingerprint")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- Generate Open Badge Cryptographic Key for an identifier and Person object")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GET")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("api")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("badge")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("pk")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- Get public key of the Open Badge Adapter")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);